<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://finlandaddress.github.io/html/category/article-558.htm" />
    <title>JS 中 对象 基础认识_在线工具 - FinlandAddress</title>
        <meta charset="utf-8">
    <link rel="icon" href="/assets/addons/xcblog/img/finlandaddress/favicon.ico" type="image/x-icon"/>
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&display=swap" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css2?family=Raleway:wght@400;500;600;700;800;900&display=swap" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/font-awesome.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/animate.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/owl.carousel.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/owl.theme.default.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/magnific-popup.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/flaticon.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/style.css" rel="stylesheet" />
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?a045e5bb3ae69629060e7ce2a4b98902";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <nav class="navbar navbar-expand-lg navbar-dark ftco_navbar ftco-navbar-light site-navbar-target" id="ftco-navbar">
        <div class="container">
                        <a class="navbar-brand" href="/">Finland Address<span></span></a>
            
            <button class="navbar-toggler js-fh5co-nav-toggle fh5co-nav-toggle" type="button" data-toggle="collapse" data-target="#ftco-nav" aria-controls="ftco-nav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="oi oi-menu"></span> MENU
            </button>
            <div class="collapse navbar-collapse" id="ftco-nav">
                <ul class="navbar-nav nav ml-auto">
                	                    <li class="nav-item"><a href="/" class="nav-link"><span>首页</span></a></li>
                                        <li class="nav-item"><a href="/html/category/" class="nav-link"><span>文章分类</span></a></li>
                                        <li class="nav-item"><a href="#" class="nav-link"><span>关于</span></a></li>
                    <li class="nav-item"><a href="#" class="nav-link"><span>联系</span></a></li>
                </ul>
            </div>
        </div>
    </nav>
    <section class="hero-wrap" style="height:350px;overflow: hidden;">
        <div class="overlay"></div>
        <div class="container-fluid px-0">
            <div class="row d-md-flex no-gutters slider-text align-items-center js-fullheight justify-content-end">
                <img class="one-third js-fullheight align-self-end order-md-last img-fluid" src="/assets/addons/xcblog/img/finlandaddress/undraw_book_lover_mkck.svg" alt="" style="opacity: 0.5;">
                <div class="one-forth d-flex align-items-center ftco-animate js-fullheight">
                    <div class="text" style="top: 30%;min-width: 70%;">
                        <h1>JS 中 对象 基础认识_在线工具</h1>
                        <p>
                            <a href="/">首页</a> / <a href="/html/category/">文章分类</a> / <span>正文</span>
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <section class="ftco-about img ftco-section" id="about-section">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                	  				  				  				<p><span style="font-size: 18px">俗话说：“万物皆对象”，在 Javascript&nbsp; 中除了原始值几乎所有的东西都可以看做对象：</span></p> <ul> <li><span style="font-size: 18px">布尔是对象（<em>new</em> 关键词定义）</span></li> <li><span style="font-size: 18px">数字是对象（<em>new</em> 关键词定义）</span></li> <li><span style="font-size: 18px">字符串是对象（<em>new</em> 关键词定义）</span></li> <li><span style="font-size: 18px">日期永远都是对象</span></li> <li><span style="font-size: 18px">算术永远都是对象</span></li> <li><span style="font-size: 18px">正则表达式永远都是对象</span></li> <li><span style="font-size: 18px">数组永远都是对象</span></li> <li><span style="font-size: 18px">函数永远都是对象</span></li> <li><span style="font-size: 18px">对象永远都是对象</span></li> </ul> <h1>一、什么是原始值</h1> <p><span style="font-size: 18px">Javascript 中原始值是指没有属性和方法的值。</span></p> <p><span style="font-size: 18px">原始数据类型（拥有原始值的类型）：</span></p> <ul> <li><span style="font-size: 18px">string</span></li> <li><span style="font-size: 18px">number</span></li> <li><span style="font-size: 18px">boolean</span></li> <li><span style="font-size: 18px">null</span></li> <li><span style="font-size: 18px">undefined</span></li> </ul> <h1>二、什么是对象</h1> <p><span style="font-size: 18px">“万物皆对象”，在 Java 中对象的定义：对象就是存在的具体实体，具有明确定义的状态和行为，是面向对象编程的核心，用来描述现实世界中的实体，为计算机应用程序提供实体基础，也是完成特定任务一个封装。</span></p> <p><span style="font-size: 18px">Javascript 中的<strong><span style="background-color: rgba(191, 237, 210, 1)">对象是包含变量的变量，</span></strong>但是对象能够包含很多值。可以理解为：<strong><span style="background-color: rgba(191, 237, 210, 1)">对象是属性和方法的命名值得容器<br /></span></strong></span></p> <pre class="language-javascript"><code>var person = {firstName:"Coder", lastName:"Yarn", age:22, eyeColor:"black"};</code></pre> <p><span style="font-size: 18px"></span></p> <p><span style="font-size: 18px"><strong>对象命名值</strong>即<strong>对象属性</strong></span></p> <table class="dataintable" style="width: 55.8363%"> <tbody> <tr> <th style="width: 31.5789%">属性</th> <th style="width: 68.4211%">值</th> </tr> <tr> <td style="width: 31.5789%">firstName</td> <td style="width: 68.4211%">Coder</td> </tr> <tr> <td style="width: 31.5789%">lastName</td> <td style="width: 68.4211%">Yarn</td> </tr> <tr> <td style="width: 31.5789%">age</td> <td style="width: 68.4211%">22</td> </tr> <tr> <td style="width: 31.5789%">eyeColor</td> <td style="width: 68.4211%">black</td> </tr> </tbody> </table> <p><span style="font-size: 18px"><strong>对象方法</strong>：方法是可以在对象上执行的<em>动作，即在对象身上发生的事件</em>。</span></p> <table class="dataintable" style="width: 52.4669%"> <tbody> <tr> <td style="width: 19.6389%"><strong>属性</strong></td> <td style="width: 80.363%"><strong>方法</strong></td> </tr> <tr> <td style="width: 19.6389%">fullName</td> <td style="width: 80.363%">function() {return this.firstName + " " + this.lastName;}</td> </tr> </tbody> </table> <h1>三、对象的创建</h1> <p><span style="font-size: 18px">创建对象主要三种方法：</span></p> <ul> <li><span style="font-size: 18px"><span style="font-size: 18px">对象字面量；</span></span> <pre class="language-javascript"><code>var person = {     firstName:"Coder",      lastName:"Yarn",      age:22,      eyeColor:"black",     fullName:function() {         return this.firstName + " " + this.lastName;     }, };</code></pre> </li> <li><span style="font-size: 18px"><span style="font-size: 18px">new object();</span></span> <pre class="language-javascript"><code>let person = new Object();     person.firstName = "Coder";      person.lastName = "Yarn";     person.age = 22;      person.eyeColor = "black";     person.fullName = function() {         return this.firstName + " " + this.lastName;     };</code></pre> </li> <li><span style="font-size: 18px"><span style="font-size: 18px">自定义构造函数；</span></span> <pre class="language-javascript"><code>function Person(){     constructor(firstName,lastName,age,eyeColor){         this.firstName = firstName;         this.lastName = lastName;         this.age = age;         this.eyeColor = eyeColor;     };     this.fullName = function() {         return this.firstName + " " + this.lastName;     }; };  var person1 = new Person("Coder","Yarn",22,"black");  console.log(personl); console.log(person1.fullName());  //打印的结果 Coder Yarn 22 black Coder Yarn</code></pre> </li> </ul> <p><span style="font-size: 18px">注意：出于简易性、可读性和执行速度的考虑不会使用第二种方法（new Object()），而是使用第一种创建方法（对象字面量方法）。</span></p> <p><span style="font-size: 18px">在 ES5 中为了简化代码，将对象共同拥有的属性和方法都放在同一个函数中，这个函数就是我们自定义的构造函数，即 Java 中的类，然后可以通过 new 一个实例对象来使用这些属性和方法，不过这种方法特别地浪费内存。 ES6 后几乎都使用对象字面量方法来创建对象。</span></p> 			
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-557.htm">SpringBoot（3） &#8211; SpringApplication（3） &#8211; 自定义FailureAnalyzer</a></p>
                                                <p>下一个：<a href="/html/category/article-559.htm">JavaScript如何查找两个字符串之间的共享元素</a></p>
                                            </div>

                                    </div>
                <div class="col-md-3">
                	<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-770.htm" title="win11系统怎么更改屏幕刷新率">win11系统怎么更改屏幕刷新率</a></li>
                        <li class="py-2"><a href="/html/category/article-788.htm" title="深入浅出Vue3 Composition API">深入浅出Vue3 Composition API</a></li>
                        <li class="py-2"><a href="/html/category/article-780.htm" title="@RequestBody某些属性值得不到">@RequestBody某些属性值得不到</a></li>
                        <li class="py-2"><a href="/html/category/article-754.htm" title="手把手带你入门链表的基本操作及其优化">手把手带你入门链表的基本操作及其优化</a></li>
                        <li class="py-2"><a href="/html/category/article-743.htm" title="EditText 不显示光标  光标消失">EditText 不显示光标  光标消失</a></li>
                        <li class="py-2"><a href="/html/category/article-751.htm" title="Azure Service Fabric 踩坑日志_在线工具">Azure Service Fabric 踩坑日志_在线工具</a></li>
                        <li class="py-2"><a href="/html/category/article-785.htm" title="C语言程序设计——用户密码输入与判断">C语言程序设计——用户密码输入与判断</a></li>
                        <li class="py-2"><a href="/html/category/article-752.htm" title="jpa 原生SQL写法">jpa 原生SQL写法</a></li>
                        <li class="py-2"><a href="/html/category/article-766.htm" title="Java：线程的三种中断方式">Java：线程的三种中断方式</a></li>
                        <li class="py-2"><a href="/html/category/article-1355.htm" title="字符串连接的Java程序。">字符串连接的Java程序。</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">54</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
        <footer class="ftco-footer ftco-section">
        <div class="container">
            <div class="row">
                <div class="col-md-12 text-center">
                    <p>
                        FinlandAddress 版权所有
                        <br />
                        Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </footer>
    <!-- loader -->
    <div id="ftco-loader" class="show fullscreen"><svg class="circular" width="48px" height="48px">
            <circle class="path-bg" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke="#eeeeee" />
            <circle class="path" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke-miterlimit="10" stroke="#F96D00" /></svg></div>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery-migrate-3.0.1.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/popper.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/bootstrap.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.easing.1.3.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.stellar.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/owl.carousel.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.magnific-popup.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.animateNumber.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/scrollax.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/main.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>