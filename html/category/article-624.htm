<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://finlandaddress.github.io/html/category/article-624.htm" />
    <title>图文详解 | 33个Python关键字，一口吃掉一个！ - FinlandAddress</title>
        <meta charset="utf-8">
    <link rel="icon" href="/assets/addons/xcblog/img/finlandaddress/favicon.ico" type="image/x-icon"/>
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&display=swap" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css2?family=Raleway:wght@400;500;600;700;800;900&display=swap" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/font-awesome.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/animate.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/owl.carousel.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/owl.theme.default.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/magnific-popup.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/flaticon.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/style.css" rel="stylesheet" />
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?a045e5bb3ae69629060e7ce2a4b98902";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <nav class="navbar navbar-expand-lg navbar-dark ftco_navbar ftco-navbar-light site-navbar-target" id="ftco-navbar">
        <div class="container">
                        <a class="navbar-brand" href="/">Finland Address<span></span></a>
            
            <button class="navbar-toggler js-fh5co-nav-toggle fh5co-nav-toggle" type="button" data-toggle="collapse" data-target="#ftco-nav" aria-controls="ftco-nav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="oi oi-menu"></span> MENU
            </button>
            <div class="collapse navbar-collapse" id="ftco-nav">
                <ul class="navbar-nav nav ml-auto">
                	                    <li class="nav-item"><a href="/" class="nav-link"><span>首页</span></a></li>
                                        <li class="nav-item"><a href="/html/category/" class="nav-link"><span>文章分类</span></a></li>
                                        <li class="nav-item"><a href="#" class="nav-link"><span>关于</span></a></li>
                    <li class="nav-item"><a href="#" class="nav-link"><span>联系</span></a></li>
                </ul>
            </div>
        </div>
    </nav>
    <section class="hero-wrap" style="height:350px;overflow: hidden;">
        <div class="overlay"></div>
        <div class="container-fluid px-0">
            <div class="row d-md-flex no-gutters slider-text align-items-center js-fullheight justify-content-end">
                <img class="one-third js-fullheight align-self-end order-md-last img-fluid" src="/assets/addons/xcblog/img/finlandaddress/undraw_book_lover_mkck.svg" alt="" style="opacity: 0.5;">
                <div class="one-forth d-flex align-items-center ftco-animate js-fullheight">
                    <div class="text" style="top: 30%;min-width: 70%;">
                        <h1>图文详解 | 33个Python关键字，一口吃掉一个！</h1>
                        <p>
                            <a href="/">首页</a> / <a href="/html/category/">文章分类</a> / <span>正文</span>
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <section class="ftco-about img ftco-section" id="about-section">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                	  				  				  				<div id="content_views" class="markdown_views prism-tomorrow-night"> <blockquote> <p>本文禁止转载！</p> </blockquote> <p>趁着周末，黄同学就多给大家整理点干货，尽量为大家整理一些你没看过的文章。</p> <p>其实前面我已经为大家总结了《Python系统关键字 “超全总结” 及其 “含义”》。今天呢，我将对每一个关键字列出一个例子，供大家参考学习和记忆。</p> <h4> 1 and、or、not</h4> <p>and、or、not关键字都是逻辑运算符，用法如下：</p> <ul> <li>and：如果两个语句都返回True，则返回值将仅为True，否则它将返回False。</li> <li>or：如果其中一条语句返回True，则返回值为True，否则它将返回False。</li> <li>not：如果语句不是True，则返回值为True，否则返回False。</li> </ul> <pre><code class="prism language-python">x1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">></span> <span class="token number">3</span> <span class="token keyword">and</span> <span class="token number">5</span> <span class="token operator"><</span> <span class="token number">10</span><span class="token punctuation">)</span> x1  x2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">></span> <span class="token number">3</span> <span class="token keyword">or</span> <span class="token number">5</span> <span class="token operator">></span> <span class="token number">10</span><span class="token punctuation">)</span> x2  x3 <span class="token operator">=</span> <span class="token boolean">False</span> <span class="token keyword">not</span> x3 </code></pre> <p>结果如下：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230110/cf260445a192666adcab84b3d95169d8.jpg" alt="图文详解 | 33个Python关键字，一口吃掉一个！"></p> <h4> 2 if、elif、else</h4> <p>if、elif、else主要用于条件语句，用法如下：</p> <ul> <li>if：用于创建条件语句（if语句），并且仅当条件为True时，才允许执行if代码块。</li> <li>elif：在条件语句（if语句）中使用，是else if的缩写。</li> <li>else：在条件语句（if语句）中使用，并确定在if条件为False时该执行的代码。</li> </ul> <pre><code class="prism language-python"><span class="token keyword">def</span> <span class="token function">func</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">if</span> x <span class="token operator"><</span> <span class="token number">18</span><span class="token punctuation">:</span>         <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"未成年"</span><span class="token punctuation">)</span>     <span class="token keyword">elif</span> x <span class="token operator"><</span> <span class="token number">30</span><span class="token punctuation">:</span>         <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"青年"</span><span class="token punctuation">)</span>     <span class="token keyword">else</span><span class="token punctuation">:</span>         <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"中老年"</span><span class="token punctuation">)</span>  func<span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span> </code></pre> <p>结果如下：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230110/cbdcbf00c3d44718c709063a241f5c59.jpg" alt="图文详解 | 33个Python关键字，一口吃掉一个！"><br /> 其中，else关键字还在try… except块中使用，请参见下面的示例。</p> <pre><code class="prism language-python"><span class="token keyword">def</span> <span class="token function">func1</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">try</span><span class="token punctuation">:</span>         <span class="token number">100</span><span class="token operator">//</span>x     <span class="token keyword">except</span><span class="token punctuation">:</span>         <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"ZeroDivisionError: division by zero(除数不能是0)"</span><span class="token punctuation">)</span>     <span class="token keyword">else</span><span class="token punctuation">:</span>         <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"程序计算结果是</span><span class="token interpolation"><span class="token punctuation">{<!-- --></span><span class="token builtin">str</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token operator">//</span>x<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>  func1<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> func1<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> </code></pre> <p>结果如下：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230110/82416272c5df40d83cbe5684261637d8.jpg" alt="图文详解 | 33个Python关键字，一口吃掉一个！"></p> <h4> 3 for、while</h4> <p>for、while主要用于定义一个循环，用法如下：</p> <ul> <li>for：用于创建一个for循环，它可以用来遍历序列，例如列表，元组等。</li> <li>while：用于定义while循环，while循环将继续，直到while的条件为False。</li> </ul> <pre><code class="prism language-python">name_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"张三"</span><span class="token punctuation">,</span><span class="token string">"李四"</span><span class="token punctuation">,</span><span class="token string">"王五"</span><span class="token punctuation">]</span>  <span class="token keyword">for</span> name <span class="token keyword">in</span> name_list<span class="token punctuation">:</span>     <span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> </code></pre> <p>结果如下：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230110/4ec500a6d20f55a3f97ae3601559dfcf.jpg" alt="图文详解 | 33个Python关键字，一口吃掉一个！"></p> <pre><code class="prism language-python">x <span class="token operator">=</span> <span class="token number">0</span> <span class="token keyword">while</span> x<span class="token operator"><</span><span class="token number">9</span><span class="token punctuation">:</span>     <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>     x <span class="token operator">+=</span> <span class="token number">1</span> </code></pre> <p>结果如下：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230110/e70ff9e0957ed97206a2f1c57d41b0bf.jpg" alt="图文详解 | 33个Python关键字，一口吃掉一个！"></p> <h4> 4 True、False</h4> <p>True、False是比较操作返回的结果，用法如下：</p> <ul> <li>True：关键字True与1相同。</li> <li>False：关键字False与0相同。</li> </ul> <pre><code class="prism language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">9</span> <span class="token operator">></span> <span class="token number">6</span><span class="token punctuation">)</span>  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">6</span> <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">5</span> <span class="token keyword">is</span> <span class="token number">5</span><span class="token punctuation">)</span>  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">==</span> <span class="token number">5</span><span class="token punctuation">)</span>  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">==</span> <span class="token number">5</span> <span class="token keyword">and</span> <span class="token number">7</span> <span class="token operator">==</span> <span class="token number">7</span><span class="token punctuation">)</span>  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">==</span> <span class="token number">5</span> <span class="token keyword">or</span> <span class="token number">6</span> <span class="token operator">==</span> <span class="token number">7</span><span class="token punctuation">)</span>  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">not</span><span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">==</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span> </code></pre> <p>结果如下：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230110/91c5d1cc3432715503dc043bb59cd0f6.jpg" alt="图文详解 | 33个Python关键字，一口吃掉一个！"></p> <pre><code class="prism language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">9</span> <span class="token operator"><</span> <span class="token number">6</span><span class="token punctuation">)</span>  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">6</span> <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">88</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">15</span> <span class="token keyword">is</span> <span class="token number">5</span><span class="token punctuation">)</span>  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">!=</span> <span class="token number">5</span><span class="token punctuation">)</span>  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator"><</span> <span class="token number">5</span> <span class="token keyword">and</span> <span class="token number">7</span> <span class="token operator">==</span> <span class="token number">7</span><span class="token punctuation">)</span>  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator"><=</span> <span class="token number">3</span> <span class="token keyword">or</span> <span class="token number">6</span> <span class="token operator">>=</span> <span class="token number">7</span><span class="token punctuation">)</span>  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">not</span><span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">==</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span> </code></pre> <p>结果如下：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230110/23f3580ab9b8ff60177f790913241a26.jpg" alt="图文详解 | 33个Python关键字，一口吃掉一个！"></p> <h4> 5 continue、break</h4> <p>continue、break主要用在for循环和while循环中，用法如下：</p> <ul> <li>continue：continue关键字用于在for循环（或while循环）中结束当前迭代，并继续进行下一个迭代。</li> <li>break：break关键字用于中断for循环或while循环。</li> </ul> <pre><code class="prism language-python"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">if</span> i <span class="token operator"><=</span> <span class="token number">5</span><span class="token punctuation">:</span>         <span class="token keyword">continue</span>     <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> </code></pre> <p>结果如下：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230110/f5712d553bc74c75adddba45293fdd37.jpg" alt="图文详解 | 33个Python关键字，一口吃掉一个！"></p> <pre><code class="prism language-python">x <span class="token operator">=</span> <span class="token number">0</span> <span class="token keyword">while</span> x <span class="token operator"><</span> <span class="token number">10</span><span class="token punctuation">:</span>     <span class="token keyword">if</span> x <span class="token operator">==</span> <span class="token number">5</span><span class="token punctuation">:</span>         <span class="token keyword">break</span>     x <span class="token operator">+=</span> <span class="token number">1</span>     <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> </code></pre> <p>结果如下：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230110/ec66132f090bf539fbcb275f59f92793.jpg" alt="图文详解 | 33个Python关键字，一口吃掉一个！"></p> <h4> 6 pass</h4> <p>pass语句用作将来代码的占位符。当执行pass语句时，不会有任何影响，只是占位作用代表空白代码，但是，如果你不写任何东西，就会报错。循环，函数定义，类定义或if语句中不允许使用空代码，则可以使用pass。<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230110/6a5e04639432b401cd8f0eb171a9c598.jpg" alt="图文详解 | 33个Python关键字，一口吃掉一个！"></p> <h4> 7 try、except、finally、raise</h4> <p>try、except、finally、raise都是与异常有关的关键词，用法如下：</p> <ul> <li>try：在try…except块中使用，它定义了一个代码块，并在没有问题的情况下执行块。如果包含任何错误，可以为不同的错误类型定义不同的块。</li> <li>except：在try… except块中使用。 如果try块引发错误，并在有问题的情况下执行对应的代码块。</li> <li>finally：在try…except块中使用。它定义了一个代码块，当try…except…else块结束时，该代码块将运行。无论try块是否引发错误，都将执行finally代码块。</li> <li>raise：raise关键字用于引发异常，可以定义引发哪种错误，以及向用户显示错误信息。</li> </ul> <pre><code class="prism language-python"><span class="token keyword">def</span> <span class="token function">func</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">try</span><span class="token punctuation">:</span>         <span class="token number">100</span> <span class="token operator">//</span> x     <span class="token keyword">except</span><span class="token punctuation">:</span>         <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"ZeroDivisionError: division by zero(除数不能是0)"</span><span class="token punctuation">)</span>     <span class="token keyword">else</span><span class="token punctuation">:</span>         <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"结果是：</span><span class="token interpolation"><span class="token punctuation">{<!-- --></span><span class="token builtin">str</span><span class="token punctuation">(</span><span class="token number">100</span> <span class="token operator">//</span> x<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>     <span class="token keyword">finally</span><span class="token punctuation">:</span>         <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"无论如何，都会执行！"</span><span class="token punctuation">)</span>          func<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> func<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> </code></pre> <p>结果如下：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230110/60682c17978a2bb76bf0b0d4aa5c59d9.jpg" alt="图文详解 | 33个Python关键字，一口吃掉一个！"></p> <pre><code class="prism language-python">x <span class="token operator">=</span> <span class="token number">15</span>  <span class="token keyword">if</span> x <span class="token operator"><</span> <span class="token number">18</span><span class="token punctuation">:</span>     <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span><span class="token string">"不好意思，你的年龄小于18岁，未成年"</span><span class="token punctuation">)</span> </code></pre> <p>结果如下：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230110/d0997d0ad394fdf73f961025bf141cbf.jpg" alt="图文详解 | 33个Python关键字，一口吃掉一个！"></p> <h4> 8 import、from、as</h4> <p>import、from、as均与模块的导入有关，用法如下：</p> <ul> <li>import：用于导入模块。</li> <li>from：用于从模块中导入指定的部分，按需要导入指定子类或函数，减少不必要的资源浪费。</li> <li>as：用于创建别名。</li> </ul> <pre><code class="prism language-python"><span class="token keyword">import</span> openpyxl <span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd  <span class="token keyword">from</span> openpyxl <span class="token keyword">import</span> load_workbook<span class="token punctuation">(</span><span class="token punctuation">)</span> </code></pre> <h4> 9 def、return</h4> <p>def、return均与函数有关的关键字，用法如下：</p> <ul> <li>def：用于创建（或定义）一个函数。</li> <li>return：用于结束所定义的函数，并返回值。</li> </ul> <pre><code class="prism language-python"><span class="token keyword">def</span> <span class="token function">func1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"关注公众号：数据分析与统计学之美"</span><span class="token punctuation">)</span>      func1<span class="token punctuation">(</span><span class="token punctuation">)</span> </code></pre> <p>结果如下：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230110/ab971a7330b6ecc9b7bc2104d55cac91.jpg" alt="图文详解 | 33个Python关键字，一口吃掉一个！"></p> <pre><code class="prism language-python"><span class="token keyword">def</span> <span class="token function">func2</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">return</span> x <span class="token operator">+</span> y  func2<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>y<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">)</span> </code></pre> <p>结果如下：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230110/c5830737dfafec0da5cabe551f4ffbd6.jpg" alt="图文详解 | 33个Python关键字，一口吃掉一个！"></p> <h4> 10 class</h4> <p>class关键字用于创建（或定义）一个类。</p> <pre><code class="prism language-python"><span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">:</span>     name <span class="token operator">=</span> <span class="token string">"张三"</span>     age <span class="token operator">=</span> <span class="token number">18</span>      p <span class="token operator">=</span> Person<span class="token punctuation">(</span><span class="token punctuation">)</span> p<span class="token punctuation">.</span>name<span class="token punctuation">,</span>p<span class="token punctuation">.</span>age </code></pre> <p>结果如下：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230110/75c4f69b8d55c088a852629c3e4ca2ed.jpg" alt="图文详解 | 33个Python关键字，一口吃掉一个！"></p> <h4> 11 lambda</h4> <p>lambda关键字用于创建一个 <strong>“匿名函数”</strong>。</p> <pre><code class="prism language-python">x <span class="token operator">=</span> <span class="token keyword">lambda</span> a<span class="token punctuation">:</span> a <span class="token operator">+</span> <span class="token number">8</span> x<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>  y <span class="token operator">=</span> <span class="token keyword">lambda</span> a<span class="token punctuation">,</span>b<span class="token punctuation">:</span> a <span class="token operator">+</span> b y<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>  z <span class="token operator">=</span> <span class="token keyword">lambda</span> a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">:</span> a <span class="token operator">*</span> c <span class="token operator">+</span> b z<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span> </code></pre> <p>结果如下：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230110/63be7554f8e256d3fe5046b809affdb2.jpg" alt="图文详解 | 33个Python关键字，一口吃掉一个！"></p> <h4> 12 del</h4> <p>在Python中，一切皆对象。del关键字主要用于删除对象，还可以用于删除变量，列表或列表的一部分等。</p> <pre><code class="prism language-python">x <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">del</span> x <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> </code></pre> <p>结果如下：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230110/6d4148f2bb5e57f80e1b943a94ff8683.jpg" alt="图文详解 | 33个Python关键字，一口吃掉一个！"></p> <pre><code class="prism language-python">x <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"张三"</span><span class="token punctuation">,</span><span class="token string">"李四"</span><span class="token punctuation">,</span><span class="token string">"王五"</span><span class="token punctuation">]</span> <span class="token keyword">del</span> x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> </code></pre> <p>结果如下：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230110/5376b93a1838cda692b1b57320485305.jpg" alt="图文详解 | 33个Python关键字，一口吃掉一个！"></p> <h4> 13 global、nonlocal</h4> <p>global关键字用于创建一个全局变量。nonlocal关键字用于声明一个非局部变量，用于标识外部作用域的变量。</p> <pre><code class="prism language-python"><span class="token comment"># 定义一个函数:</span> <span class="token keyword">def</span> <span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">global</span> x     x <span class="token operator">=</span> <span class="token string">"函数中的变量"</span>  <span class="token comment"># 执行函数:</span> func<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># x定义在函数中，按说这里打印x会报错，我们看看</span> <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> </code></pre> <p>结果如下：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230110/6982c6d377e003317e66fad6b79a024b.jpg" alt="图文详解 | 33个Python关键字，一口吃掉一个！"></p> <h4> 14 in、is</h4> <p>in、is这两个关键字大家一定要区别开来，用法如下：</p> <ul> <li>in：一方面可以用于检查序列（list，range，字符串等）中是否存在某个值。也可以用于遍历for循环中的序列。</li> <li>is：用于判断两个变量是否是同一个对象，如果两个对象是同一对象，则返回True，否则返回False。要与== 区别开来，使用==运算符判断两个变量是否相等。</li> </ul> <pre><code class="prism language-python">x <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"张三"</span><span class="token punctuation">,</span><span class="token string">"李四"</span><span class="token punctuation">,</span><span class="token string">"王五"</span><span class="token punctuation">]</span> <span class="token string">"张三"</span> <span class="token keyword">in</span> x <span class="token comment"># -------------------------</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> </code></pre> <p>结果如下：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230110/babff89c43eab43e23557be8c2cf1ba7.jpg" alt="图文详解 | 33个Python关键字，一口吃掉一个！"></p> <pre><code class="prism language-python">x <span class="token operator">=</span> <span class="token number">2.0</span> y <span class="token operator">=</span> <span class="token number">2.0</span> x <span class="token keyword">is</span> y x <span class="token operator">==</span> y </code></pre> <p>结果如下：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230110/e640498619422a2f8195757578f36879.jpg" alt="图文详解 | 33个Python关键字，一口吃掉一个！"></p> <h4> 15 None</h4> <p>None关键字用于定义一个空值（根本没有值），与0，False或空字符串不同。 None是其自身的数据类型（NoneType），只能为None。</p> <pre><code class="prism language-python">x <span class="token operator">=</span> <span class="token boolean">None</span> <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>  <span class="token keyword">if</span> x<span class="token punctuation">:</span>     <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"嘻嘻"</span><span class="token punctuation">)</span> <span class="token keyword">else</span><span class="token punctuation">:</span>     <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"哈哈"</span><span class="token punctuation">)</span> </code></pre> <p>结果如下：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230110/72dc07ca5c4a22d1d966ef348a19a301.jpg" alt="图文详解 | 33个Python关键字，一口吃掉一个！"></p> <h4> 16 assert</h4> <p>调试代码时，使用assert关键字。主要用于测试代码中的条件是否为True，如果为False，将引发AssertionError。</p> <pre><code class="prism language-python">x <span class="token operator">=</span> <span class="token number">666</span>  <span class="token keyword">assert</span> x <span class="token operator">==</span> <span class="token number">666</span> <span class="token keyword">assert</span> x <span class="token operator">==</span> <span class="token number">888</span><span class="token punctuation">,</span><span class="token string">"x应该等于666，你的输入有误！"</span> </code></pre> <p>结果如下：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230110/ccec5ee8bc3ded62c5ee0c3f974ee089.jpg" alt="图文详解 | 33个Python关键字，一口吃掉一个！"></p> <h4> 17 with</h4> <p>with常和open使用，用于读取或写入文件。</p> <pre><code class="prism language-python"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"哈哈.txt"</span><span class="token punctuation">,</span><span class="token string">"r"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>     <span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> </code></pre> <p>结果如下：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230110/db4490ccfa7f1b99e4e601c13d5def07.jpg" alt="图文详解 | 33个Python关键字，一口吃掉一个！"></p> <h4> 18 yield</h4> <p>yield关键字结束一个函数，返回一个生成器，用于从函数依次返回值。</p> <pre><code class="prism language-python"><span class="token keyword">def</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">yield</span> <span class="token number">5</span>  f<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">next</span><span class="token punctuation">(</span>f<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> </code></pre> <p>结果如下：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230110/342602fc95d7017f934537b08fac0812.jpg" alt="图文详解 | 33个Python关键字，一口吃掉一个！"></p> </p></div> 			
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-623.htm">SpringCloud 服务调用监控 Hystrix Dashboard、Turbine</a></p>
                                                <p>下一个：<a href="/html/category/article-625.htm">toString()和new String()区别</a></p>
                                            </div>

                                    </div>
                <div class="col-md-3">
                	<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-7263.htm" title="BAO美啦｜《活着》终于上线！可朴信惠这是又胖了一圈？(活着美好吗)">BAO美啦｜《活着》终于上线！可朴信惠这是又胖了一圈？(活着美好吗)</a></li>
                        <li class="py-2"><a href="/html/category/article-7585.htm" title="鱼竿路亚十大名牌排名">鱼竿路亚十大名牌排名</a></li>
                        <li class="py-2"><a href="/html/category/article-8045.htm" title="动物疫苗种类及类型图片及价格大全（动物疫苗种类及类型图片及价格大全视频）">动物疫苗种类及类型图片及价格大全（动物疫苗种类及类型图片及价格大全视频）</a></li>
                        <li class="py-2"><a href="/html/category/article-7676.htm" title="动物用狂犬病疫苗的作用（动物用狂犬病疫苗的作用是什么）">动物用狂犬病疫苗的作用（动物用狂犬病疫苗的作用是什么）</a></li>
                        <li class="py-2"><a href="/html/category/article-7492.htm" title="北欧风格家具品牌有哪些(北欧风格家具品牌有哪些牌子)">北欧风格家具品牌有哪些(北欧风格家具品牌有哪些牌子)</a></li>
                        <li class="py-2"><a href="/html/category/article-7262.htm" title="宠物寄养市场需求（宠物寄养市场需求大吗）">宠物寄养市场需求（宠物寄养市场需求大吗）</a></li>
                        <li class="py-2"><a href="/html/category/article-7907.htm" title="cctv16奥林匹克频道2021开播（燃爆了）cctv16奥林匹克频道开播了，新三国 貂蝉，cctv体育频道，">cctv16奥林匹克频道2021开播（燃爆了）cctv16奥林匹克频道开播了，新三国 貂蝉，cctv体育频道，</a></li>
                        <li class="py-2"><a href="/html/category/article-7768.htm" title="领养宠物正规网站有哪些（领养宠物正规网站有哪些平台）">领养宠物正规网站有哪些（领养宠物正规网站有哪些平台）</a></li>
                        <li class="py-2"><a href="/html/category/article-7309.htm" title="小型颗粒饲料机价格多少（小型颗粒饲料机价格多少钱）">小型颗粒饲料机价格多少（小型颗粒饲料机价格多少钱）</a></li>
                        <li class="py-2"><a href="/html/category/article-7999.htm" title="动物疫苗种类及类型分类图片 动物疫苗种类及类型分类图片大全">动物疫苗种类及类型分类图片 动物疫苗种类及类型分类图片大全</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">58</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">54</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
        <footer class="ftco-footer ftco-section">
        <div class="container">
            <div class="row">
                <div class="col-md-12 text-center">
                    <p>
                        FinlandAddress 版权所有
                        <br />
                        Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </footer>
    <!-- loader -->
    <div id="ftco-loader" class="show fullscreen"><svg class="circular" width="48px" height="48px">
            <circle class="path-bg" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke="#eeeeee" />
            <circle class="path" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke-miterlimit="10" stroke="#F96D00" /></svg></div>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery-migrate-3.0.1.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/popper.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/bootstrap.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.easing.1.3.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.stellar.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/owl.carousel.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.magnific-popup.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.animateNumber.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/scrollax.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/main.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>