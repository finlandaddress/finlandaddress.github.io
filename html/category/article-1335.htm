<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://finlandaddress.github.io/html/category/article-1335.htm" />
    <title>Java实现MD5和国密SM3摘要算法 - FinlandAddress</title>
        <meta charset="utf-8">
    <link rel="icon" href="/assets/addons/xcblog/img/finlandaddress/favicon.ico" type="image/x-icon"/>
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&display=swap" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css2?family=Raleway:wght@400;500;600;700;800;900&display=swap" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/font-awesome.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/animate.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/owl.carousel.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/owl.theme.default.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/magnific-popup.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/flaticon.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/style.css" rel="stylesheet" />
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?a045e5bb3ae69629060e7ce2a4b98902";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <nav class="navbar navbar-expand-lg navbar-dark ftco_navbar ftco-navbar-light site-navbar-target" id="ftco-navbar">
        <div class="container">
                        <a class="navbar-brand" href="/">Finland Address<span></span></a>
            
            <button class="navbar-toggler js-fh5co-nav-toggle fh5co-nav-toggle" type="button" data-toggle="collapse" data-target="#ftco-nav" aria-controls="ftco-nav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="oi oi-menu"></span> MENU
            </button>
            <div class="collapse navbar-collapse" id="ftco-nav">
                <ul class="navbar-nav nav ml-auto">
                	                    <li class="nav-item"><a href="/" class="nav-link"><span>首页</span></a></li>
                                        <li class="nav-item"><a href="/html/category/" class="nav-link"><span>文章分类</span></a></li>
                                        <li class="nav-item"><a href="#" class="nav-link"><span>关于</span></a></li>
                    <li class="nav-item"><a href="#" class="nav-link"><span>联系</span></a></li>
                </ul>
            </div>
        </div>
    </nav>
    <section class="hero-wrap" style="height:350px;overflow: hidden;">
        <div class="overlay"></div>
        <div class="container-fluid px-0">
            <div class="row d-md-flex no-gutters slider-text align-items-center js-fullheight justify-content-end">
                <img class="one-third js-fullheight align-self-end order-md-last img-fluid" src="/assets/addons/xcblog/img/finlandaddress/undraw_book_lover_mkck.svg" alt="" style="opacity: 0.5;">
                <div class="one-forth d-flex align-items-center ftco-animate js-fullheight">
                    <div class="text" style="top: 30%;min-width: 70%;">
                        <h1>Java实现MD5和国密SM3摘要算法</h1>
                        <p>
                            <a href="/">首页</a> / <a href="/html/category/">文章分类</a> / <span>正文</span>
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <section class="ftco-about img ftco-section" id="about-section">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                	  				  				  				<div id="content_views" class="markdown_views prism-tomorrow-night"> <h3>一、JDK提供的默认MD5算法工具</h3> <blockquote> <p>MD5算法类型枚举</p> </blockquote> <pre><code class="prism language-java"><span class="token comment">/**  * JDK提供的默认摘要算法.  *  * @author linzp  * @date 2022/2/8 16:46  */</span><span class="token keyword">public</span><span class="token keyword">enum</span><span class="token class-name">DigestAlgorithmEnum</span><span class="token punctuation">{<!-- --></span><span class="token comment">/**      * MD5      */</span><span class="token function">MD5</span><span class="token punctuation">(</span><span class="token string">"MD5"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">/**      * MD2      */</span><span class="token function">MD2</span><span class="token punctuation">(</span><span class="token string">"MD2"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">/**      * SHA      */</span><span class="token function">SHA</span><span class="token punctuation">(</span><span class="token string">"SHA"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">/**      * SHA      */</span><span class="token function">SHA1</span><span class="token punctuation">(</span><span class="token string">"SHA-1"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">/**      * SHA2      */</span><span class="token function">SHA224</span><span class="token punctuation">(</span><span class="token string">"SHA-224"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">/**      * SHA2      */</span><span class="token function">SHA256</span><span class="token punctuation">(</span><span class="token string">"SHA-256"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">/**      * SHA5      */</span><span class="token function">SHA384</span><span class="token punctuation">(</span><span class="token string">"SHA-384"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">/**      * SHA5      */</span><span class="token function">SHA512</span><span class="token punctuation">(</span><span class="token string">"SHA-512"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/**      * 算法编码.      */</span><span class="token keyword">private</span><span class="token class-name">String</span> code<span class="token punctuation">;</span><span class="token comment">/**      * 无参      */</span><span class="token class-name">DigestAlgorithmEnum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span><span class="token comment">/**      * 构造.      * @param code      */</span><span class="token class-name">DigestAlgorithmEnum</span><span class="token punctuation">(</span><span class="token class-name">String</span> code<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">this</span><span class="token punctuation">.</span>code<span class="token operator">=</span> code<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span><span class="token class-name">String</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span> code<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span><span class="token keyword">void</span><span class="token function">setCode</span><span class="token punctuation">(</span><span class="token class-name">String</span> code<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">this</span><span class="token punctuation">.</span>code<span class="token operator">=</span> code<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <blockquote> <p>MD5算法工具类</p> </blockquote> <pre><code class="prism language-java"><span class="token keyword">import</span><span class="token namespace">io<span class="token punctuation">.</span>sugo<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>data<span class="token punctuation">.</span>security<span class="token punctuation">.</span>enums<span class="token punctuation">.</span></span><span class="token class-name">DigestAlgorithmEnum</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span></span><span class="token class-name">MessageDigest</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span></span><span class="token class-name">NoSuchAlgorithmException</span><span class="token punctuation">;</span><span class="token comment">/**  * 常规摘要算法：MD5、SHA实现  *  * @author linzp  * @date 2022/2/8 16:44  */</span><span class="token keyword">public</span><span class="token keyword">final</span><span class="token keyword">class</span><span class="token class-name">MD5Util</span><span class="token punctuation">{<!-- --></span><span class="token comment">/**      * 16进制      */</span><span class="token keyword">private</span><span class="token keyword">static</span><span class="token keyword">final</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> HEX_DIGITS<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><span class="token string">"0"</span><span class="token punctuation">,</span><span class="token string">"1"</span><span class="token punctuation">,</span><span class="token string">"2"</span><span class="token punctuation">,</span><span class="token string">"3"</span><span class="token punctuation">,</span><span class="token string">"4"</span><span class="token punctuation">,</span><span class="token string">"5"</span><span class="token punctuation">,</span><span class="token string">"6"</span><span class="token punctuation">,</span><span class="token string">"7"</span><span class="token punctuation">,</span><span class="token string">"8"</span><span class="token punctuation">,</span><span class="token string">"9"</span><span class="token punctuation">,</span><span class="token string">"a"</span><span class="token punctuation">,</span><span class="token string">"b"</span><span class="token punctuation">,</span><span class="token string">"c"</span><span class="token punctuation">,</span><span class="token string">"d"</span><span class="token punctuation">,</span><span class="token string">"e"</span><span class="token punctuation">,</span><span class="token string">"f"</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment">/**      * 私有构造      */</span><span class="token keyword">private</span><span class="token class-name">MD5Util</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span><span class="token comment">/**      * md5加密      *      * @param srcData      * @return      */</span><span class="token keyword">public</span><span class="token keyword">static</span><span class="token class-name">String</span><span class="token function">entrypt</span><span class="token punctuation">(</span><span class="token class-name">DigestAlgorithmEnum</span> digestAlgorithmEnum<span class="token punctuation">,</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> srcData<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> secretBytes<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span><span class="token keyword">try</span><span class="token punctuation">{<!-- --></span>             secretBytes<span class="token operator">=</span><span class="token class-name">MessageDigest</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span>digestAlgorithmEnum<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span>srcData<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">NoSuchAlgorithmException</span> e<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">throw</span><span class="token keyword">new</span><span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"this digest algorithm is not exists！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span><span class="token function">byteToHexString</span><span class="token punctuation">(</span>secretBytes<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/**      * 转换16进制.      *      * @param bs      * @return      */</span><span class="token keyword">public</span><span class="token keyword">static</span><span class="token class-name">String</span><span class="token function">byteToHexString</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bs<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token class-name">StringBuffer</span> sb<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">byte</span> b<span class="token operator">:</span> bs<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>             sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token function">byteToHexString</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span> sb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/**      * 转换16进制.      *      * @param b      * @return      */</span><span class="token keyword">private</span><span class="token keyword">static</span><span class="token class-name">String</span><span class="token function">byteToHexString</span><span class="token punctuation">(</span><span class="token keyword">byte</span> b<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">int</span> n<span class="token operator">=</span> b<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>n<span class="token operator"><</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>             n<span class="token operator">=</span><span class="token number">256</span><span class="token operator">+</span> n<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> d1<span class="token operator">=</span> n<span class="token operator">/</span><span class="token number">16</span><span class="token punctuation">;</span><span class="token keyword">int</span> d2<span class="token operator">=</span> n<span class="token operator">%</span><span class="token number">16</span><span class="token punctuation">;</span><span class="token keyword">return</span> HEX_DIGITS<span class="token punctuation">[</span>d1<span class="token punctuation">]</span><span class="token operator">+</span> HEX_DIGITS<span class="token punctuation">[</span>d2<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <h3>二、国密SM3摘要算法实现工具类</h3> <blockquote> <p>需要导入maven依赖</p> </blockquote> <pre><code class="prism language-xml"><span class="token comment"><!-- https://mvnrepository.com/artifact/org.bouncycastle/bcprov-jdk15on --></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>groupId</span><span class="token punctuation">></span></span>org.bouncycastle<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>groupId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>artifactId</span><span class="token punctuation">></span></span>bcprov-jdk15on<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>version</span><span class="token punctuation">></span></span>1.69<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation"></</span>dependency</span><span class="token punctuation">></span></span></code></pre> <blockquote> <p>国密SM3实现摘要算法加密工具类，可实现对文件的MD5加密</p> </blockquote> <pre><code class="prism language-java"><span class="token keyword">import</span><span class="token namespace">org<span class="token punctuation">.</span>bouncycastle<span class="token punctuation">.</span>crypto<span class="token punctuation">.</span>digests<span class="token punctuation">.</span></span><span class="token class-name">SM3Digest</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token namespace">org<span class="token punctuation">.</span>bouncycastle<span class="token punctuation">.</span>crypto<span class="token punctuation">.</span>macs<span class="token punctuation">.</span></span><span class="token class-name">HMac</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token namespace">org<span class="token punctuation">.</span>bouncycastle<span class="token punctuation">.</span>crypto<span class="token punctuation">.</span>params<span class="token punctuation">.</span></span><span class="token class-name">KeyParameter</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token namespace">org<span class="token punctuation">.</span>bouncycastle<span class="token punctuation">.</span>jce<span class="token punctuation">.</span>provider<span class="token punctuation">.</span></span><span class="token class-name">BouncyCastleProvider</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token namespace">org<span class="token punctuation">.</span>bouncycastle<span class="token punctuation">.</span>util<span class="token punctuation">.</span>encoders<span class="token punctuation">.</span></span><span class="token class-name">Hex</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">ByteArrayOutputStream</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">File</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileInputStream</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span></span><span class="token class-name">MessageDigest</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span></span><span class="token class-name">Security</span><span class="token punctuation">;</span><span class="token comment">/**  * 国密SM3摘要算法实现工具.  * 用于替换MD5、SHA算法  *  * @author linzp  * @date 2022/2/8 10:48  */</span><span class="token keyword">public</span><span class="token keyword">final</span><span class="token keyword">class</span><span class="token class-name">SM3Util</span><span class="token punctuation">{<!-- --></span><span class="token comment">/**      * 私有构造器.      */</span><span class="token keyword">private</span><span class="token class-name">SM3Util</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span><span class="token comment">// 拓展算法提供方，加载BC库.</span><span class="token keyword">static</span><span class="token punctuation">{<!-- --></span><span class="token class-name">Security</span><span class="token punctuation">.</span><span class="token function">addProvider</span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token class-name">BouncyCastleProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/**      * SM3摘要算法逻辑      *      * @param srcData 待加密byte[]      * @return      */</span><span class="token keyword">private</span><span class="token keyword">static</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">sm3</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> srcData<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token class-name">SM3Digest</span> sm3Digest<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">SM3Digest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         sm3Digest<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>srcData<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span> srcData<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> hash<span class="token operator">=</span><span class="token keyword">new</span><span class="token keyword">byte</span><span class="token punctuation">[</span>sm3Digest<span class="token punctuation">.</span><span class="token function">getDigestSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>         sm3Digest<span class="token punctuation">.</span><span class="token function">doFinal</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> hash<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/**      * 摘要算法加密      *      * @param srcData 待加密byte[]      * @return      */</span><span class="token keyword">public</span><span class="token keyword">static</span><span class="token class-name">String</span><span class="token function">encrypt</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> srcData<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> hash<span class="token operator">=</span><span class="token function">sm3</span><span class="token punctuation">(</span>srcData<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> hexString<span class="token operator">=</span><span class="token class-name">Hex</span><span class="token punctuation">.</span><span class="token function">toHexString</span><span class="token punctuation">(</span>hash<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> hexString<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/**      * 指定密钥进行加密.      *      * @param key     密钥      * @param srcData 待加密byte[]      * @return      */</span><span class="token keyword">private</span><span class="token keyword">static</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">hmacSm3</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> key<span class="token punctuation">,</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> srcData<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token class-name">KeyParameter</span> keyParameter<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">KeyParameter</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">SM3Digest</span> digest<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">SM3Digest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">HMac</span> mac<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">HMac</span><span class="token punctuation">(</span>digest<span class="token punctuation">)</span><span class="token punctuation">;</span>         mac<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>keyParameter<span class="token punctuation">)</span><span class="token punctuation">;</span>         mac<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>srcData<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span> srcData<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> hash<span class="token operator">=</span><span class="token keyword">new</span><span class="token keyword">byte</span><span class="token punctuation">[</span>mac<span class="token punctuation">.</span><span class="token function">getMacSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>         mac<span class="token punctuation">.</span><span class="token function">doFinal</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> hash<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/**      * 指定密钥进行加密.      *      * @param key     密钥      * @param srcData 待加密byte[]      * @return      */</span><span class="token keyword">public</span><span class="token keyword">static</span><span class="token class-name">String</span><span class="token function">encrypt</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> key<span class="token punctuation">,</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> srcData<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> hash<span class="token operator">=</span><span class="token function">hmacSm3</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> srcData<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> hexString<span class="token operator">=</span><span class="token class-name">Hex</span><span class="token punctuation">.</span><span class="token function">toHexString</span><span class="token punctuation">(</span>hash<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> hexString<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/**      * 基于BC库的摘要算法加密      *      * @param srcData 待加密byte[]      * @return      * @throws Exception      */</span><span class="token keyword">private</span><span class="token keyword">static</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">sm3bc</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> srcData<span class="token punctuation">)</span><span class="token keyword">throws</span><span class="token class-name">Exception</span><span class="token punctuation">{<!-- --></span><span class="token class-name">MessageDigest</span> messageDigest<span class="token operator">=</span><span class="token class-name">MessageDigest</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">"SM3"</span><span class="token punctuation">,</span><span class="token string">"BC"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> digest<span class="token operator">=</span> messageDigest<span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span>srcData<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> digest<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/**      * 基于BC库的摘要算法加密      *      * @param srcData 待加密byte[]      * @return      * @throws Exception      */</span><span class="token keyword">public</span><span class="token keyword">static</span><span class="token class-name">String</span><span class="token function">encryptBC</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> srcData<span class="token punctuation">)</span><span class="token keyword">throws</span><span class="token class-name">Exception</span><span class="token punctuation">{<!-- --></span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> hash<span class="token operator">=</span><span class="token function">sm3bc</span><span class="token punctuation">(</span>srcData<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> hexString<span class="token operator">=</span><span class="token class-name">Hex</span><span class="token punctuation">.</span><span class="token function">toHexString</span><span class="token punctuation">(</span>hash<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> hexString<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/**      * 对文件进行摘要算法加密.      *      * @param file      * @return      */</span><span class="token keyword">public</span><span class="token keyword">static</span><span class="token class-name">String</span><span class="token function">encrypt</span><span class="token punctuation">(</span><span class="token class-name">File</span> file<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token comment">//TODO-linzp 如使用大文件应该对此方法进行优化，避免出现OOM</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> srcData<span class="token punctuation">;</span><span class="token class-name">FileInputStream</span> fis<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span><span class="token class-name">ByteArrayOutputStream</span> bos<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">ByteArrayOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">try</span><span class="token punctuation">{<!-- --></span>             fis<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> b<span class="token operator">=</span><span class="token keyword">new</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>n<span class="token operator">=</span> fis<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>                 bos<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>             srcData<span class="token operator">=</span> bos<span class="token punctuation">.</span><span class="token function">toByteArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>             e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">throw</span><span class="token keyword">new</span><span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"file not found!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">finally</span><span class="token punctuation">{<!-- --></span><span class="token function">closeResoruce</span><span class="token punctuation">(</span>fis<span class="token punctuation">,</span> bos<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span><span class="token function">encrypt</span><span class="token punctuation">(</span>srcData<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/**      * 关闭资源.      *      * @param fis      * @param bos      */</span><span class="token keyword">private</span><span class="token keyword">static</span><span class="token keyword">void</span><span class="token function">closeResoruce</span><span class="token punctuation">(</span><span class="token class-name">FileInputStream</span> fis<span class="token punctuation">,</span><span class="token class-name">ByteArrayOutputStream</span> bos<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token operator">!=</span> fis<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">try</span><span class="token punctuation">{<!-- --></span>                 fis<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>                 e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token operator">!=</span> bos<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">try</span><span class="token punctuation">{<!-- --></span>                 bos<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>                 e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> </div> 			
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-1326.htm">go异常/错误机制（panic和error）</a></p>
                                                <p>下一个：<a href="/html/category/article-1336.htm">SpringMVC拦截器path路径的坑</a></p>
                                            </div>

                                    </div>
                <div class="col-md-3">
                	<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-6941.htm" title="重庆宠物领养贴吧最新消息（重庆宠物之家免费领养）">重庆宠物领养贴吧最新消息（重庆宠物之家免费领养）</a></li>
                        <li class="py-2"><a href="/html/category/article-7539.htm" title="动物疫苗板块什么时候能涨起来（动物疫苗板块什么时候能涨起来啊）">动物疫苗板块什么时候能涨起来（动物疫苗板块什么时候能涨起来啊）</a></li>
                        <li class="py-2"><a href="/html/category/article-6153.htm" title="宠物领养协议书简单版模板（宠物领养协议书简单版模板怎么写）">宠物领养协议书简单版模板（宠物领养协议书简单版模板怎么写）</a></li>
                        <li class="py-2"><a href="/html/category/article-6665.htm" title="同安有哪些宠物医院好的（同安有哪些宠物医院好的地方）">同安有哪些宠物医院好的（同安有哪些宠物医院好的地方）</a></li>
                        <li class="py-2"><a href="/html/category/article-6940.htm" title="为什么常熟羊毛羊绒大衣这两年发展得这么好呢(常熟的羊绒大衣批发在哪里)">为什么常熟羊毛羊绒大衣这两年发展得这么好呢(常熟的羊绒大衣批发在哪里)</a></li>
                        <li class="py-2"><a href="/html/category/article-6894.htm" title="动物防疫疫苗管理工作总结（动物防疫工作总结及下步工作开展）">动物防疫疫苗管理工作总结（动物防疫工作总结及下步工作开展）</a></li>
                        <li class="py-2"><a href="/html/category/article-6848.htm" title="动物疫苗的使用方法视频（动物疫苗的使用方法及注意事项）">动物疫苗的使用方法视频（动物疫苗的使用方法及注意事项）</a></li>
                        <li class="py-2"><a href="/html/category/article-7585.htm" title="鱼竿路亚十大名牌排名">鱼竿路亚十大名牌排名</a></li>
                        <li class="py-2"><a href="/html/category/article-7538.htm" title="领养宠物狗app（领养宠物狗免费的地方）">领养宠物狗app（领养宠物狗免费的地方）</a></li>
                        <li class="py-2"><a href="/html/category/article-7216.htm" title="动物疫苗研究现状（动物疫苗研究现状分析）">动物疫苗研究现状（动物疫苗研究现状分析）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">26</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">54</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
        <footer class="ftco-footer ftco-section">
        <div class="container">
            <div class="row">
                <div class="col-md-12 text-center">
                    <p>
                        FinlandAddress 版权所有
                        <br />
                        Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </footer>
    <!-- loader -->
    <div id="ftco-loader" class="show fullscreen"><svg class="circular" width="48px" height="48px">
            <circle class="path-bg" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke="#eeeeee" />
            <circle class="path" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke-miterlimit="10" stroke="#F96D00" /></svg></div>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery-migrate-3.0.1.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/popper.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/bootstrap.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.easing.1.3.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.stellar.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/owl.carousel.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.magnific-popup.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.animateNumber.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/scrollax.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/main.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>