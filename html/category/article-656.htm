<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://finlandaddress.github.io/html/category/article-656.htm" />
    <title>SpringBoot集成redis简要_在线工具 - FinlandAddress</title>
        <meta charset="utf-8">
    <link rel="icon" href="/assets/website/img/finlandaddress/favicon.ico" type="image/x-icon"/>
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&display=swap" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css2?family=Raleway:wght@400;500;600;700;800;900&display=swap" rel="stylesheet" />
    <link href="/assets/website/css/finlandaddress/font-awesome.min.css" rel="stylesheet" />
    <link href="/assets/website/css/finlandaddress/animate.css" rel="stylesheet" />
    <link href="/assets/website/css/finlandaddress/owl.carousel.min.css" rel="stylesheet" />
    <link href="/assets/website/css/finlandaddress/owl.theme.default.min.css" rel="stylesheet" />
    <link href="/assets/website/css/finlandaddress/magnific-popup.css" rel="stylesheet" />
    <link href="/assets/website/css/finlandaddress/flaticon.css" rel="stylesheet" />
    <link href="/assets/website/css/finlandaddress/style.css" rel="stylesheet" />
    <link rel="stylesheet" href="/assets/website/css/style.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?a045e5bb3ae69629060e7ce2a4b98902";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <nav class="navbar navbar-expand-lg navbar-dark ftco_navbar ftco-navbar-light site-navbar-target" id="ftco-navbar">
        <div class="container">
                        <a class="navbar-brand" href="/">Finland Address<span></span></a>
            
            <button class="navbar-toggler js-fh5co-nav-toggle fh5co-nav-toggle" type="button" data-toggle="collapse" data-target="#ftco-nav" aria-controls="ftco-nav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="oi oi-menu"></span> MENU
            </button>
            <div class="collapse navbar-collapse" id="ftco-nav">
                <ul class="navbar-nav nav ml-auto">
                	                    <li class="nav-item"><a href="/" class="nav-link"><span>首页</span></a></li>
                                        <li class="nav-item"><a href="/html/category/" class="nav-link"><span>文章分类</span></a></li>
                                        <li class="nav-item"><a href="#" class="nav-link"><span>关于</span></a></li>
                    <li class="nav-item"><a href="#" class="nav-link"><span>联系</span></a></li>
                </ul>
            </div>
        </div>
    </nav>
    <section class="hero-wrap" style="height:350px;overflow: hidden;">
        <div class="overlay"></div>
        <div class="container-fluid px-0">
            <div class="row d-md-flex no-gutters slider-text align-items-center js-fullheight justify-content-end">
                <img class="one-third js-fullheight align-self-end order-md-last img-fluid" src="/assets/website/img/finlandaddress/undraw_book_lover_mkck.svg" alt="" style="opacity: 0.5;">
                <div class="one-forth d-flex align-items-center ftco-animate js-fullheight">
                    <div class="text" style="top: 30%;min-width: 70%;">
                        <h1>SpringBoot集成redis简要_在线工具</h1>
                        <p>
                            <a href="/">首页</a> / <a href="/html/category/">文章分类</a> / <span>正文</span>
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <section class="ftco-about img ftco-section" id="about-section">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                	  				  				  				<p>本文为redis服务的独立部署，内置到应用服务中同理，仅需要2、3、4三步（根据情况添加）</p> <p><strong>大致步骤：</strong></p> <ol> <li>安装redis</li> <li>配置yml和添加pom</li> <li>添加config配置类</li> <li>添加redis数据的get、set类</li> </ol> <p><strong>详细步骤：</strong></p> <h5 id="1redis的安装">1、redis的安装</h5> <p>本人很懒，不想写安装，请移步其他道友：</p> <p>https://www.cnblogs.com/wmy666/p/15148686.html</p> <p>https://www.runoob.com/redis/redis-install.html</p> <h5 id="2新建module作为redis的服务">2、新建module作为redis的服务</h5> <p>​	application主类不想改可以不动</p> <ul> <li> <p>配置yml：</p> <pre><code class="language-yml">spring: 	#应用名称     application:         name: redis-server     redis:     	#redis 数据库的数量         database: 0         #redis端口地址默认是6379（如果没有改redis软件的配置文件的话）         host: 127.0.0.1         port: 6379         password:         jedis:             pool:             	#最大连接数，设置为0则无限制                 max-active: 8                 #最大等待毫秒数, 单位为 ms, 超过时间会出错误信息                 max-wait: 1                 #空闲连接数，没有数据库的连接时依然可以保持连接不清除的个数                 max-idle: 9                 min-idle: 0         #单位秒，默认为0（永不断开），在timeout时间之后一直没有连接的话断开连接         timeout: 0 #服务端口 server:     port: 8911  #注册中心地址 eureka:     client:         service-url:             defaultZone: http://localhost:8900/eureka/ </code></pre> </li> <li> <p>更改pom</p> <pre><code class="language-xml">  <dependencies>         <dependency>             <groupId>org.springframework.boot</groupId>             spring-boot-starter</artifactId>         </dependency>         <dependency>             <groupId>org.springframework.boot</groupId>             <artifactId>spring-boot-starter-web</artifactId>         </dependency>         <dependency>             <groupId>org.springframework.cloud</groupId>             <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>             <version>3.1.0</version>         </dependency>         <!--    redis  除了这个其他都是独立部署需要的  -->         <dependency>             <groupId>org.springframework.boot</groupId>             <artifactId>spring-boot-starter-data-redis</artifactId>         </dependency>     </dependencies>      <dependencyManagement>         <dependencies>             <dependency>                 <groupId>org.springframework.cloud</groupId>                 <artifactId>spring-cloud-dependencies</artifactId>                 <version>2021.0.0</version>                 <type>pom</type>                 <scope>import</scope>             </dependency>         </dependencies>     </dependencyManagement> </code></pre> </li> </ul> <h5 id="3添加config配置类">3、添加config配置类</h5> <pre><code class="language-java">import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.boot.autoconfigure.cache.CacheProperties; import org.springframework.cache.annotation.CachingConfigurerSupport; import org.springframework.cache.annotation.EnableCaching; import org.springframework.context.annotation.Configuration;   import com.fasterxml.jackson.annotation.JsonAutoDetect; import com.fasterxml.jackson.annotation.PropertyAccessor; import com.fasterxml.jackson.databind.DeserializationFeature; import com.fasterxml.jackson.databind.ObjectMapper; import org.springframework.context.annotation.Bean; import org.springframework.data.redis.cache.RedisCacheConfiguration; import org.springframework.data.redis.connection.RedisConnectionFactory; import org.springframework.data.redis.core.RedisTemplate; import org.springframework.data.redis.serializer.Jackson2JsonRedisSerializer; import org.springframework.data.redis.serializer.RedisSerializationContext; import org.springframework.data.redis.serializer.StringRedisSerializer;  @Configuration @EnableCaching public class RedisConfig extends CachingConfigurerSupport {     @Autowired     CacheProperties cacheProperties;      @Bean     public RedisCacheConfiguration redisCacheConfiguration() {         RedisCacheConfiguration configuration = RedisCacheConfiguration.defaultCacheConfig();         configuration = configuration.serializeValuesWith(RedisSerializationContext.SerializationPair.fromSerializer(jsonSerializer()));         return configuration;     }       @Bean     public RedisTemplate<Object, Object> redisTemplate(RedisConnectionFactory connectionFactory) {         RedisTemplate<Object, Object> template = new RedisTemplate<>();         template.setConnectionFactory(connectionFactory);         template.setValueSerializer(jsonSerializer());         //使用StringRedisSerializer来序列化和反序列化redis的key值         template.setKeySerializer(new StringRedisSerializer());         template.afterPropertiesSet();         return template;     }      /**     	使用Jackson2JsonRedisSerializer来序列化和反序列化redis的value值     	否则，使用put(Object, Object)存入redis时，     	redis中的key会变成类似于\xac\xed\x00\x05t\x00\x1IAMAKEY的结构     **/     private Jackson2JsonRedisSerializer jsonSerializer() {         Jackson2JsonRedisSerializer serializer = new Jackson2JsonRedisSerializer(Object.class);         ObjectMapper mapper = new ObjectMapper();         mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES,false);         mapper.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY);         mapper.activateDefaultTyping(LaissezFaireSubTypeValidator.instance, ObjectMapper.DefaultTyping.NON_FINAL, JsonTypeInfo.As.WRAPPER_ARRAY);         serializer.setObjectMapper(mapper);         return serializer;     } } </code></pre> <h5 id="4缓存的getset">4、缓存的get、set</h5> <pre><code class="language-java">import org.springframework.beans.factory.annotation.Autowired; import org.springframework.data.redis.core.RedisTemplate; import org.springframework.data.redis.core.StringRedisTemplate; import org.springframework.data.redis.core.ValueOperations; import org.springframework.stereotype.Service; import javax.annotation.Resource; @Service public class RedisService {      @Autowired     StringRedisTemplate stringRedisTemplate;      @Resource(name="stringRedisTemplate")     ValueOperations<String, String> valueOptStr;      @Autowired     RedisTemplate<Object, Object> redisTemplate;      @Resource(name = "redisTemplate")     ValueOperations<Object, Object> valueOptObj;      /**      * 根据key获取String      * @param key      * @return      */     public String getStr(String key){         return valueOptStr.get(key);     }      public void setStr(String key, String val){         valueOptStr.set(key, val);     }      public void del(String key){         stringRedisTemplate.delete(key);     }       /**      * Object 设置缓存      * @param key      * @return      */     public Object getObj(Object key){         return valueOptObj.get(key);     }      public void setObj(Object key, Object val){         valueOptObj.set(key, val);     }      public void del(Object key){         redisTemplate.delete(key);     } } </code></pre> <p><strong>调用示例：</strong></p> <p>1、集成在工程服务中的调用</p> <pre><code class="language-java">@Autowired RedisService redisService;  public String getName(String key){     return redisService.getStr(key); } </code></pre> <p>2、redis独立部署的调用</p> <p>需要有一个controller类接收外部请求，并在调用服务那一方（消费者）添加feignclient</p> <p>详见：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.cnblogs.com/william-m/p/15991511.html"  target="_blank"  rel="nofollow">SpringBoot集成SpringCloud简要	详细步骤 3</p> 			
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-655.htm">通过systemd配置Docker</a></p>
                                                <p>下一个：<a href="/html/category/article-657.htm">netty系列之:netty中的核心编码器bytes数组</a></p>
                                            </div>

                                    </div>
                <div class="col-md-3">
                	
<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-9839.htm" title="新手开店适合开什么店投资小暴利生意（新手开店适合开什么店投资小暴利生意好）">新手开店适合开什么店投资小暴利生意（新手开店适合开什么店投资小暴利生意好）</a></li>
                        <li class="py-2"><a href="/html/category/article-9701.htm" title="学美容美发的正规学校推荐（学美容美发的正规学校推荐西安）">学美容美发的正规学校推荐（学美容美发的正规学校推荐西安）</a></li>
                        <li class="py-2"><a href="/html/category/article-9240.htm" title="韩国比较有名的化妆品品牌有哪些牌子(韩国比较有名的化妆品品牌有哪些名字)">韩国比较有名的化妆品品牌有哪些牌子(韩国比较有名的化妆品品牌有哪些名字)</a></li>
                        <li class="py-2"><a href="/html/category/article-10023.htm" title="滚筒洗衣机什么牌子好,怎么选型号(滚筒洗衣机选哪个牌子好)">滚筒洗衣机什么牌子好,怎么选型号(滚筒洗衣机选哪个牌子好)</a></li>
                        <li class="py-2"><a href="/html/category/article-9609.htm" title="国内动物医院（国内动物医院排名）">国内动物医院（国内动物医院排名）</a></li>
                        <li class="py-2"><a href="/html/category/article-10115.htm" title="香港我爱你（学会了吗）">香港我爱你（学会了吗）</a></li>
                        <li class="py-2"><a href="/html/category/article-9746.htm" title="1970年农历四月二十七是几号呢怎么读（1970年农历4月24日是什么星座）">1970年农历四月二十七是几号呢怎么读（1970年农历4月24日是什么星座）</a></li>
                        <li class="py-2"><a href="/html/category/article-9286.htm" title="动物医院手续（动物医院贵吗）">动物医院手续（动物医院贵吗）</a></li>
                        <li class="py-2"><a href="/html/category/article-9838.htm" title="动物疫苗行业的现状及未来的发展前景（2021动物疫苗行业前景）">动物疫苗行业的现状及未来的发展前景（2021动物疫苗行业前景）</a></li>
                        <li class="py-2"><a href="/html/category/article-9425.htm" title="宠物食品加工厂手续流程 宠物食品加工厂手续流程图">宠物食品加工厂手续流程 宠物食品加工厂手续流程图</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">22</span> <a href="/html/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">52</span> <a href="/html/date/2024-09/" title="2024-09 归档">2024-09</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">54</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
        <footer class="ftco-footer ftco-section">
        <div class="container">
            <div class="row">
                <div class="col-md-12 text-center">
                    <p>
                        FinlandAddress 版权所有
                        <br />
                        Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </footer>
    <!-- loader -->
    <div id="ftco-loader" class="show fullscreen"><svg class="circular" width="48px" height="48px">
            <circle class="path-bg" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke="#eeeeee" />
            <circle class="path" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke-miterlimit="10" stroke="#F96D00" /></svg></div>
    <script src="/assets/website/js/frontend/finlandaddress/jquery.min.js"></script>
    <script src="/assets/website/js/frontend/finlandaddress/jquery-migrate-3.0.1.min.js"></script>
    <script src="/assets/website/js/frontend/finlandaddress/popper.min.js"></script>
    <script src="/assets/website/js/frontend/finlandaddress/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/finlandaddress/jquery.easing.1.3.js"></script>
    <script src="/assets/website/js/frontend/finlandaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/website/js/frontend/finlandaddress/jquery.stellar.min.js"></script>
    <script src="/assets/website/js/frontend/finlandaddress/owl.carousel.min.js"></script>
    <script src="/assets/website/js/frontend/finlandaddress/jquery.magnific-popup.min.js"></script>
    <script src="/assets/website/js/frontend/finlandaddress/jquery.animateNumber.min.js"></script>
    <script src="/assets/website/js/frontend/finlandaddress/scrollax.min.js"></script>
    <script src="/assets/website/js/frontend/finlandaddress/main.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>