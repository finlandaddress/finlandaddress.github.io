<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://finlandaddress.github.io/html/category/article-3733.htm" />
    <title>Springboot使用@Cacheable注解实现数据缓存 - FinlandAddress</title>
        <meta charset="utf-8">
    <link rel="icon" href="/assets/addons/xcblog/img/finlandaddress/favicon.ico" type="image/x-icon"/>
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&display=swap" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css2?family=Raleway:wght@400;500;600;700;800;900&display=swap" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/font-awesome.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/animate.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/owl.carousel.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/owl.theme.default.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/magnific-popup.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/flaticon.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/style.css" rel="stylesheet" />
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?a045e5bb3ae69629060e7ce2a4b98902";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <nav class="navbar navbar-expand-lg navbar-dark ftco_navbar ftco-navbar-light site-navbar-target" id="ftco-navbar">
        <div class="container">
                        <a class="navbar-brand" href="/">Finland Address<span></span></a>
            
            <button class="navbar-toggler js-fh5co-nav-toggle fh5co-nav-toggle" type="button" data-toggle="collapse" data-target="#ftco-nav" aria-controls="ftco-nav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="oi oi-menu"></span> MENU
            </button>
            <div class="collapse navbar-collapse" id="ftco-nav">
                <ul class="navbar-nav nav ml-auto">
                	                    <li class="nav-item"><a href="/" class="nav-link"><span>首页</span></a></li>
                                        <li class="nav-item"><a href="/html/category/" class="nav-link"><span>文章分类</span></a></li>
                                        <li class="nav-item"><a href="#" class="nav-link"><span>关于</span></a></li>
                    <li class="nav-item"><a href="#" class="nav-link"><span>联系</span></a></li>
                </ul>
            </div>
        </div>
    </nav>
    <section class="hero-wrap" style="height:350px;overflow: hidden;">
        <div class="overlay"></div>
        <div class="container-fluid px-0">
            <div class="row d-md-flex no-gutters slider-text align-items-center js-fullheight justify-content-end">
                <img class="one-third js-fullheight align-self-end order-md-last img-fluid" src="/assets/addons/xcblog/img/finlandaddress/undraw_book_lover_mkck.svg" alt="" style="opacity: 0.5;">
                <div class="one-forth d-flex align-items-center ftco-animate js-fullheight">
                    <div class="text" style="top: 30%;min-width: 70%;">
                        <h1>Springboot使用@Cacheable注解实现数据缓存</h1>
                        <p>
                            <a href="/">首页</a> / <a href="/html/category/">文章分类</a> / <span>正文</span>
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <section class="ftco-about img ftco-section" id="about-section">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                	  				  				  				<div id="content_views" class="htmledit_views"> <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;本文介绍如何在Springboot中通过@Cacheable注解实现数据缓存。在每次调用添加了@Cacheable注解的方法（需要缓存功能的方法）时，Spring 会检查指定参数的指定目标方法是否已经被调用过，如果有就直接从缓存中获取方法调用后的结果，如果没有就调用方法并缓存结果后返回给用户。下次调用直接从缓存中获取。</p> <h3>1、添加&nbsp;<code>@EnableCaching</code><br /> </h3> <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;使用&nbsp;<code>@EnableCaching</code>&nbsp;标识在 SpringBoot 的主启动类上，开启基于注解的缓存。</p> <pre><code class="language-java">@EnableCaching public class Application {     public static void main(String[] args) {         SpringApplication.run(Application .class, args);     } }</code></pre> <h3> <code>2、添加</code>@Cacheable</h3> <p><code>&nbsp; 在需要缓存的方法上添加</code>@Cacheable注解。以后查询相同的数据，直接从缓存中取，不需要调用方法。</p> <pre><code class="language-java">@Cacheable(value = "areaTreeData") public CommonResult&lt;List&lt;Map&lt;String, Object&gt;&gt;&gt; queryTreeData(Long pId, Long lv) {   Map&lt;String, Object&gt; map = new HashMap&lt;&gt;();   map.put("state", 1);   List&lt;Map&lt;String, Object&gt;&gt; list = getTreeData(map, pId, lv);   return new CommonResult&lt;&gt;(list); }</code></pre> <blockquote> <p><span style="color:#fe2c24;"><code>注意：</code></span></p> <p><span style="color:#fe2c24;"><code>1、返回的数据类型必须支持序列化或实现了</code>Serializable接口，否则数据没法缓存。</span></p> <p><span style="color:#fe2c24;">2、只有直接调用该方法才能缓存，不能通过类中的其他方法来调用。</span></p> </blockquote> <h3><code>3、常用属性说明</code></h3> <ul> <li> <p><code>cacheNames/value</code>&nbsp;：用来指定缓存组件的名字</p> </li> <li> <p><code>key</code>&nbsp;：缓存数据时使用的 key，可以用它来指定。默认是使用方法参数的值。（这个 key 你可以使用 spEL 表达式来编写）</p> </li> <li> <p><code>keyGenerator</code>&nbsp;：key 的生成器。 key 和 keyGenerator 二选一使用</p> </li> <li> <p><code>cacheManager</code>&nbsp;：可以用来指定缓存管理器。从哪个缓存管理器里面获取缓存。</p> </li> <li> <p><code>condition</code>&nbsp;：可以用来指定符合条件的情况下才缓存</p> </li> <li> <p><code>unless</code>&nbsp;：否定缓存。当 unless 指定的条件为 true ，方法的返回值就不会被缓存。当然你也可以获取到结果进行判断。（通过&nbsp;<code>#result</code>&nbsp;获取方法结果）</p> </li> <li> <p><code>sync</code>&nbsp;：是否使用异步模式。</p> </li> </ul> <h3>4、@CacheEvict注解</h3> <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@CachEvict 的作用 主要针对方法配置，能够根据一定的条件对缓存进行清空。常用属性参数如下：</p> <table align="center" border="1" cellpadding="1" cellspacing="1"> <thead> <tr> <th style="text-align:center;vertical-align:middle;">参数</th> <th style="text-align:center;vertical-align:middle;">解释</th> <th style="text-align:center;vertical-align:middle;">example</th> </tr> </thead> <tbody> <tr> <td style="text-align:center;vertical-align:middle;">value</td> <td>缓存的名称，在 spring 配置文件中定义，必须指定至少一个</td> <td>@CacheEvict(value=”my cache”)</td> </tr> <tr> <td style="text-align:center;vertical-align:middle;">key</td> <td>缓存的 key，可以为空，如果指定要按照 SpEL 表达式编写，如果不指定，则缺省按照方法的所有参数进行组合</td> <td>@CacheEvict(value=”testcache”,key=”#userName”)</td> </tr> <tr> <td style="text-align:center;vertical-align:middle;">condition</td> <td>缓存的条件，可以为空，使用 SpEL 编写，返回 true 或者 false，只有为 true 才进行缓存</td> <td>@CacheEvict(value=”testcache”,condition=”#userName.length()&gt;2”)</td> </tr> <tr> <td style="text-align:center;vertical-align:middle;">allEntries</td> <td>是否清空所有缓存内容，缺省为 false，如果指定为 true，则方法调用后将立即清空所有缓存</td> <td>@CachEvict(value=”testcache”,allEntries=true)</td> </tr> <tr> <td style="text-align:center;vertical-align:middle;">beforeInvocation</td> <td>是否在方法执行前就清空，缺省为 false，如果指定为 true，则在方法还没有执行的时候就清空缓存，缺省情况下，如果方法执行抛出异常，则不会清空缓存</td> <td>@CachEvict(value=”testcache”，beforeInvocation=true)</td> </tr> </tbody> </table> <pre><code class="language-java">@CacheEvict(value = "areaTreeData", allEntries = true, beforeInvocation = true) public Integer save(SysArea sysArea) {    return mapper.insertSelective(sysArea); }</code></pre> <hr/> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.sgknight.cn/"  title="新时代农民工" rel="nofollow">新时代农民工</a>&nbsp;</p> </p></div> 			
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-3428.htm">Docker 解决Error response from daemon</a></p>
                                                <p>下一个：<a href="/html/category/article-3734.htm">面试官：@Transactional 注解是如何实现的？面试必问！</a></p>
                                            </div>

                                        <div class="panel panel-default mt-5">
                        <div class="panel-heading">
                            <h3 class="m-0">推荐文章</h3>
                        </div>
                        <div class="panel-body">
                            <ul class="p-0 x-0">
                                                                <li class="py-2"><a href="/html/category/article-1345.htm">vue2.x版本中computed和watch的使用入门详解-watch篇_在线工具</a></li>
                                                                <li class="py-2"><a href="/html/category/article-788.htm">深入浅出Vue3 Composition API</a></li>
                                                                <li class="py-2"><a href="/html/category/article-755.htm">第2章 图灵的计算王国</a></li>
                                                                <li class="py-2"><a href="/html/category/article-749.htm">vue @component继承的一些知识点详解</a></li>
                                                                <li class="py-2"><a href="/html/category/article-727.htm">用Python读hdfs集群parquet格式文件</a></li>
                                                                <li class="py-2"><a href="/html/category/article-658.htm">python调用c代码</a></li>
                                                                <li class="py-2"><a href="/html/category/article-649.htm">面向对象编程-正则表达式</a></li>
                                                                <li class="py-2"><a href="/html/category/article-625.htm">toString()和new String()区别</a></li>
                                                                <li class="py-2"><a href="/html/category/article-594.htm">Redis6配置主从复制+读写分离</a></li>
                                                                <li class="py-2"><a href="/html/category/article-537.htm">restFul风格传参, 参数中带斜杠/问题</a></li>
                                                            </ul>
                        </div>
                    </div>
                                    </div>
                <div class="col-md-3">
                	<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-2534.htm" title="C++数据结构与算法之排序桶排序">C++数据结构与算法之排序桶排序</a></li>
                        <li class="py-2"><a href="/html/category/article-786.htm" title="pandas读取csv文件提示字符读取失败">pandas读取csv文件提示字符读取失败</a></li>
                        <li class="py-2"><a href="/html/category/article-779.htm" title="vue中动态控制btn的disabled属性方式_vue.js">vue中动态控制btn的disabled属性方式_vue.js</a></li>
                        <li class="py-2"><a href="/html/category/article-794.htm" title="flex布局实现 内容区域高度自适应">flex布局实现 内容区域高度自适应</a></li>
                        <li class="py-2"><a href="/html/category/article-781.htm" title="一文搞定CompletableFuture并行处理，成倍缩短查询时间。">一文搞定CompletableFuture并行处理，成倍缩短查询时间。</a></li>
                        <li class="py-2"><a href="/html/category/article-1346.htm" title="java8新特性Stream流中anyMatch和allMatch和noneMatch的区别详解">java8新特性Stream流中anyMatch和allMatch和noneMatch的区别详解</a></li>
                        <li class="py-2"><a href="/html/category/article-788.htm" title="深入浅出Vue3 Composition API">深入浅出Vue3 Composition API</a></li>
                        <li class="py-2"><a href="/html/category/article-1633.htm" title="javaScript深拷贝和浅拷贝简单梳理_在线工具">javaScript深拷贝和浅拷贝简单梳理_在线工具</a></li>
                        <li class="py-2"><a href="/html/category/article-785.htm" title="C语言程序设计——用户密码输入与判断">C语言程序设计——用户密码输入与判断</a></li>
                        <li class="py-2"><a href="/html/category/article-1916.htm" title="Python 3.10 的一些新特性">Python 3.10 的一些新特性</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">54</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
        <footer class="ftco-footer ftco-section">
        <div class="container">
            <div class="row">
                <div class="col-md-12 text-center">
                    <p>
                        FinlandAddress 版权所有
                        <br />
                        Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </footer>
    <!-- loader -->
    <div id="ftco-loader" class="show fullscreen"><svg class="circular" width="48px" height="48px">
            <circle class="path-bg" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke="#eeeeee" />
            <circle class="path" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke-miterlimit="10" stroke="#F96D00" /></svg></div>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery-migrate-3.0.1.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/popper.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/bootstrap.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.easing.1.3.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.stellar.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/owl.carousel.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.magnific-popup.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.animateNumber.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/scrollax.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/main.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>