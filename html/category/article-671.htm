<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://finlandaddress.github.io/html/category/article-671.htm" />
    <title>适合初学者的C语言字符串讲解_C 语言_ - FinlandAddress</title>
        <meta charset="utf-8">
    <link rel="icon" href="/assets/addons/xcblog/img/finlandaddress/favicon.ico" type="image/x-icon"/>
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&display=swap" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css2?family=Raleway:wght@400;500;600;700;800;900&display=swap" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/font-awesome.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/animate.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/owl.carousel.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/owl.theme.default.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/magnific-popup.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/flaticon.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/style.css" rel="stylesheet" />
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?a045e5bb3ae69629060e7ce2a4b98902";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <nav class="navbar navbar-expand-lg navbar-dark ftco_navbar ftco-navbar-light site-navbar-target" id="ftco-navbar">
        <div class="container">
                        <a class="navbar-brand" href="/">Finland Address<span></span></a>
            
            <button class="navbar-toggler js-fh5co-nav-toggle fh5co-nav-toggle" type="button" data-toggle="collapse" data-target="#ftco-nav" aria-controls="ftco-nav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="oi oi-menu"></span> MENU
            </button>
            <div class="collapse navbar-collapse" id="ftco-nav">
                <ul class="navbar-nav nav ml-auto">
                	                    <li class="nav-item"><a href="/" class="nav-link"><span>首页</span></a></li>
                                        <li class="nav-item"><a href="/html/category/" class="nav-link"><span>文章分类</span></a></li>
                                        <li class="nav-item"><a href="#" class="nav-link"><span>关于</span></a></li>
                    <li class="nav-item"><a href="#" class="nav-link"><span>联系</span></a></li>
                </ul>
            </div>
        </div>
    </nav>
    <section class="hero-wrap" style="height:350px;overflow: hidden;">
        <div class="overlay"></div>
        <div class="container-fluid px-0">
            <div class="row d-md-flex no-gutters slider-text align-items-center js-fullheight justify-content-end">
                <img class="one-third js-fullheight align-self-end order-md-last img-fluid" src="/assets/addons/xcblog/img/finlandaddress/undraw_book_lover_mkck.svg" alt="" style="opacity: 0.5;">
                <div class="one-forth d-flex align-items-center ftco-animate js-fullheight">
                    <div class="text" style="top: 30%;min-width: 70%;">
                        <h1>适合初学者的C语言字符串讲解_C 语言_</h1>
                        <p>
                            <a href="/">首页</a> / <a href="/html/category/">文章分类</a> / <span>正文</span>
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <section class="ftco-about img ftco-section" id="about-section">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                	  				  				  				<p>这一篇博客我们来了解一下字符串，看下面这个我们熟知的也是最先学习的代码</p> <blockquote> <p>"Hello world!"</p> </blockquote> <p>这一堆的字母就是字符串字面值，简称字符串，每一个字母都是一个字符，字符串需要用" "双引号来引起，字符需要用’ '单引号来引起，就像下面</p> <blockquote> <p>"Hello world!"  //字符串<br />'a'  //字符<br />'!'  //字符</p> </blockquote> <p>字符串也算常量，上面三条都算字面常量，之前的讲常量的时候就举过这种例子</p> <p>那么字符串有什么用呢？</p> <p>假设我们要把下面的字符串存起来，那么我们需要怎么存呢？</p> <blockquote> <p>"abcdef"</p> </blockquote> <p>我们可以把它放在字符串数组里,有两种形式如下：</p> <div class="ay1code"> <pre class="brush:cpp;">#include&lt;stdio.h&gt;    int main()  {  char arr1[10]="abcdef";                     //形式一  char arr2[10]={'a','b','c','d','e','f'};    //形式二    //我们打印一下这些字符串  printf("%s\n",arr1);  printf("%s\n",arr2);    return 0;  }  </pre> </div> <p>运行的结果：</p> <blockquote> <p>abcdef</p> <p>abcdef</p> </blockquote> <p style="text-align:center"><img decoding="async" alt="请添加图片描述" src="http://img.555519.xyz/uploads3/20220419/b543b6c3d8316cf24471776b1b9d0aa0.jpg"></p> <p>把"abcdef"都存在arr[ ]这个数组里面，[ ]里面数是多少，就能存多少字符</p> <p>arr[10]可以存10个字符 ，但一定要不小于你要存的字符</p> <p>你也可以不写[ ]里面的数字，它会自己根据你要存的字符串来调整，就像这样</p> <div class="ay1code"> <pre class="brush:cpp;">#include&lt;stdio.h&gt;    int main()  {  char arr[]="abcdef";    //char-字符类型，没有字符串类型哦  return 0;  }  </pre> </div> <p>那这两种形式有什么区别呢？</p> <p>我们不写arr[ ]里面的数字，我们来看一下</p> <div class="ay1code"> <pre class="brush:cpp;">#include&lt;stdio.h&gt;    int main()  {  char arr1[]="abcdef";  char arr2[]={'a','b','c','d','e','f'};    //我们打印一下这些字符串  printf("%s\n",arr1);  printf("%s\n",arr2);    return 0;  }  </pre> </div> <p>运行的结果：</p> <blockquote> <p>abcdef</p> <p>abcdef烫烫烫烫烫abcdef</p> </blockquote> <p style="text-align:center"><img decoding="async" alt="请添加图片描述" src="http://img.555519.xyz/uploads3/20220419/a168617c14cc47e2bd0194e123cf012c.jpg"></p> <p>哎，发现没有，它们不一样了，那为什么会出现这种情况呢？</p> <p>先想一个问题，它是根据什么来停止打印的？</p> <p>（啊，你会问：它们后面啥都没有，我怎么会知道它们根据什么来停下来的）</p> <p>那里确实看不见有什么标志，但是那个标志就是看不见的，字符串的结束标志是\0,它是一个我们马上就会学到的转义字符</p> <div class="ay1code"> <pre class="brush:cpp;">char arr1[]="abcdef";  </pre> </div> <p>这个形式一，字符串后面就默认带了一个\0</p> <div class="ay1code"> <pre class="brush:cpp;">char arr2[]={'a','b','c','d','e','f'};</pre> </div> <p>这个形式二，后面没有\0</p> <p>懂了吧，printf去打印的时候要识别到\0才会结束</p> <p>第一个形式最后一个字符结束就识别到了\0，然后结束</p> <p>第二个形式识别到最后的f，一直都没有识别到\0，就一直打印下去，最后就出现刚才的结果</p> <p>那么如果我们给第二个形式加一个\0作为结束标志怎么样，不要光想，我们来做一下试试</p> <div class="ay1code"> <pre class="brush:cpp;">#include&lt;stdio.h&gt;    int main()  {  char arr1[]="abcdef\0";   //我们也试一下给它也加一个\0  char arr2[]={'a','b','c','d','e','f','\0'};    //我们打印一下这些字符串  printf("%s\n",arr1);    //%s是打印字符串的  printf("%s\n",arr2);    //%s是打印字符串的     return 0;  }  </pre> </div> <p>运行的结果：</p> <blockquote> <p>abcdef</p> <p>abcdef</p> </blockquote> <p style="text-align:center"><img decoding="async" alt="请添加图片描述" src="http://img.555519.xyz/uploads3/20220419/82928d9523e0ca1511f6af1149c66003.jpg"></p> <p>结果运行正常了</p> <p>那么\0算不算里面的字符串长度的一部分呢？</p> <p>又来介绍一个好东西，strlen，它可以计算一个字符串长度的函数，但是使用它还是跟以前一样，需要给另一个头文件string.h打一下招呼才能使用它，我们来实操一下：</p> <div class="ay1code"> <pre class="brush:cpp;">#include&lt;string.h&gt;  #include&lt;string.h&gt;    int main()  {  	char a[] = "abc";  	char b[] = "abc\0";  	printf("%d", strlen(a));  	printf("%d", strlen(b));  	return 0;  }  </pre> </div> <p>运行结果：</p> <blockquote> <p>3</p> <p>3</p> </blockquote> <p style="text-align:center"><img decoding="async" alt="请添加图片描述" src="http://img.555519.xyz/uploads3/20220419/feb512ac68ae68c29363357d979587fe.jpg"></p> <blockquote> <p>"abc"</p> </blockquote> <p>这个字符串的长度为3，所以我们可以知道看不见的\0并不算在长度里面的,就算在后面加上\0也是一样</p> <p>大家可以试一试计算一下第二种形式不加\0情况下的字符串长度，保持好奇心，去自己尝试一下。</p> <p>就这样，我们把"abcdef"这个数组储存起来了，那我们要使用里面的字符怎么办？我们还需要再了解一个知识：</p> <p>调用arr里面字符，用arr[2]就可以调用c，用arr[0]就可以调用a，它们的对应关系也就是：</p> <blockquote> <p> a  b  c  d  e  f<br /> 0  1  2  3  4  5</p> </blockquote> <p>我们来实验一下</p> <div class="ay1code"> <pre class="brush:cpp;">#include&lt;stdio.h&gt;    int main()  {  char arr[]="abcdef";  printf("%c",arr[2]);  return 0;  }  </pre> </div> <p>运行结果：</p> <blockquote> <p>a</p> </blockquote> <p style="text-align:center"><img decoding="async" alt="请添加图片描述" src="http://img.555519.xyz/uploads3/20220419/af61bab6337649c7bd9ad55534c0f26d.jpg"></p> <div class="ay1code"> <pre class="brush:cpp;">#include&lt;stdio.h&gt;    int main()  {  char arr[]="abcdef";  printf("%c",arr[0]);  return 0;  }  </pre> </div> <p>运行结果：</p> <blockquote> <p>a</p> </blockquote> <p style="text-align:center"><img decoding="async" alt="请添加图片描述" src="http://img.555519.xyz/uploads3/20220419/cfdae8e06840af16cbbd4c8bfa291c4a.jpg"></p> 			
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-670.htm">vue实现列表无缝滚动效果_vue.js</a></p>
                                                <p>下一个：<a href="/html/category/article-672.htm">python里函数怎么样使用元组或字典作为参数调用</a></p>
                                            </div>

                                    </div>
                <div class="col-md-3">
                	<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-782.htm" title="Spring Cloud Config 配置中心(用途、使用、加解密)">Spring Cloud Config 配置中心(用途、使用、加解密)</a></li>
                        <li class="py-2"><a href="/html/category/article-793.htm" title="Java中线程状态+线程安全问题+synchronized的用法详解_java_">Java中线程状态+线程安全问题+synchronized的用法详解_java_</a></li>
                        <li class="py-2"><a href="/html/category/article-1326.htm" title="go异常/错误机制（panic和error）">go异常/错误机制（panic和error）</a></li>
                        <li class="py-2"><a href="/html/category/article-754.htm" title="手把手带你入门链表的基本操作及其优化">手把手带你入门链表的基本操作及其优化</a></li>
                        <li class="py-2"><a href="/html/category/article-1346.htm" title="java8新特性Stream流中anyMatch和allMatch和noneMatch的区别详解">java8新特性Stream流中anyMatch和allMatch和noneMatch的区别详解</a></li>
                        <li class="py-2"><a href="/html/category/article-767.htm" title="超详细，Python 多线程总结的太到位了">超详细，Python 多线程总结的太到位了</a></li>
                        <li class="py-2"><a href="/html/category/article-766.htm" title="Java：线程的三种中断方式">Java：线程的三种中断方式</a></li>
                        <li class="py-2"><a href="/html/category/article-764.htm" title="SpringBoot中使用RestTemplate发送文件流，以及读取zip压缩包中文件的方法">SpringBoot中使用RestTemplate发送文件流，以及读取zip压缩包中文件的方法</a></li>
                        <li class="py-2"><a href="/html/category/article-761.htm" title="springMVC拦截器从Request中获取Json格式并解决request的请求流只能读取一次的问题">springMVC拦截器从Request中获取Json格式并解决request的请求流只能读取一次的问题</a></li>
                        <li class="py-2"><a href="/html/category/article-1057.htm" title="mysql 数据库密码问题">mysql 数据库密码问题</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">40</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">54</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
        <footer class="ftco-footer ftco-section">
        <div class="container">
            <div class="row">
                <div class="col-md-12 text-center">
                    <p>
                        FinlandAddress 版权所有
                        <br />
                        Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </footer>
    <!-- loader -->
    <div id="ftco-loader" class="show fullscreen"><svg class="circular" width="48px" height="48px">
            <circle class="path-bg" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke="#eeeeee" />
            <circle class="path" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke-miterlimit="10" stroke="#F96D00" /></svg></div>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery-migrate-3.0.1.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/popper.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/bootstrap.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.easing.1.3.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.stellar.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/owl.carousel.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.magnific-popup.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.animateNumber.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/scrollax.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/main.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>