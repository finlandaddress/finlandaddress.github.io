<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://finlandaddress.github.io/html/category/article-747.htm" />
    <title>Istio实践流量控制及服务间调用 - FinlandAddress</title>
        <meta charset="utf-8">
    <link rel="icon" href="/assets/addons/xcblog/img/finlandaddress/favicon.ico" type="image/x-icon"/>
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&display=swap" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css2?family=Raleway:wght@400;500;600;700;800;900&display=swap" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/font-awesome.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/animate.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/owl.carousel.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/owl.theme.default.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/magnific-popup.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/flaticon.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/style.css" rel="stylesheet" />
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?a045e5bb3ae69629060e7ce2a4b98902";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <nav class="navbar navbar-expand-lg navbar-dark ftco_navbar ftco-navbar-light site-navbar-target" id="ftco-navbar">
        <div class="container">
                        <a class="navbar-brand" href="/">Finland Address<span></span></a>
            
            <button class="navbar-toggler js-fh5co-nav-toggle fh5co-nav-toggle" type="button" data-toggle="collapse" data-target="#ftco-nav" aria-controls="ftco-nav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="oi oi-menu"></span> MENU
            </button>
            <div class="collapse navbar-collapse" id="ftco-nav">
                <ul class="navbar-nav nav ml-auto">
                	                    <li class="nav-item"><a href="/" class="nav-link"><span>首页</span></a></li>
                                        <li class="nav-item"><a href="/html/category/" class="nav-link"><span>文章分类</span></a></li>
                                        <li class="nav-item"><a href="#" class="nav-link"><span>关于</span></a></li>
                    <li class="nav-item"><a href="#" class="nav-link"><span>联系</span></a></li>
                </ul>
            </div>
        </div>
    </nav>
    <section class="hero-wrap" style="height:350px;overflow: hidden;">
        <div class="overlay"></div>
        <div class="container-fluid px-0">
            <div class="row d-md-flex no-gutters slider-text align-items-center js-fullheight justify-content-end">
                <img class="one-third js-fullheight align-self-end order-md-last img-fluid" src="/assets/addons/xcblog/img/finlandaddress/undraw_book_lover_mkck.svg" alt="" style="opacity: 0.5;">
                <div class="one-forth d-flex align-items-center ftco-animate js-fullheight">
                    <div class="text" style="top: 30%;min-width: 70%;">
                        <h1>Istio实践流量控制及服务间调用</h1>
                        <p>
                            <a href="/">首页</a> / <a href="/html/category/">文章分类</a> / <span>正文</span>
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <section class="ftco-about img ftco-section" id="about-section">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                	  				  				  				<h3 id="前言接上一篇istio应用部署本文介绍通过virtualservice实现流量控制并通过部署client端进行服务调用实例">前言：接上一篇istio应用部署，本文介绍通过virtualservice实现流量控制，并通过部署client端进行服务调用实例</h3> <h3 id="1-修改virtualservice组件实现权重占比访问不同版本服务v1版本70v2版本30">1. 修改virtualservice组件，实现权重占比访问不同版本服务（v1版本70%，v2版本30%）</h3> <ul> <li> <h5 id="拆分流量使用weight关键字来设置70的流量走v1版本30的流量走v2版本">拆分流量使用weight关键字来设置，70%的流量走v1版本,30%的流量走v2版本</h5> <p><img decoding="async" src="https://img2022.cnblogs.com/blog/248637/202204/248637-20220410160640170-1096476487.png" alt="Istio实践流量控制及服务间调用"></li> <li> <h5 id="输入命令重新应用一下virtualservice组件">输入命令，重新应用一下virtualservice组件</h5> <pre><code>  sudo kubectl apply -f springbootapp-vs-v1.yaml -n springistiodemo</code></pre> </li> <li> <h5 id="通过istio-ingressgateway对外访问的地址进行服务访问httpip31380hello">通过istio-ingressgateway对外访问的地址，进行服务访问（<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://ip:31380/hello%EF%BC%89"  target="_blank" rel="nofollow">http://ip:31380/hello）</a></h5> <p><img decoding="async" src="https://img2022.cnblogs.com/blog/248637/202204/248637-20220410161818823-1596225825.png" alt="Istio实践流量控制及服务间调用"></li> <li> <h5 id="通过kiali管理界面查看服务调用详情可以看到v1版本访问占比大概达到70左右">通过kiali管理界面，查看服务调用详情，可以看到v1版本访问占比大概达到70%左右</h5> <p><img decoding="async" src="https://img2022.cnblogs.com/blog/248637/202204/248637-20220410162114697-2051851130.png" alt="Istio实践流量控制及服务间调用"></li> </ul> <h3 id="2-超时时间设置timeout0002s">2. 超时时间设置，timeout：0.002s</h3> <ul> <li> <h5 id="修改virtualservice的yaml文件添加timeout属性数值改小一些方便测试">修改virtualservice的yaml文件，添加timeout属性，数值改小一些，方便测试</h5> <p><img decoding="async" src="https://img2022.cnblogs.com/blog/248637/202204/248637-20220410163817058-574867242.png" alt="Istio实践流量控制及服务间调用"></li> <li> <h5 id="访问服务不断刷新发现有一部分服务已超时访问不到">访问服务，不断刷新，发现有一部分服务已超时，访问不到</h5> <p><img decoding="async" src="https://img2022.cnblogs.com/blog/248637/202204/248637-20220410163909407-760024098.png" alt="Istio实践流量控制及服务间调用"></li> <li> <h5 id="通过kiali管理界面查看服务调用详情发现v2版本已100-error">通过kiali管理界面，查看服务调用详情，发现v2版本已100% error</h5> <p><img decoding="async" src="https://img2022.cnblogs.com/blog/248637/202204/248637-20220410164005417-1246953078.png" alt="Istio实践流量控制及服务间调用"></li> </ul> <h3 id="3-服务间调用运行busybox容器客户端访问springbootapp应用服务">3. 服务间调用：运行busybox容器客户端，访问springbootapp应用服务</h3> <ul> <li> <h5 id="新建一个busybox的客户端资源与应用不在同一命名空间中当然也可以在同一命名空间中创建命名空间istioclient并设置istio自动注入">新建一个busybox的客户端资源,与应用不在同一命名空间中，当然也可以在同一命名空间中；创建命名空间istioclient，并设置istio自动注入</h5> <pre><code>  sudo kubectl create namespace istioclient   sudo kubectl label namespace istioclient istio-injection=enabled   sudo kubectl get ns istioclient --show-labels # 查看注入状态</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/c421b0431d792abb51e80ab5da7fe02c.jpg" alt="Istio实践流量控制及服务间调用"></p> </li> <li> <h5 id="client文件busybox-clientyaml内容">client文件busybox-client.yaml内容</h5> <pre><code>  apiVersion: apps/v1   kind: Deployment   metadata:   name: busyclient   # namespace: istioclient   spec:   replicas: 1   selector:   	matchLabels:   	app: busyclient   strategy:   	rollingUpdate: 		maxSurge: 25% 		maxUnavailable: 25%   	type: RollingUpdate   template:   	metadata: 		labels:   		app: busyclient   		version: v1       spec:         containers: 		- name: busybox   		image: busybox   		imagePullPolicy: IfNotPresent  # 不存在才拉取镜像，默认值   		command: [ "/bin/sh", "-c", "sleep 3600" ]</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/73f1d878158b2a7c2892c60eb0d36c52.jpg" alt="Istio实践流量控制及服务间调用"></p> </li> <li> <h5 id="执行命令创建deployment">执行命令，创建Deployment：</h5> <pre><code>  sudo kubectl apply -f busybox-client.yaml -n istioclient</code></pre> </li> <li> <h5 id="查看pod">查看pod</h5> <pre><code>  sudo kubectl get pods -n istioclient</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/bbd79c0ed6085955ed69040394236cfa.jpg" alt="Istio实践流量控制及服务间调用"></p> </li> <li> <h5 id="进入客户端容器中访问springbootapp服务">进入客户端容器中，访问springbootapp服务</h5> <pre><code>  sudo kubectl exec -it busyclient-5f6b7b954d-9wq5q /bin/sh -n istioclient</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/2fbdf29d405cf076da1107741a4dc08a.jpg" alt="Istio实践流量控制及服务间调用"></p> </li> <li> <h5 id="访问springbootapp服务">访问springbootapp服务</h5> <pre><code>  wget -q -O - http://springbootapp-svc.springistiodemo:8080/hello</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/b58d78eda5bd0cb915af1b3281adab20.jpg" alt="Istio实践流量控制及服务间调用"></p> <h6 id="说明">说明：</h6> <pre><code>  1.上述服务格式[servicename].[namespace]:[port]/[action]   客户端与服务不在同一命名空间下，使用上述格式访问服务，参考k8s的namespace隔离机制   2.如在同一命名空间下，则直接使用[servicename]:[port]/[action]访问   for i in `seq 10`;do wget -q -O - http://springbootapp-svc:8080/hello;done   3.此处的port对应的是k8s的service（svc）节点的port端口值，不是nodePort端口设置值；   port是service端口，即k8s中服务之间的访问端口   targetport是pod（也就是容器）的端口   nodeport是容器所在node节点的端口，即外部机器可访问的端口。（通过nodeport类型的service暴露给集群节点）   4.busybox client客户端也必须经过 Istio 注入，因为只有客户端被 Istio 注入才可以接收到来自 Pilot 有关 Virtual Service 和 Destination Rule 的配置信息，才可以保证流量接管生效。</code></pre> </li> <li> <h5 id="可以通过命令运行busybox退出后pod自动删除释放">可以通过命令运行busybox，退出后pod自动删除释放</h5> <pre><code>  sudo kubectl run --namespace=springistiodemo busybox --rm -ti --image busybox /bin/sh</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/20a1c061c966448151fdbf2f3d3edb3d.jpg" alt="Istio实践流量控制及服务间调用"></p> </li> </ul> 			
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-746.htm">云环境下集合隐私计算-解读</a></p>
                                                <p>下一个：<a href="/html/category/article-748.htm">Halo 开源项目学习实体类与数据表</a></p>
                                            </div>

                                    </div>
                <div class="col-md-3">
                	<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-775.htm" title="toString()、new String()和(String) 、String.ValueOf()的区别">toString()、new String()和(String) 、String.ValueOf()的区别</a></li>
                        <li class="py-2"><a href="/html/category/article-768.htm" title="mysql双机热备 读写分离_轻松搭建MySQL主从复制、读写分离（双机热备）">mysql双机热备 读写分离_轻松搭建MySQL主从复制、读写分离（双机热备）</a></li>
                        <li class="py-2"><a href="/html/category/article-1336.htm" title="SpringMVC拦截器path路径的坑">SpringMVC拦截器path路径的坑</a></li>
                        <li class="py-2"><a href="/html/category/article-781.htm" title="一文搞定CompletableFuture并行处理，成倍缩短查询时间。">一文搞定CompletableFuture并行处理，成倍缩短查询时间。</a></li>
                        <li class="py-2"><a href="/html/category/article-1355.htm" title="字符串连接的Java程序。">字符串连接的Java程序。</a></li>
                        <li class="py-2"><a href="/html/category/article-1944.htm" title="简单了解 TiDB 架构">简单了解 TiDB 架构</a></li>
                        <li class="py-2"><a href="/html/category/article-783.htm" title="Vue中所有的v-指令">Vue中所有的v-指令</a></li>
                        <li class="py-2"><a href="/html/category/article-788.htm" title="深入浅出Vue3 Composition API">深入浅出Vue3 Composition API</a></li>
                        <li class="py-2"><a href="/html/category/article-770.htm" title="win11系统怎么更改屏幕刷新率">win11系统怎么更改屏幕刷新率</a></li>
                        <li class="py-2"><a href="/html/category/article-766.htm" title="Java：线程的三种中断方式">Java：线程的三种中断方式</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">52</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">54</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
        <footer class="ftco-footer ftco-section">
        <div class="container">
            <div class="row">
                <div class="col-md-12 text-center">
                    <p>
                        FinlandAddress 版权所有
                        <br />
                        Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </footer>
    <!-- loader -->
    <div id="ftco-loader" class="show fullscreen"><svg class="circular" width="48px" height="48px">
            <circle class="path-bg" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke="#eeeeee" />
            <circle class="path" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke-miterlimit="10" stroke="#F96D00" /></svg></div>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery-migrate-3.0.1.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/popper.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/bootstrap.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.easing.1.3.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.stellar.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/owl.carousel.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.magnific-popup.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.animateNumber.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/scrollax.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/main.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>