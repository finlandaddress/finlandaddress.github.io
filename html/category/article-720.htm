<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://finlandaddress.github.io/html/category/article-720.htm" />
    <title>一种优雅的Golang的库插件注册加载机制 - FinlandAddress</title>
        <meta charset="utf-8">
    <link rel="icon" href="/assets/addons/xcblog/img/finlandaddress/favicon.ico" type="image/x-icon"/>
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&display=swap" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css2?family=Raleway:wght@400;500;600;700;800;900&display=swap" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/font-awesome.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/animate.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/owl.carousel.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/owl.theme.default.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/magnific-popup.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/flaticon.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/style.css" rel="stylesheet" />
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?a045e5bb3ae69629060e7ce2a4b98902";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <nav class="navbar navbar-expand-lg navbar-dark ftco_navbar ftco-navbar-light site-navbar-target" id="ftco-navbar">
        <div class="container">
                        <a class="navbar-brand" href="/">Finland Address<span></span></a>
            
            <button class="navbar-toggler js-fh5co-nav-toggle fh5co-nav-toggle" type="button" data-toggle="collapse" data-target="#ftco-nav" aria-controls="ftco-nav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="oi oi-menu"></span> MENU
            </button>
            <div class="collapse navbar-collapse" id="ftco-nav">
                <ul class="navbar-nav nav ml-auto">
                	                    <li class="nav-item"><a href="/" class="nav-link"><span>首页</span></a></li>
                                        <li class="nav-item"><a href="/html/category/" class="nav-link"><span>文章分类</span></a></li>
                                        <li class="nav-item"><a href="#" class="nav-link"><span>关于</span></a></li>
                    <li class="nav-item"><a href="#" class="nav-link"><span>联系</span></a></li>
                </ul>
            </div>
        </div>
    </nav>
    <section class="hero-wrap" style="height:350px;overflow: hidden;">
        <div class="overlay"></div>
        <div class="container-fluid px-0">
            <div class="row d-md-flex no-gutters slider-text align-items-center js-fullheight justify-content-end">
                <img class="one-third js-fullheight align-self-end order-md-last img-fluid" src="/assets/addons/xcblog/img/finlandaddress/undraw_book_lover_mkck.svg" alt="" style="opacity: 0.5;">
                <div class="one-forth d-flex align-items-center ftco-animate js-fullheight">
                    <div class="text" style="top: 30%;min-width: 70%;">
                        <h1>一种优雅的Golang的库插件注册加载机制</h1>
                        <p>
                            <a href="/">首页</a> / <a href="/html/category/">文章分类</a> / <span>正文</span>
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <section class="ftco-about img ftco-section" id="about-section">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                	  				  				  				<h1 id="一种优雅的golang的库插件注册加载机制">一种优雅的Golang的库插件注册加载机制</h1> <p>你好，我是轩脉刃。</p> <p>最近看到一个内部项目的插件加载机制，非常赞。当然这里说的插件并不是指的golang原生的可以在buildmode中加载指定so文件的那种加载机制。而是软件设计上的「插件」。如果你的软件是一个框架，或者一个平台性产品，想要提升扩展性，即可以让第三方进行第三方库开发，最终能像搭积木一样将这些库组装起来。那么就可能需要这种库加载机制。</p> <p>我们的目标是什么？对第三方库进行某种库规范，只要按照这种库规范进行开发，这个库就可以被加载到框架中。</p> <p>我们先定义一个插件的数据结构，这里肯定是需要使用接口来规范，这个可以根据你的项目自由发挥，比如我希望插件有一个Setup方法来在启动的时候加载即可。然后我就定义如下的Plugin结构。</p> <pre><code class="language-go">type Plugin interface{   Name() string   Setup(config map[string]string) error }</code></pre> <p>而在框架启动的时候，我启动了一个如下的全局变量：</p> <pre><code class="language-go">var plugins map[string]Plugin</code></pre> <h2 id="注册">注册</h2> <p>有人可能会问，这里有了加载函数setup，但是为什么没有注册逻辑呢？</p> <p>答案是注册的逻辑放在库的init函数中。</p> <p>即框架还提供了一个注册函数。</p> <pre><code class="language-go">// package plugin  Register(plugin Plugin)</code></pre> <p>这个register就是实现了将第三方plugin放到plugins全局变量中。</p> <p>所以第三方的plugin库大致实现如下：</p> <pre><code>package MyPlugin  type MyPlugin struct{ }  func (m *MyPlugin) Setup(config map[string]string) error { 	// TODO }  func (m *MyPlugin) Name() string { 	return "myPlugin" }  func init() { 	plugin.Register(&amp;MyPlugin) }</code></pre> <p>这样注册的逻辑就变成了，如果你要加载一个插件，那么你在main.go中直接以 _ import的形式引入即可。</p> <pre><code>package main  _ import "github.com/foo/myplugin"  func main() {  }</code></pre> <p>整体的感觉，这样子插件的注册就被“隐藏”到import中了。</p> <h2 id="加载">加载</h2> <p>注册的逻辑其实看起来也平平无奇，但是加载的逻辑就考验细节了。</p> <p>首先插件的加载其实有两点需要考虑：</p> <ul> <li>配置</li> <li>依赖</li> </ul> <p>配置指的是插件一定是有某种配置的，这些配置以配置文件yaml中plugins.myplugin的路径存在。</p> <pre><code>plugins: 	myplugin: 		foo: bar</code></pre> <p>其实我对这种实现持保留意见。配置文件以一个文件中配置项的形式存在，好像不如以配置文件的形式存在，即以config/plugins/myplugin.yaml 的文件。</p> <p>这样不会出现一个大配置文件的问题。毕竟每个配置文件本身就是一门DSL语言。如果你将配置文件的逻辑变复杂，一定会有很多附带的bug是由于配置文件错误导致的。</p> <p>第二个说的是依赖。插件A依赖与插件B，那么这里就有加载函数Setup的先后顺序了。这种先后顺序如果纯依赖用户的“经验”，将某个插件的Setup调用放在某个插件的Setup调用之前，是非常痛苦的。（虽然一定是有办法可以做到）。更好的办法是依赖于框架自身的加载机制来进行加载。</p> <p>首先我们在plugin包中定义一个接口：</p> <pre><code class="language-go">type Depend interface{ 	DependOn() []string }</code></pre> <p>如果我的插件依赖一个名字为 “fooPlugin” 的插件，那么我的插件 MyPlugin就会实现这个接口。</p> <pre><code>package MyPlugin  type MyPlugin struct{ }  func (m *MyPlugin) Setup(config map[string]string) error { 	// TODO }  func (m *MyPlugin) Name() string { 	return "myPlugin" }  func init() { 	plugin.Register(&amp;MyPlugin) }  func (m *MyPlugin) DependOn() []string { 	return []string{"fooPlugin"} }</code></pre> <p>在最终加载所有插件的时候，我们并不是简单地将所有插件调用Setup，而是使用一个channel，将所有插件放在channel中，然后一个个调用Setup，遇到有Depend其他插件的，且依赖插件还未被加载，则将当前插件放在队列最后（重新塞入channel）。</p> <pre><code>var setupStatus map[string]bool  // 获取所有注册插件 func loadPlugins() (plugin chan Plugin, setupStatus map[string]bool) { 	// 这里定义一个长度为10的队列 	var sortPlugin = make(chan Plugin, 10) 	var setupStatus = make[string]bool 	 	// 所有的插件 	for name, plugin := range plugins { 		sortPlugin &lt;- plugin 		setupStatus[name] = false 	} 	 	return sortPlugin, setupStatus }  // 加载所有插件 func SetupPlugins(pluginChan chan Plugin, setupStatus map[string]bool) error { 	num := len(pluginChan) 	for num &gt; 0 { 		plugin &lt;- pluginChan 		 		canSetup := true 		if deps, ok := p.(Depend); ok { 			depends := deps.DependOn() 			for _, dependName := range depends{ 				if _, setuped := setupStatus[dependName]; !setup { 						// 有未加载的插件 						canSetup = false 						break 				} 			} 		} 		 		// 如果这个插件能被setup 		if canSetup { 			plugin.Setup(xxx) 			setupStatus[p.Name()] = true 		} else { 			// 如果插件不能被setup, 这个plugin就塞入到最后一个队列 			pluginChan &lt;- plugin 		} 	} 	return nil }</code></pre> <p>上面这段代码最精妙的就是使用了一个有buffer的channel作为一个队列，消费队列一方SetupPlugins，除了消费队列，也有可能生产数据到队列，这样就保证了队列中所有plugin都是被按照标记的依赖被顺序加载的。</p> <h1 id="总结">总结</h1> <p>这种插件的注册和加载机制是非常优雅的。注册方面，巧妙使用隐式import来做插件的注册。而加载方面，巧妙使用有buffer的channel作为加载队列。</p> 			
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-719.htm">Vue项目自动设置版本号，版本号变更清空缓存</a></p>
                                                <p>下一个：<a href="/html/category/article-721.htm">react几种点击事件</a></p>
                                            </div>

                                    </div>
                <div class="col-md-3">
                	<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-764.htm" title="SpringBoot中使用RestTemplate发送文件流，以及读取zip压缩包中文件的方法">SpringBoot中使用RestTemplate发送文件流，以及读取zip压缩包中文件的方法</a></li>
                        <li class="py-2"><a href="/html/category/article-785.htm" title="C语言程序设计——用户密码输入与判断">C语言程序设计——用户密码输入与判断</a></li>
                        <li class="py-2"><a href="/html/category/article-1325.htm" title="RBAC-基于角色的访问控制详解">RBAC-基于角色的访问控制详解</a></li>
                        <li class="py-2"><a href="/html/category/article-1058.htm" title="Map循环遍历的常用方法">Map循环遍历的常用方法</a></li>
                        <li class="py-2"><a href="/html/category/article-783.htm" title="Vue中所有的v-指令">Vue中所有的v-指令</a></li>
                        <li class="py-2"><a href="/html/category/article-1326.htm" title="go异常/错误机制（panic和error）">go异常/错误机制（panic和error）</a></li>
                        <li class="py-2"><a href="/html/category/article-765.htm" title="如何在MySQL DATEDIFF()函数中使用两位数的年份值？">如何在MySQL DATEDIFF()函数中使用两位数的年份值？</a></li>
                        <li class="py-2"><a href="/html/category/article-2244.htm" title="Spring Boot Web项目ConcurrentLinkedQueue+ReentrantLock+Condition实现消费者功能(类似MQ队列)">Spring Boot Web项目ConcurrentLinkedQueue+ReentrantLock+Condition实现消费者功能(类似MQ队列)</a></li>
                        <li class="py-2"><a href="/html/category/article-2243.htm" title="Android jetpack room+ViewModel+liveData 数据自动更新">Android jetpack room+ViewModel+liveData 数据自动更新</a></li>
                        <li class="py-2"><a href="/html/category/article-782.htm" title="Spring Cloud Config 配置中心(用途、使用、加解密)">Spring Cloud Config 配置中心(用途、使用、加解密)</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">52</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">54</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
        <footer class="ftco-footer ftco-section">
        <div class="container">
            <div class="row">
                <div class="col-md-12 text-center">
                    <p>
                        FinlandAddress 版权所有
                        <br />
                        Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </footer>
    <!-- loader -->
    <div id="ftco-loader" class="show fullscreen"><svg class="circular" width="48px" height="48px">
            <circle class="path-bg" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke="#eeeeee" />
            <circle class="path" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke-miterlimit="10" stroke="#F96D00" /></svg></div>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery-migrate-3.0.1.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/popper.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/bootstrap.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.easing.1.3.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.stellar.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/owl.carousel.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.magnific-popup.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.animateNumber.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/scrollax.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/main.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>