<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://finlandaddress.github.io/html/category/article-735.htm" />
    <title>机器学习笔记：Python底层实现KNN - FinlandAddress</title>
        <meta charset="utf-8">
    <link rel="icon" href="/assets/addons/xcblog/img/finlandaddress/favicon.ico" type="image/x-icon"/>
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&display=swap" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css2?family=Raleway:wght@400;500;600;700;800;900&display=swap" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/font-awesome.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/animate.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/owl.carousel.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/owl.theme.default.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/magnific-popup.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/flaticon.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/style.css" rel="stylesheet" />
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?a045e5bb3ae69629060e7ce2a4b98902";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <nav class="navbar navbar-expand-lg navbar-dark ftco_navbar ftco-navbar-light site-navbar-target" id="ftco-navbar">
        <div class="container">
                        <a class="navbar-brand" href="/">Finland Address<span></span></a>
            
            <button class="navbar-toggler js-fh5co-nav-toggle fh5co-nav-toggle" type="button" data-toggle="collapse" data-target="#ftco-nav" aria-controls="ftco-nav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="oi oi-menu"></span> MENU
            </button>
            <div class="collapse navbar-collapse" id="ftco-nav">
                <ul class="navbar-nav nav ml-auto">
                	                    <li class="nav-item"><a href="/" class="nav-link"><span>首页</span></a></li>
                                        <li class="nav-item"><a href="/html/category/" class="nav-link"><span>文章分类</span></a></li>
                                        <li class="nav-item"><a href="#" class="nav-link"><span>关于</span></a></li>
                    <li class="nav-item"><a href="#" class="nav-link"><span>联系</span></a></li>
                </ul>
            </div>
        </div>
    </nav>
    <section class="hero-wrap" style="height:350px;overflow: hidden;">
        <div class="overlay"></div>
        <div class="container-fluid px-0">
            <div class="row d-md-flex no-gutters slider-text align-items-center js-fullheight justify-content-end">
                <img class="one-third js-fullheight align-self-end order-md-last img-fluid" src="/assets/addons/xcblog/img/finlandaddress/undraw_book_lover_mkck.svg" alt="" style="opacity: 0.5;">
                <div class="one-forth d-flex align-items-center ftco-animate js-fullheight">
                    <div class="text" style="top: 30%;min-width: 70%;">
                        <h1>机器学习笔记：Python底层实现KNN</h1>
                        <p>
                            <a href="/">首页</a> / <a href="/html/category/">文章分类</a> / <span>正文</span>
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <section class="ftco-about img ftco-section" id="about-section">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                	  				  				  				<div id="content_views" class="htmledit_views"> <h1 id="%E7%B3%BB%E5%88%97%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95">前言</h1> <p><span style="color:#999aaa;">小白纯新手，自学了sklearn，想要挑战用python手写机器学习中的主要算法。</span></p> <hr/> <h1>1.导入数据</h1> <p>借助python自带的pandas库导入数据，很简单。用的数据是下载到本地的红酒集。</p> <p><span style="color:#999aaa;">代码如下（示例）：</span></p> <pre><code class="language-c language-python">import pandas as pd def read_xlsx(csv_path):     data = pd.read_csv(csv_path)     print(data)     return data</code></pre> <h2 id="2.%E8%AF%BB%E5%85%A5%E6%95%B0%E6%8D%AE">2.归一化</h2> <p>KNN算法中将用到距离，因此归一化是一个重要步骤，可以消除数据的量纲。我用了归一化，消除量纲也可以用标准化，但是作为新手，我觉得归一化比较简单。</p> <p>其中最大最小值的计算用到了python中的numpy库，pandas导入的数据是DateFrame形式的，np.array()用来将DateFrame形式转化为可以用numpy计算的ndarray形式。</p> <p><span style="color:#999aaa;">代码如下（示例）：</span></p> <pre><code class="language-c language-python">import numpy as np def MinMaxScaler(data):     col = data.shape[1]     for i in range(0, col-1):         arr = data.iloc[:, i]         arr = np.array(arr) #将DataFrame形式转化为ndarray形式，方便后续用numpy计算         min = np.min(arr)         max = np.max(arr)         arr = (arr-min)/(max-min)         data.iloc[:, i] = arr     return data</code></pre> <h2>3.分训练集和测试集</h2> <p>先将数据值和标签值分别用x和y划分开，设置随机数种子random_state，若不设置，则每次运行的结果会不相同。test_size表示测试集比例。</p> <pre><code class="language-python">def train_test_split(data, test_size=0.2, random_state=None):     col = data.shape[1]     x = data.iloc[:, 0:col-1]     y = data.iloc[:, -1]     x = np.array(x)     y = np.array(y)     # 设置随机种子，当随机种子非空时，将锁定随机数     if random_state:         np.random.seed(random_state)         # 将样本集的索引值进行随机打乱         # permutation随机生成0-len(data)随机序列     shuffle_indexs = np.random.permutation(len(x))     # 提取位于样本集中20%的那个索引值     test_size = int(len(x) * test_size)     # 将随机打乱的20%的索引值赋值给测试索引     test_indexs = shuffle_indexs[:test_size]     # 将随机打乱的80%的索引值赋值给训练索引     train_indexs = shuffle_indexs[test_size:]     # 根据索引提取训练集和测试集     x_train = x[train_indexs]     y_train = y[train_indexs]     x_test = x[test_indexs]     y_test = y[test_indexs]     # 将切分好的数据集返回出去     # print(y_train)     return x_train, x_test, y_train, y_test</code></pre> <h2>4.计算距离</h2> <p>此处用到欧氏距离，pow()函数用来计算幂次方。length指属性值数量，在计算最近邻时用到。</p> <pre><code class="language-python">def CountDistance(train,test,length):     distance = 0     for x in range(length):         distance += pow(test[x] - train[x], 2)**0.5     return distance</code></pre> <h2>5.选择最近邻</h2> <p>计算测试集中的一条数据和训练集中的每一条数据的距离，选择距离最近的k个，以少数服从多数原则得出标签值。其中argsort返回的是数值从小到大的索引值，为了找到对应的标签值。</p> <p>tip:用numpy计算众数的方法</p> <pre><code class="language-html">import numpy as np #bincount（）：统计非负整数的个数，不能统计浮点数 counts = np.bincount(nums) #返回众数 np.argmax(counts)</code></pre> <p>少数服从多数原则，计算众数，返回标签值。</p> <pre><code class="language-python">def getNeighbor(x_train,test,y_train,k):     distance = []     #测试集的维度     length = x_train.shape[1]     #测试集合所有训练集的距离     for x in range(x_train.shape[0]):         dist = CountDistance(test, x_train[x], length)         distance.append(dist)     distance = np.array(distance)     #排序     distanceSort = distance.argsort()     # distance.sort(key= operator.itemgetter(1))     # print(len(distance))     # print(distanceSort[0])     neighbors =[]     for x in range(k):         labels = y_train[distanceSort[x]]         neighbors.append(labels)         # print(labels)     counts = np.bincount(neighbors)     label = np.argmax(counts)     # print(label)     return label</code></pre> <p>调用函数时：</p> <pre><code class="language-python">getNeighbor(x_train,x_test[0],y_train,3)</code></pre> <h2>&nbsp;6.计算准确率</h2> <p>用以上KNN算法预测测试集中每一条数据的标签值，存入result数组，将预测结果与真实值比较，计算预测正确的个数与总体个数的比值，即为准确率。</p> <pre><code class="language-python">def getAccuracy(x_test,x_train,y_train,y_test):     result = []     k = 3     # arr_label = getNeighbor(x_train, x_test[0], y_train, k)     for x in range(len(x_test)):         arr_label = getNeighbor(x_train, x_test[x], y_train, k)         result.append(arr_label)     correct = 0     for x in range(len(y_test)):         if result[x] == y_test[x]:            correct += 1     # print(correct)     accuracy = (correct / float(len(y_test))) * 100.0     print("Accuracy:", accuracy, "%")     return accuracy</code></pre> <hr/> <h2>总结</h2> <p>KNN算是机器学习中最简单的算法，实现起来相对简单，但对于我这样的新手，还是花费了大半天时间才整出来。</p> <p>在github上传了项目：https://github.com/chenyi369/KNN</p> </div> 			
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-734.htm">Dubbo源码学习系列整合网络框架Netty详解</a></p>
                                                <p>下一个：<a href="/html/category/article-736.htm">Elasticsearch 三种分页方式</a></p>
                                            </div>

                                    </div>
                <div class="col-md-3">
                	<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-6020.htm" title="宠物疫苗能带上高铁吗国内（宠物疫苗可以过安检吗）">宠物疫苗能带上高铁吗国内（宠物疫苗可以过安检吗）</a></li>
                        <li class="py-2"><a href="/html/category/article-7032.htm" title="领养宠物合同协议书模板图片下载（宠物领养协议书怎么写）">领养宠物合同协议书模板图片下载（宠物领养协议书怎么写）</a></li>
                        <li class="py-2"><a href="/html/category/article-7493.htm" title="刀切馒头的做法大全(刀切馒头的做法教程)">刀切馒头的做法大全(刀切馒头的做法教程)</a></li>
                        <li class="py-2"><a href="/html/category/article-6711.htm" title="动物注射疫苗注意事项及禁忌 动物注射疫苗注意事项及禁忌症">动物注射疫苗注意事项及禁忌 动物注射疫苗注意事项及禁忌症</a></li>
                        <li class="py-2"><a href="/html/category/article-7171.htm" title="兰州宠物用品批发地点在哪里呀（兰州宠物用品批发市场在哪里）">兰州宠物用品批发地点在哪里呀（兰州宠物用品批发市场在哪里）</a></li>
                        <li class="py-2"><a href="/html/category/article-6664.htm" title="兽用注射针筒和人用的区别（兽用注射器和医用注射器有什么区别）">兽用注射针筒和人用的区别（兽用注射器和医用注射器有什么区别）</a></li>
                        <li class="py-2"><a href="/html/category/article-7676.htm" title="动物用狂犬病疫苗的作用（动物用狂犬病疫苗的作用是什么）">动物用狂犬病疫苗的作用（动物用狂犬病疫苗的作用是什么）</a></li>
                        <li class="py-2"><a href="/html/category/article-6894.htm" title="动物防疫疫苗管理工作总结（动物防疫工作总结及下步工作开展）">动物防疫疫苗管理工作总结（动物防疫工作总结及下步工作开展）</a></li>
                        <li class="py-2"><a href="/html/category/article-6003.htm" title="动物疫苗新法案例分享ppt 动物疫苗法律法规">动物疫苗新法案例分享ppt 动物疫苗法律法规</a></li>
                        <li class="py-2"><a href="/html/category/article-7078.htm" title="动物疫苗排行榜 动物疫苗排行榜前十名">动物疫苗排行榜 动物疫苗排行榜前十名</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">26</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">54</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
        <footer class="ftco-footer ftco-section">
        <div class="container">
            <div class="row">
                <div class="col-md-12 text-center">
                    <p>
                        FinlandAddress 版权所有
                        <br />
                        Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </footer>
    <!-- loader -->
    <div id="ftco-loader" class="show fullscreen"><svg class="circular" width="48px" height="48px">
            <circle class="path-bg" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke="#eeeeee" />
            <circle class="path" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke-miterlimit="10" stroke="#F96D00" /></svg></div>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery-migrate-3.0.1.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/popper.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/bootstrap.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.easing.1.3.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.stellar.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/owl.carousel.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.magnific-popup.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.animateNumber.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/scrollax.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/main.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>