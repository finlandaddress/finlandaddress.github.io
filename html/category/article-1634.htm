<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://finlandaddress.github.io/html/category/article-1634.htm" />
    <title>SM2密码算法数据结构 - FinlandAddress</title>
        <meta charset="utf-8">
    <link rel="icon" href="/assets/addons/xcblog/img/finlandaddress/favicon.ico" type="image/x-icon"/>
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&display=swap" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css2?family=Raleway:wght@400;500;600;700;800;900&display=swap" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/font-awesome.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/animate.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/owl.carousel.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/owl.theme.default.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/magnific-popup.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/flaticon.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/style.css" rel="stylesheet" />
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?a045e5bb3ae69629060e7ce2a4b98902";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <nav class="navbar navbar-expand-lg navbar-dark ftco_navbar ftco-navbar-light site-navbar-target" id="ftco-navbar">
        <div class="container">
                        <a class="navbar-brand" href="/">Finland Address<span></span></a>
            
            <button class="navbar-toggler js-fh5co-nav-toggle fh5co-nav-toggle" type="button" data-toggle="collapse" data-target="#ftco-nav" aria-controls="ftco-nav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="oi oi-menu"></span> MENU
            </button>
            <div class="collapse navbar-collapse" id="ftco-nav">
                <ul class="navbar-nav nav ml-auto">
                	                    <li class="nav-item"><a href="/" class="nav-link"><span>首页</span></a></li>
                                        <li class="nav-item"><a href="/html/category/" class="nav-link"><span>文章分类</span></a></li>
                                        <li class="nav-item"><a href="#" class="nav-link"><span>关于</span></a></li>
                    <li class="nav-item"><a href="#" class="nav-link"><span>联系</span></a></li>
                </ul>
            </div>
        </div>
    </nav>
    <section class="hero-wrap" style="height:350px;overflow: hidden;">
        <div class="overlay"></div>
        <div class="container-fluid px-0">
            <div class="row d-md-flex no-gutters slider-text align-items-center js-fullheight justify-content-end">
                <img class="one-third js-fullheight align-self-end order-md-last img-fluid" src="/assets/addons/xcblog/img/finlandaddress/undraw_book_lover_mkck.svg" alt="" style="opacity: 0.5;">
                <div class="one-forth d-flex align-items-center ftco-animate js-fullheight">
                    <div class="text" style="top: 30%;min-width: 70%;">
                        <h1>SM2密码算法数据结构</h1>
                        <p>
                            <a href="/">首页</a> / <a href="/html/category/">文章分类</a> / <span>正文</span>
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <section class="ftco-about img ftco-section" id="about-section">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                	  				  				  				<div id="content_views" class="htmledit_views"> <p><strong>SM2密码算法数据结构已经在GM/T 0009规范中详细定义了，为巩固加深理解，本节内容为学习笔记，仅摘抄记录。</strong></p> <h1>1. SM2的密钥对</h1> <h2>1.1 SM2公钥</h2> <p>SM2公钥是SM2曲线上的一个点，由横坐标和纵坐标两个分量来标识，记为(x, y)，简记为Q，每个分量的长度为256位。</p> <h2>1.2 SM2私钥</h2> <p>SM2私钥是一个大于或等于1且小于n-1的整数(n为SM2算法的阶，其值详见GM/T 0003)，简记为k，长度为256位。</p> <hr/> <h1>2.&nbsp;数据格式</h1> <h2>2.1&nbsp;密钥数据格式</h2> <p>SM2算法的私钥数据格式的ASN.1定义为：</p> <p><strong>SM2PrivateKey::=INTEGER</strong></p> <p>SM2算法公钥数据格式的ASN.1定义为：</p> <p><strong>SM2PublicKey::=BIT STRING</strong></p> <p>SM2PublicKey为BIT STRING类型，结构为04||X||Y，其中X，Y分别表示公钥额x分量和y分量，其长度各为256位。</p> <h2>2.2&nbsp;加密数据格式</h2> <p><strong>SM2算法加密后的数据格式的ASN.1定义为：</strong></p> <blockquote> <p><strong>SM2Cipher:: = SEQUENCE{<!-- --></strong></p> <p><strong>XCoordinate&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;INTEGER,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; --x分量</strong></p> <p><strong>YCoordinate&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;INTEGER,&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; --y分量</strong></p> <p><strong>HASH&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;OCTET STRING SIZE(32),&nbsp; &nbsp;&nbsp; &nbsp;--杂凑值</strong></p> <p><strong>CipherText&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OCTET STRING,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;--密文</strong></p> <p><strong>}</strong></p> </blockquote> <p><span style="color:#0d0016;"><strong><span style="background-color:#ffd900;">其中，HASH为使用SM3算法对明文数据运算得到的杂凑值，其长度固定为256位。</span></strong></span></p> <p><span style="color:#0d0016;"><strong><span style="background-color:#ffd900;">CipherText是与明文数据等长的密文。</span></strong></span></p> <h2>2.3&nbsp;签名数据格式</h2> <p><strong>SM2算法签名数据格式的ASN.1定义为：</strong></p> <blockquote> <p><strong>SM2Cipher:: = SEQUENCE{<!-- --></strong></p> <p><strong>R&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;INTEGER,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;--签名值的第一部分</strong></p> <p><strong>S&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INTEGER,&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--签名值的第二部分</strong></p> <p><strong>}</strong></p> </blockquote> <p><span style="color:#0d0016;"><span style="background-color:#ffd900;"><strong>R和S的长度各为256位。</strong></span></span></p> <h2>2.4&nbsp;密钥对保护数据格式</h2> <p>在SM2密钥对传递时，需要对SM2密钥对进行加密保护。具体的保护方法为：</p> <ol> <li>产生一个对称密钥。</li> <li>按对称密码算法标识指定的算法对SM2私钥进行加密，得到私钥的密文。若对称算法为分组算法，则其运算模式为ECB。</li> <li>使用<strong>外部SM2公钥</strong>加密对称密钥得到对称密钥密文。</li> <li>将私钥密文、对称密钥密文封装到密钥对保护数据中。</li> </ol> <blockquote> <p><strong>SM2EnvelopeKey:: = SEQUENCE{<!-- --></strong></p> <p><strong>symAlgID&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; AlgorithmIdentifier,&nbsp; &nbsp;--对称算法标识</strong></p> <p><strong>symEncryptedKey&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;SM2Cipher,&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--对称密钥密文</strong></p> <p><strong>Sm2PublicKey&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;SM2PublicKey&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;--SM2公钥</strong></p> <p><strong>Sm2EncryptedPrivateKey&nbsp; &nbsp;BIT STRING&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; --SM2私钥密文</strong></p> <p><strong>}</strong></p> </blockquote> <p><strong>上述密钥对保护数据格式实际上就是一个SM2加密信封的数据格式，SM2公钥仅仅是封装在信封内部，依然是裸公钥。</strong></p> <p>此时有A和B双方进行密钥对传递，B先将自己的SM2公钥传递给A；</p> <p>A此时要把自己的非对称密钥对安全地传递给B，做法如下：</p> <ul> <li>A产生一对SM2密钥对，然后A又产生一个对称算法密钥(假定算法为SM4)symK；</li> <li>A用symK加密自己的私钥，得到SKCipher，</li> <li>A用B的公钥去加密自己的symK，得到对称密钥密文symKCipher；</li> <li>A将上述数据封装成一个SM2的加密信封EnvelopA，然后将EnvelopA传递给B。</li> </ul> <p>B收到A发过来的EnvelopA数据后，解开信封过程如下：</p> <ul> <li>B用自己的私钥解密EnvelopA数据，获取到信封里边的数据。</li> <li>B用自己的私钥去解开EnvelopA数据中的对称密钥密文后，拿到对称密钥明文symPlainKey</li> <li>B用对称密钥明文数据解开SM2私钥密文，拿到A的私钥明文。</li> <li>B拿到了A的SM2公钥/私钥密钥对。</li> </ul> <p>最后，A将自己的SM2密钥对安全传递给B。当然上述传递方式是最基础的，在不同的应用场景下或许有更为复杂的传递方式设计。</p> <hr/> <h1>3.&nbsp;预处理</h1> <p>预处理过程详见0009规范。</p> <p><img fetchpriority="high" decoding="async" alt="" height="760" src="http://img.555519.xyz/uploads3/20220823/52c7a8de40757a4e5ad2a34cb08827ca.jpg"></p> <hr/> <h1>4.&nbsp;计算过程</h1> <h2>4.1&nbsp;生成密钥</h2> <p>ＳＭ２密钥生成是指生成ＳＭ２算法的密钥对的过程，该密钥对包括私钥和与之对应的公钥。其中，私钥的长度为２５６位，公钥的长度为５１２位(x和y分量)。</p> <blockquote> <p><strong>输入：&nbsp; &nbsp; &nbsp; &nbsp; 无</strong></p> <p><strong>输出：&nbsp; &nbsp; &nbsp; &nbsp; k&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;SM2PrivateKey&nbsp; &nbsp; &nbsp; &nbsp; SM2私钥</strong></p> <p><strong>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Q&nbsp; &nbsp; &nbsp;&nbsp;&nbsp; SM2PublicKey&nbsp; &nbsp; &nbsp; &nbsp; SM2公钥</strong></p> <p><strong>详细的计算过程见GM/T 0003</strong></p> </blockquote> <h2>4.2&nbsp;加密</h2> <p>ＳＭ２加密是指使用指定公开密钥对明文进行特定的加密计算，生成相应密文的过程。该密文只能由该指定公开密钥对应的私钥解密。</p> <blockquote> <p><strong>输入：&nbsp; &nbsp; &nbsp; &nbsp; Q&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SM2PublicKey&nbsp; &nbsp; &nbsp; &nbsp; SM2公钥</strong></p> <p><strong>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;m&nbsp; &nbsp; &nbsp; &nbsp; 字节串&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 待加密的明文数据</strong></p> <p><strong>输出：&nbsp; &nbsp; &nbsp; &nbsp; c&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;SM2Cipher&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;加密密文</strong></p> <p><strong>其中：</strong></p> <p><strong>&nbsp; &nbsp; &nbsp; &nbsp; 输出参数C的格式在2.2中定义了。</strong></p> <p><strong>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;输出参数C的XCoordinate、YCoordinate为随机产生的公钥的x分量和y分量</strong></p> <p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;输出参数C中的HASH计算公式为：</strong></p> <p><strong>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; HASH = SM3(x||m||y)</strong></p> <p><strong>&nbsp; &nbsp; &nbsp; &nbsp; 其中，ｘ，ｙ为Ｑ的ｘ分量和ｙ分量；</strong></p> <p><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;输出参数ｃ中ＣｉｐｈｅｒＴｅｘｔ为加密密文，其长度等于明文的长度。</strong></p> <p><strong>详细的计算过程见GM/T 0003和GM/T 0004。</strong></p> </blockquote> <h2>4.3&nbsp;解密</h2> <p>ＳＭ２解密是指使用指定私钥对密文进行解密计算，还原对应明文的过程。</p> <blockquote> <p><strong>输入：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ｄ&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SM2PrivateKey&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SM2私钥</strong></p> <p><strong>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; c&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;SM2Cipher&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;密文</strong></p> <p><strong>输出：&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ｍ&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;字节串&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;与密文对应的明文</strong></p> <p><strong>ｍ为SM2Cipher经过解密运算得到的明文，该明文的长度与输入参数ｃ中CipherText的长度相同。详细的计算过程见GM/T 0003。</strong></p> </blockquote> <h2>4.4&nbsp;数字签名</h2> <p>ＳＭ２签名是指使用0009规范8.2预处理结果2与签名者私钥，通过签名计算得到签名结果的过程。</p> <blockquote> <p><strong>输入：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ｄ&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SM2PrivateKey&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;签名者私钥</strong></p> <p><strong>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; H&nbsp; &nbsp; &nbsp; &nbsp; 字节串&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 预处理2的结果</strong></p> <p><strong>输出：&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;sign&nbsp; &nbsp; SM2Signature&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;签名值</strong></p> <p><strong>详细的计算过程见GM/T 0003。</strong></p> </blockquote> <h2>4.5&nbsp;签名验证</h2> <p>ＳＭ２签名验证是指使用0009规范8.2预处理结果2、签名值和签名者公钥，通过验证计算确定签名是否通过验证的过程。</p> <blockquote> <p><strong>输入：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ｄ&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SM2PrivateKey&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 签名者私钥</strong></p> <p><strong>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;sign&nbsp; &nbsp; SM2Signature&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;签名值</strong></p> <p><strong>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Q&nbsp; &nbsp; &nbsp;&nbsp;&nbsp; SM2PublicKey&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 签名者公钥</strong></p> <p><strong>输出：&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;为“真”表示“验证通过”，为“假”表示“验证不通过”</strong></p> <p><strong>详细的计算过程见GM/T 0003。</strong></p> </blockquote> <h2>4.6&nbsp;密钥协商</h2> <p>密钥协商是在两个用户之间建立一个共享秘密密钥的协商过程，通过这种方式能够确定一个共享秘密密钥的值。</p> <p>设密钥协商双方为Ａ、Ｂ，其密钥对分别为（ｄＡ，ＱＡ）和（ｄＢ，ＱＢ），双方需要获得的密钥数据的比特长度为ｋｌｅｎ。密钥协商协议分为两个阶段。</p> <p>具体过程见GM/T 0009。</p> </div> 			
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-1633.htm">javaScript深拷贝和浅拷贝简单梳理_在线工具</a></p>
                                                <p>下一个：<a href="/html/category/article-1915.htm">vue npm run lint修改错误配置</a></p>
                                            </div>

                                    </div>
                <div class="col-md-3">
                	<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-3428.htm" title="Docker 解决Error response from daemon">Docker 解决Error response from daemon</a></li>
                        <li class="py-2"><a href="/html/category/article-779.htm" title="vue中动态控制btn的disabled属性方式_vue.js">vue中动态控制btn的disabled属性方式_vue.js</a></li>
                        <li class="py-2"><a href="/html/category/article-2534.htm" title="C++数据结构与算法之排序桶排序">C++数据结构与算法之排序桶排序</a></li>
                        <li class="py-2"><a href="/html/category/article-782.htm" title="Spring Cloud Config 配置中心(用途、使用、加解密)">Spring Cloud Config 配置中心(用途、使用、加解密)</a></li>
                        <li class="py-2"><a href="/html/category/article-3427.htm" title="springboot过滤器与拦截器详解">springboot过滤器与拦截器详解</a></li>
                        <li class="py-2"><a href="/html/category/article-794.htm" title="flex布局实现 内容区域高度自适应">flex布局实现 内容区域高度自适应</a></li>
                        <li class="py-2"><a href="/html/category/article-1633.htm" title="javaScript深拷贝和浅拷贝简单梳理_在线工具">javaScript深拷贝和浅拷贝简单梳理_在线工具</a></li>
                        <li class="py-2"><a href="/html/category/article-788.htm" title="深入浅出Vue3 Composition API">深入浅出Vue3 Composition API</a></li>
                        <li class="py-2"><a href="/html/category/article-1336.htm" title="SpringMVC拦截器path路径的坑">SpringMVC拦截器path路径的坑</a></li>
                        <li class="py-2"><a href="/html/category/article-1335.htm" title="Java实现MD5和国密SM3摘要算法">Java实现MD5和国密SM3摘要算法</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">54</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
        <footer class="ftco-footer ftco-section">
        <div class="container">
            <div class="row">
                <div class="col-md-12 text-center">
                    <p>
                        FinlandAddress 版权所有
                        <br />
                        Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </footer>
    <!-- loader -->
    <div id="ftco-loader" class="show fullscreen"><svg class="circular" width="48px" height="48px">
            <circle class="path-bg" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke="#eeeeee" />
            <circle class="path" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke-miterlimit="10" stroke="#F96D00" /></svg></div>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery-migrate-3.0.1.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/popper.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/bootstrap.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.easing.1.3.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.stellar.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/owl.carousel.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.magnific-popup.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.animateNumber.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/scrollax.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/main.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>