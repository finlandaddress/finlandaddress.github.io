<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://finlandaddress.github.io/html/category/article-612.htm" />
    <title>SpringBoot-动态定时任务调度 - FinlandAddress</title>
        <meta charset="utf-8">
    <link rel="icon" href="/assets/addons/xcblog/img/finlandaddress/favicon.ico" type="image/x-icon"/>
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&display=swap" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css2?family=Raleway:wght@400;500;600;700;800;900&display=swap" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/font-awesome.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/animate.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/owl.carousel.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/owl.theme.default.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/magnific-popup.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/flaticon.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/style.css" rel="stylesheet" />
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?a045e5bb3ae69629060e7ce2a4b98902";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <nav class="navbar navbar-expand-lg navbar-dark ftco_navbar ftco-navbar-light site-navbar-target" id="ftco-navbar">
        <div class="container">
                        <a class="navbar-brand" href="/">Finland Address<span></span></a>
            
            <button class="navbar-toggler js-fh5co-nav-toggle fh5co-nav-toggle" type="button" data-toggle="collapse" data-target="#ftco-nav" aria-controls="ftco-nav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="oi oi-menu"></span> MENU
            </button>
            <div class="collapse navbar-collapse" id="ftco-nav">
                <ul class="navbar-nav nav ml-auto">
                	                    <li class="nav-item"><a href="/" class="nav-link"><span>首页</span></a></li>
                                        <li class="nav-item"><a href="/html/category/" class="nav-link"><span>文章分类</span></a></li>
                                        <li class="nav-item"><a href="#" class="nav-link"><span>关于</span></a></li>
                    <li class="nav-item"><a href="#" class="nav-link"><span>联系</span></a></li>
                </ul>
            </div>
        </div>
    </nav>
    <section class="hero-wrap" style="height:350px;overflow: hidden;">
        <div class="overlay"></div>
        <div class="container-fluid px-0">
            <div class="row d-md-flex no-gutters slider-text align-items-center js-fullheight justify-content-end">
                <img class="one-third js-fullheight align-self-end order-md-last img-fluid" src="/assets/addons/xcblog/img/finlandaddress/undraw_book_lover_mkck.svg" alt="" style="opacity: 0.5;">
                <div class="one-forth d-flex align-items-center ftco-animate js-fullheight">
                    <div class="text" style="top: 30%;min-width: 70%;">
                        <h1>SpringBoot-动态定时任务调度</h1>
                        <p>
                            <a href="/">首页</a> / <a href="/html/category/">文章分类</a> / <span>正文</span>
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <section class="ftco-about img ftco-section" id="about-section">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                	  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <h1> <a id="SpringBoot_0" rel="nofollow"></a>SpringBoot-动态定时任务调度</h1> <h2> <a id="_2" rel="nofollow"></a>一、业务场景</h2> <blockquote> <p>先说业务场景，根据用户输入的cron表达式进行定时调度，举个例子：如图</p> </blockquote> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230108/ac7da3abd349024272ef2587aebd0527.jpg" alt="SpringBoot-动态定时任务调度"></p> <p>根据用户输入的参数，生成表达式，然后定时去执行相应的业务逻辑。</p> <h2> <a id="Controller_11" rel="nofollow"></a>二、Controller层（不是重点）</h2> <h3> <a id="domain_13" rel="nofollow"></a>domain类</h3> <pre><code class="prism language-java"><span class="token annotation punctuation">@TableName</span><span class="token punctuation">(</span><span class="token string">"sys_schedule"</span><span class="token punctuation">)</span> <span class="token annotation punctuation">@Data</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Schedule</span> <span class="token punctuation">{<!-- --></span>      <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token number">1</span>L<span class="token punctuation">;</span>      <span class="token comment">/**      * 主键ID      */</span>     <span class="token annotation punctuation">@TableId</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"id"</span><span class="token punctuation">,</span> type <span class="token operator">=</span> IdType<span class="token punctuation">.</span>AUTO<span class="token punctuation">)</span>     <span class="token keyword">private</span> Long id<span class="token punctuation">;</span>      <span class="token comment">/**      * 类型: 时间， 周， 日      */</span>     <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span><span class="token string">"type"</span><span class="token punctuation">)</span>     <span class="token keyword">private</span> Integer type<span class="token punctuation">;</span>      <span class="token comment">/**      * time 时间      */</span>     <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span><span class="token string">"day_time"</span><span class="token punctuation">)</span>     <span class="token keyword">private</span> String dayTime<span class="token punctuation">;</span>      <span class="token comment">/**      * time 周      */</span>     <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span><span class="token string">"weekday"</span><span class="token punctuation">)</span>     <span class="token keyword">private</span> String weekday<span class="token punctuation">;</span>      <span class="token comment">/**      * time 日      */</span>     <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span><span class="token string">"monthday"</span><span class="token punctuation">)</span>     <span class="token keyword">private</span> String monthday<span class="token punctuation">;</span>      <span class="token comment">/**      * 选中状态      */</span>     <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span><span class="token string">"status"</span><span class="token punctuation">)</span>     <span class="token keyword">private</span> Integer status<span class="token punctuation">;</span>      <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span><span class="token string">"cron"</span><span class="token punctuation">)</span>     <span class="token keyword">private</span> String cron<span class="token punctuation">;</span>      <span class="token annotation punctuation">@Override</span>     <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token keyword">return</span> <span class="token string">"Schedule{"</span> <span class="token operator">+</span>                 <span class="token string">"id="</span> <span class="token operator">+</span> id <span class="token operator">+</span>                 <span class="token string">", type="</span> <span class="token operator">+</span> type <span class="token operator">+</span>                 <span class="token string">", dayTime='"</span> <span class="token operator">+</span> dayTime <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                 <span class="token string">", weekday='"</span> <span class="token operator">+</span> weekday <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                 <span class="token string">", monthday='"</span> <span class="token operator">+</span> monthday <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                 <span class="token string">", status="</span> <span class="token operator">+</span> status <span class="token operator">+</span>                 <span class="token string">", cron='"</span> <span class="token operator">+</span> cron <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                 <span class="token string">'}'</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <h3> <a id="controller_76" rel="nofollow"></a>controller方法</h3> <pre><code class="prism language-java">	 	<span class="token annotation punctuation">@Autowired</span>     <span class="token keyword">private</span> ScheduleService scheduleService<span class="token punctuation">;</span> 	  	<span class="token annotation punctuation">@PutMapping</span><span class="token punctuation">(</span><span class="token string">"/editItem"</span><span class="token punctuation">)</span>     <span class="token annotation punctuation">@ResponseBody</span>     <span class="token keyword">public</span> ResponseData <span class="token function">editItem</span><span class="token punctuation">(</span>Schedule schedule<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token comment">//ResponseData自己封装的响应结果</span>         <span class="token comment">//param是你前端传的，包含你的数据，如cron表达式</span>         <span class="token keyword">this</span><span class="token punctuation">.</span>scheduleService<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>schedule<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">return</span> ResponseData<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> </code></pre> <h2> <a id="Service_93" rel="nofollow"></a>三、Service层</h2> <h3> <a id="_95" rel="nofollow"></a>接口层</h3> <pre><code class="prism language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ScheduleService</span> <span class="token punctuation">{<!-- --></span>      <span class="token comment">/**      * 更新      * @Date 2020-12-25      */</span>     <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span>Schedule param<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">/**      * 业务处理      * @Date 2020-12-25      */</span>     <span class="token keyword">void</span> <span class="token function">work</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span> </code></pre> <h3> <a id="_118" rel="nofollow"></a>实现层</h3> <pre><code class="prism language-java"><span class="token annotation punctuation">@Service</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ScheduleServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">ScheduleService</span> <span class="token punctuation">{<!-- --></span>      	<span class="token annotation punctuation">@Override</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span>Schedule param<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 		<span class="token comment">//这里简化了我自己的业务逻辑代码，根据公司自己需要来写即可</span>         <span class="token comment">//业务逻辑代码</span>                  <span class="token comment">//思路就是：更新数据库的cron，类型等值，然后交给下面的定时工具类走定时方法</span>         <span class="token keyword">this</span><span class="token punctuation">.</span>scheduleMapper<span class="token punctuation">.</span><span class="token function">updateById</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">;</span>         String cron <span class="token operator">=</span> param<span class="token punctuation">.</span><span class="token function">getCron</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">//this就是你的业务执行service, 这里就是scheduleService</span>         ScheduleUtil<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ScheduleTask</span><span class="token punctuation">(</span>param<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">,</span> cron<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>          <span class="token annotation punctuation">@Override</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">work</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token comment">//抓取数据的代码</span>         System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"业务代码执行。。。"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>       <span class="token punctuation">}</span> 	 </code></pre> <h2> <a id="_147" rel="nofollow"></a>四、定时工具类</h2> <pre><code class="prism language-java"><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>scheduling<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>ThreadPoolTaskScheduler<span class="token punctuation">;</span> <span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>scheduling<span class="token punctuation">.</span>support<span class="token punctuation">.</span>CronTrigger<span class="token punctuation">;</span>  <span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>HashMap<span class="token punctuation">;</span> <span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">;</span> <span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>ScheduledFuture<span class="token punctuation">;</span>  <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ScheduleUtil</span> <span class="token punctuation">{<!-- --></span>      <span class="token keyword">private</span> <span class="token keyword">static</span> ThreadPoolTaskScheduler threadPoolTaskScheduler <span class="token operator">=</span> <span class="token keyword">new</span> 			<span class="token class-name">ThreadPoolTaskScheduler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">private</span> <span class="token keyword">static</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> ScheduledFuture<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">&gt;&gt;</span> scheduledFutureMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">static</span> <span class="token punctuation">{<!-- --></span>         threadPoolTaskScheduler<span class="token punctuation">.</span><span class="token function">initialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"定时任务线程池启动"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>      <span class="token comment">/**      * 启动      *      * @param scheduleTask 定时任务      * @param corn         执行时间表达式      */</span>     <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">start</span><span class="token punctuation">(</span>ScheduleTask scheduleTask<span class="token punctuation">,</span> String corn<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"启动定时任务线程 taskId "</span> <span class="token operator">+</span> scheduleTask<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         ScheduledFuture<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">&gt;</span> scheduledFuture <span class="token operator">=</span> threadPoolTaskScheduler                 <span class="token punctuation">.</span><span class="token function">schedule</span><span class="token punctuation">(</span>scheduleTask<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">CronTrigger</span><span class="token punctuation">(</span>corn<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         scheduledFutureMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>scheduleTask<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> scheduledFuture<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>      <span class="token comment">/**      * 取消      *      * @param scheduleTask 定时任务      */</span>     <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">cancel</span><span class="token punctuation">(</span>ScheduleTask scheduleTask<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"关闭定时任务线程 taskId "</span> <span class="token operator">+</span> scheduleTask<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         ScheduledFuture<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">&gt;</span> scheduledFuture <span class="token operator">=</span> 			 	 scheduledFutureMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>scheduleTask<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span>scheduledFuture <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>scheduledFuture<span class="token punctuation">.</span><span class="token function">isCancelled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             scheduledFuture<span class="token punctuation">.</span><span class="token function">cancel</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>         scheduledFutureMap<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>scheduleTask<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>      <span class="token comment">/**      * 修改      *      * @param scheduleTask 定时任务      * @param corn         执行时间表达式      */</span>     <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">reset</span><span class="token punctuation">(</span>ScheduleTask scheduleTask<span class="token punctuation">,</span> String corn<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token comment">//先取消定时任务</span>         <span class="token function">cancel</span><span class="token punctuation">(</span>scheduleTask<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">//然后启动新的定时任务</span>         <span class="token function">start</span><span class="token punctuation">(</span>scheduleTask<span class="token punctuation">,</span> corn<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <h2> <a id="_212" rel="nofollow"></a>五、工作线程</h2> <pre><code class="prism language-java"> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ScheduleTask</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{<!-- --></span>      <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> TIMEOUT <span class="token operator">=</span> <span class="token number">30000</span><span class="token punctuation">;</span>      <span class="token keyword">private</span> String id<span class="token punctuation">;</span>     <span class="token keyword">private</span> ScheduleService service<span class="token punctuation">;</span>      <span class="token keyword">public</span> String <span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token keyword">return</span> id<span class="token punctuation">;</span>     <span class="token punctuation">}</span>      <span class="token comment">/**      * @param id      任务ID      * @param service 业务类      * @param keyword 关键字参数      */</span>     <span class="token keyword">public</span> <span class="token function">ScheduleTask</span><span class="token punctuation">(</span>String id<span class="token punctuation">,</span> ScheduleService service<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>         <span class="token keyword">this</span><span class="token punctuation">.</span>service <span class="token operator">=</span> service<span class="token punctuation">;</span>     <span class="token punctuation">}</span>      <span class="token annotation punctuation">@Override</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token comment">//你自己的业务逻辑</span>         service<span class="token punctuation">.</span><span class="token function">work</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <p>到这里结束了，这里主要是根据前台传的时间，进行生成cron，入库，执行定时任务。但是有一个问题，就是如果项目重启了的话，那么定时类那是无法加载到cron表达式的。那么接下来，加一个项目启动时，把数据库里的cron表达式重新灌入到定时类就可以。代码如下：</p> <pre><code class="prism language-java"><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span> <span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>CommandLineRunner<span class="token punctuation">;</span> <span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Order<span class="token punctuation">;</span> <span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Component<span class="token punctuation">;</span>  <span class="token comment">/**  * 项目启动时，加载  * @Date: 2020/12/25:16:00  **/</span> <span class="token annotation punctuation">@Component</span> <span class="token annotation punctuation">@Order</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">initLineRunner</span> <span class="token keyword">implements</span> <span class="token class-name">CommandLineRunner</span> <span class="token punctuation">{<!-- --></span>      <span class="token annotation punctuation">@Autowired</span>     <span class="token keyword">private</span> ScheduleService scheduleService<span class="token punctuation">;</span>      <span class="token annotation punctuation">@Override</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{<!-- --></span>         System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"init ........... "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">//这里就是获取你数据库里的那个cron表达式</span>         Schedule param <span class="token operator">=</span> scheduleService<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         String cron <span class="token operator">=</span> param<span class="token punctuation">.</span><span class="token function">getCron</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         ScheduleUtil<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ScheduleTask</span><span class="token punctuation">(</span>param<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> scheduleService<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">,</span> cron<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <p>参考文章：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/qq_37334435/article/details/107996095"  rel="nofollow">https://blog.csdn.net/qq_37334435/article/details/107996095</a></p> </p></div> 			
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-611.htm">Vue导航栏，基于elementUI的导航菜单树</a></p>
                                                <p>下一个：<a href="/html/category/article-613.htm">es分页from+size,scroll,search_after</a></p>
                                            </div>

                                    </div>
                <div class="col-md-3">
                	<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-1356.htm" title="utils层与tools层，manager层与service层，helper层概念理解">utils层与tools层，manager层与service层，helper层概念理解</a></li>
                        <li class="py-2"><a href="/html/category/article-3733.htm" title="Springboot使用@Cacheable注解实现数据缓存">Springboot使用@Cacheable注解实现数据缓存</a></li>
                        <li class="py-2"><a href="/html/category/article-1335.htm" title="Java实现MD5和国密SM3摘要算法">Java实现MD5和国密SM3摘要算法</a></li>
                        <li class="py-2"><a href="/html/category/article-4071.htm" title="Kubernetes部署单元-Pod">Kubernetes部署单元-Pod</a></li>
                        <li class="py-2"><a href="/html/category/article-2244.htm" title="Spring Boot Web项目ConcurrentLinkedQueue+ReentrantLock+Condition实现消费者功能(类似MQ队列)">Spring Boot Web项目ConcurrentLinkedQueue+ReentrantLock+Condition实现消费者功能(类似MQ队列)</a></li>
                        <li class="py-2"><a href="/html/category/article-4447.htm" title="广州有宠物领养中心嘛现在（广州有没有宠物领养机构）">广州有宠物领养中心嘛现在（广州有没有宠物领养机构）</a></li>
                        <li class="py-2"><a href="/html/category/article-4296.htm" title="宠物领养图片真实大全（宠物领养百度百科）">宠物领养图片真实大全（宠物领养百度百科）</a></li>
                        <li class="py-2"><a href="/html/category/article-4327.htm" title="宠物之家官网（深圳宠物之家官网）">宠物之家官网（深圳宠物之家官网）</a></li>
                        <li class="py-2"><a href="/html/category/article-4099.htm" title="SpringBoot：Controller层调用Service层，出现bug">SpringBoot：Controller层调用Service层，出现bug</a></li>
                        <li class="py-2"><a href="/html/category/article-1916.htm" title="Python 3.10 的一些新特性">Python 3.10 的一些新特性</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">20</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">54</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
        <footer class="ftco-footer ftco-section">
        <div class="container">
            <div class="row">
                <div class="col-md-12 text-center">
                    <p>
                        FinlandAddress 版权所有
                        <br />
                        Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </footer>
    <!-- loader -->
    <div id="ftco-loader" class="show fullscreen"><svg class="circular" width="48px" height="48px">
            <circle class="path-bg" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke="#eeeeee" />
            <circle class="path" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke-miterlimit="10" stroke="#F96D00" /></svg></div>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery-migrate-3.0.1.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/popper.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/bootstrap.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.easing.1.3.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.stellar.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/owl.carousel.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.magnific-popup.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.animateNumber.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/scrollax.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/main.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>