<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://finlandaddress.github.io/html/category/article-676.htm" />
    <title>1、Springboot 注入装配到IOC容器方式 - FinlandAddress</title>
        <meta charset="utf-8">
    <link rel="icon" href="/assets/addons/xcblog/img/finlandaddress/favicon.ico" type="image/x-icon"/>
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&display=swap" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css2?family=Raleway:wght@400;500;600;700;800;900&display=swap" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/font-awesome.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/animate.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/owl.carousel.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/owl.theme.default.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/magnific-popup.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/flaticon.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/style.css" rel="stylesheet" />
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?a045e5bb3ae69629060e7ce2a4b98902";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <nav class="navbar navbar-expand-lg navbar-dark ftco_navbar ftco-navbar-light site-navbar-target" id="ftco-navbar">
        <div class="container">
                        <a class="navbar-brand" href="/">Finland Address<span></span></a>
            
            <button class="navbar-toggler js-fh5co-nav-toggle fh5co-nav-toggle" type="button" data-toggle="collapse" data-target="#ftco-nav" aria-controls="ftco-nav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="oi oi-menu"></span> MENU
            </button>
            <div class="collapse navbar-collapse" id="ftco-nav">
                <ul class="navbar-nav nav ml-auto">
                	                    <li class="nav-item"><a href="/" class="nav-link"><span>首页</span></a></li>
                                        <li class="nav-item"><a href="/html/category/" class="nav-link"><span>文章分类</span></a></li>
                                        <li class="nav-item"><a href="#" class="nav-link"><span>关于</span></a></li>
                    <li class="nav-item"><a href="#" class="nav-link"><span>联系</span></a></li>
                </ul>
            </div>
        </div>
    </nav>
    <section class="hero-wrap" style="height:350px;overflow: hidden;">
        <div class="overlay"></div>
        <div class="container-fluid px-0">
            <div class="row d-md-flex no-gutters slider-text align-items-center js-fullheight justify-content-end">
                <img class="one-third js-fullheight align-self-end order-md-last img-fluid" src="/assets/addons/xcblog/img/finlandaddress/undraw_book_lover_mkck.svg" alt="" style="opacity: 0.5;">
                <div class="one-forth d-flex align-items-center ftco-animate js-fullheight">
                    <div class="text" style="top: 30%;min-width: 70%;">
                        <h1>1、Springboot 注入装配到IOC容器方式</h1>
                        <p>
                            <a href="/">首页</a> / <a href="/html/category/">文章分类</a> / <span>正文</span>
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <section class="ftco-about img ftco-section" id="about-section">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                	  				  				  				<div id="content_views" class="htmledit_views"> <p><strong>1、通过bean注解装配到IOC容器</strong><br /> &nbsp; &nbsp; &nbsp;创建装配的类，如下</p> <pre><code>package com.sboot.pr.bean; /**  * @author ygb  * @Mailbox 941201063@qq.com  * @date 2021年10月28日  * 通过bean注解装配到IOC容器  */ public class BeanPOJO {  	private int id; 	 	private String name; 	 	private int age;  	public int getId() { 		return id; 	}  	public void setId(int id) { 		this.id = id; 	}  	public String getName() { 		return name; 	}  	public void setName(String name) { 		this.name = name; 	}  	public int getAge() { 		return age; 	}  	public void setAge(int age) { 		this.age = age; 	} 	 	 } </code></pre> <p>通过bean注解装配BeanPOJO到IOC容器</p> <pre><code>package com.sboot.pr.config;  import org.springframework.context.annotation.Bean; import org.springframework.context.annotation.Configuration;  import com.sboot.pr.bean.BeanPOJO;   /**  * @author ygb  * @Mailbox 941201063@qq.com  * @date 2021年10月28日  * 配置类文件  */ @Configuration public class BeanConfig {  	/** 	 * 通过bean注解装配BeanPOJO到IOC容器 	 * @return 	 */ 	@Bean(name = "beanPOJO") 	public BeanPOJO initBeanPOJO() { 		BeanPOJO pojo = new BeanPOJO(); 		pojo.setId(1); 		pojo.setName("BeanPOJO"); 		pojo.setAge(29); 		return pojo; 	} }</code></pre> <p>把装配的BeanPOJO 注入</p> <pre><code>package com.sboot.pr.controller;  import org.springframework.beans.factory.annotation.Autowired; import org.springframework.context.ApplicationContext; import org.springframework.context.annotation.AnnotationConfigApplicationContext; import org.springframework.web.bind.annotation.GetMapping; import org.springframework.web.bind.annotation.RestController;  import com.sboot.pr.bean.BeanPOJO; import com.sboot.pr.bean.ComponentPOJO; import com.sboot.pr.bean.ComponentScanPOJO;   /**  * @author ygb  * @Mailbox 941201063@qq.com  * @date 2021年10月28日  */ @RestController public class TestController { 	 	@Autowired 	private BeanPOJO beanPoJO;  	/** 	 * 获取通过Bean注解装配到IOC容器的对象 	 * @return 	 */ 	@GetMapping("/boot/getBeanPOJO") 	public BeanPOJO getBeanPOJO() { 		return beanPoJO; 	} } </code></pre> <p>访问注入的BeanPOJO信息</p> <p>http://localhost:1111/boot/getBeanPOJO</p> <p><img fetchpriority="high" decoding="async" alt="" height="155" src="http://img.555519.xyz/uploads/20230108/2674f5a8fc6d16e62554944f643918f9.jpg"></p> <p><strong>2、通过Component注解扫描装配bean到IOC容器</strong></p> <p>创建装配的类，如下</p> <pre><code>package com.sboot.pr.bean;  import org.springframework.beans.factory.annotation.Value; import org.springframework.context.annotation.ComponentScan; import org.springframework.stereotype.Component;  /**  * @author ygb  * @Mailbox 941201063@qq.com  * @date 2021年10月28日  * 通过Component注解扫描注入bean到IOC容器  * 指定bean名称，默认首个字母小写  */ @Component("componentPOJO") public class ComponentPOJO {  	@Value("2") 	private int id; 	 	@Value("ComponentPOJO") 	private String name; 	 	@Value("29") 	private int age;  	public int getId() { 		return id; 	}  	public void setId(int id) { 		this.id = id; 	}  	public String getName() { 		return name; 	}  	public void setName(String name) { 		this.name = name; 	}  	public int getAge() { 		return age; 	}  	public void setAge(int age) { 		this.age = age; 	} 	 	 } </code></pre> <p>把装配的ComponentPOJO&nbsp; 注入</p> <pre><code>package com.sboot.pr.controller;  import org.springframework.beans.factory.annotation.Autowired; import org.springframework.context.ApplicationContext; import org.springframework.context.annotation.AnnotationConfigApplicationContext; import org.springframework.web.bind.annotation.GetMapping; import org.springframework.web.bind.annotation.RestController;  import com.sboot.pr.bean.BeanPOJO; import com.sboot.pr.bean.ComponentPOJO; import com.sboot.pr.bean.ComponentScanPOJO;   /**  * @author ygb  * @Mailbox 941201063@qq.com  * @date 2021年10月28日  */ @RestController public class TestController { 	 	 	@Autowired 	private ComponentPOJO componentPOJO;      /** 	 * 获取通过Component注解装配到IOC容器的对象 	 * @return 	 */ 	@GetMapping("/boot/getComponentPOJO") 	public ComponentPOJO getComponentPOJO() { 		return componentPOJO; 	}  }</code></pre> <p>&nbsp;访问注入的ComponentPOJO&nbsp;信息</p> <p>http://localhost:1111/boot/getComponentPOJO</p> <p>&nbsp;<img decoding="async" alt="" height="138" src="http://img.555519.xyz/uploads/20230108/76598eb2c3a997fa0337d8128ac126df.jpg"></p> <p><strong>&nbsp;3、通过ComponentScan注解扫描装配bean到IOC容器</strong></p> <p>创建装配的类，如下</p> <pre><code>package com.sboot.pr.bean;  import org.springframework.beans.factory.annotation.Value; import org.springframework.context.annotation.ComponentScan; import org.springframework.context.annotation.Configuration;  /**  * @author ygb  * @Mailbox 941201063@qq.com  * @date 2021年10月28日  * 通过ComponentScan注解扫描注入bean到IOC容器  * 可以指定策列，比如哪些包需要扫描、排除哪些bean被扫描  */ @Configuration @ComponentScan public class ComponentScanPOJO {  	@Value("3") 	private int id; 	 	@Value("ComponentScanPOJO") 	private String name; 	 	@Value("29") 	private int age;  	public int getId() { 		return id; 	}  	public void setId(int id) { 		this.id = id; 	}  	public String getName() { 		return name; 	}  	public void setName(String name) { 		this.name = name; 	}  	public int getAge() { 		return age; 	}  	public void setAge(int age) { 		this.age = age; 	} 	 	 } </code></pre> <p>把装配的ComponentScanPOJO&nbsp; 注入</p> <pre><code>package com.sboot.pr.controller;  import org.springframework.beans.factory.annotation.Autowired; import org.springframework.context.ApplicationContext; import org.springframework.context.annotation.AnnotationConfigApplicationContext; import org.springframework.web.bind.annotation.GetMapping; import org.springframework.web.bind.annotation.RestController;  import com.sboot.pr.bean.BeanPOJO; import com.sboot.pr.bean.ComponentPOJO; import com.sboot.pr.bean.ComponentScanPOJO;   /**  * @author ygb  * @Mailbox 941201063@qq.com  * @date 2021年10月28日  */ @RestController public class TestController { 	  	@Autowired 	private ComponentScanPOJO componentScanPOJO;  	/** 	 * 获取通过Component注解装配到IOC容器的对象 	 * @return 	 */ 	@GetMapping("/boot/getComponentScanPOJO") 	public ComponentScanPOJO getComponentScanPOJO() { 		return componentScanPOJO; 	} 	 	 }</code></pre> <p>&nbsp;</p> <p>&nbsp;访问注入的ComponentScanPOJO信息</p> <p>http://localhost:1111/boot/getComponentScanPOJO</p> <p><img decoding="async" alt="" height="94" src="http://img.555519.xyz/uploads/20230108/9704d2eb0a052bf3d50759339956d5ef.jpg">&nbsp;</p> <p>&nbsp;</p> </p></div> 			
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-675.htm">@order 注解用法</a></p>
                                                <p>下一个：<a href="/html/category/article-677.htm">idea如何代码回退</a></p>
                                            </div>

                                    </div>
                <div class="col-md-3">
                	<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-8366.htm" title="彩蔬小碗馒头的做法和配方(彩蔬小馒头怎么做)">彩蔬小碗馒头的做法和配方(彩蔬小馒头怎么做)</a></li>
                        <li class="py-2"><a href="/html/category/article-8459.htm" title="钢琴哪一个牌子比较好(钢琴哪个牌子好性价比高)">钢琴哪一个牌子比较好(钢琴哪个牌子好性价比高)</a></li>
                        <li class="py-2"><a href="/html/category/article-7677.htm" title="领养宠物协议书范本大全最新 领养宠物协议书范本大全最新版">领养宠物协议书范本大全最新 领养宠物协议书范本大全最新版</a></li>
                        <li class="py-2"><a href="/html/category/article-7217.htm" title="蒜苔炒肉的做法川菜(川菜蒜薹肉丝的做法)">蒜苔炒肉的做法川菜(川菜蒜薹肉丝的做法)</a></li>
                        <li class="py-2"><a href="/html/category/article-7815.htm" title="宠物粮龙头企业排名 宠物粮龙头企业排名前十">宠物粮龙头企业排名 宠物粮龙头企业排名前十</a></li>
                        <li class="py-2"><a href="/html/category/article-7906.htm" title="动物疫苗的使用方法有哪些种类的（动物疫苗知识）">动物疫苗的使用方法有哪些种类的（动物疫苗知识）</a></li>
                        <li class="py-2"><a href="/html/category/article-7216.htm" title="动物疫苗研究现状（动物疫苗研究现状分析）">动物疫苗研究现状（动物疫苗研究现状分析）</a></li>
                        <li class="py-2"><a href="/html/category/article-7125.htm" title="动物疫苗的使用方法有哪些 动物疫苗的使用方法有哪些种类">动物疫苗的使用方法有哪些 动物疫苗的使用方法有哪些种类</a></li>
                        <li class="py-2"><a href="/html/category/article-8045.htm" title="动物疫苗种类及类型图片及价格大全（动物疫苗种类及类型图片及价格大全视频）">动物疫苗种类及类型图片及价格大全（动物疫苗种类及类型图片及价格大全视频）</a></li>
                        <li class="py-2"><a href="/html/category/article-7493.htm" title="刀切馒头的做法大全(刀切馒头的做法教程)">刀切馒头的做法大全(刀切馒头的做法教程)</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">54</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
        <footer class="ftco-footer ftco-section">
        <div class="container">
            <div class="row">
                <div class="col-md-12 text-center">
                    <p>
                        FinlandAddress 版权所有
                        <br />
                        Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </footer>
    <!-- loader -->
    <div id="ftco-loader" class="show fullscreen"><svg class="circular" width="48px" height="48px">
            <circle class="path-bg" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke="#eeeeee" />
            <circle class="path" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke-miterlimit="10" stroke="#F96D00" /></svg></div>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery-migrate-3.0.1.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/popper.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/bootstrap.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.easing.1.3.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.stellar.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/owl.carousel.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.magnific-popup.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.animateNumber.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/scrollax.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/main.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>