<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://finlandaddress.github.io/html/category/article-688.htm" />
    <title>RecyclerView单层RecyclerView实现点击展开、折叠效果 - FinlandAddress</title>
        <meta charset="utf-8">
    <link rel="icon" href="/assets/addons/xcblog/img/finlandaddress/favicon.ico" type="image/x-icon"/>
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&display=swap" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css2?family=Raleway:wght@400;500;600;700;800;900&display=swap" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/font-awesome.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/animate.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/owl.carousel.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/owl.theme.default.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/magnific-popup.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/flaticon.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/style.css" rel="stylesheet" />
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?a045e5bb3ae69629060e7ce2a4b98902";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <nav class="navbar navbar-expand-lg navbar-dark ftco_navbar ftco-navbar-light site-navbar-target" id="ftco-navbar">
        <div class="container">
                        <a class="navbar-brand" href="/">Finland Address<span></span></a>
            
            <button class="navbar-toggler js-fh5co-nav-toggle fh5co-nav-toggle" type="button" data-toggle="collapse" data-target="#ftco-nav" aria-controls="ftco-nav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="oi oi-menu"></span> MENU
            </button>
            <div class="collapse navbar-collapse" id="ftco-nav">
                <ul class="navbar-nav nav ml-auto">
                	                    <li class="nav-item"><a href="/" class="nav-link"><span>首页</span></a></li>
                                        <li class="nav-item"><a href="/html/category/" class="nav-link"><span>文章分类</span></a></li>
                                        <li class="nav-item"><a href="#" class="nav-link"><span>关于</span></a></li>
                    <li class="nav-item"><a href="#" class="nav-link"><span>联系</span></a></li>
                </ul>
            </div>
        </div>
    </nav>
    <section class="hero-wrap" style="height:350px;overflow: hidden;">
        <div class="overlay"></div>
        <div class="container-fluid px-0">
            <div class="row d-md-flex no-gutters slider-text align-items-center js-fullheight justify-content-end">
                <img class="one-third js-fullheight align-self-end order-md-last img-fluid" src="/assets/addons/xcblog/img/finlandaddress/undraw_book_lover_mkck.svg" alt="" style="opacity: 0.5;">
                <div class="one-forth d-flex align-items-center ftco-animate js-fullheight">
                    <div class="text" style="top: 30%;min-width: 70%;">
                        <h1>RecyclerView单层RecyclerView实现点击展开、折叠效果</h1>
                        <p>
                            <a href="/">首页</a> / <a href="/html/category/">文章分类</a> / <span>正文</span>
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <section class="ftco-about img ftco-section" id="about-section">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                	  				  				  				<div id="content_views" class="markdown_views prism-github-gist"> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220722/9be7b0dfb3be6af2eaea06d02e51c1a3.jpg" alt="RecyclerView单层RecyclerView实现点击展开、折叠效果"></p> <p>最近有RecyclerView点击展开、折叠item的需求，其中一种写法是利用两个RecyclerView实现，但这样效率不高。因此采用单层RecyclerView来实现此需求。</p> <h2><a id="1_itemAdapteritem_5" rel="nofollow"></a>1 定义两个布局item的结构，Adapter的数据源为两种item组装成的集合</h2> <h4><a id="11_itemChildBookItem_6" rel="nofollow"></a>1.1 子item:ChildBookItem</h4> <p>简单起见，只展示一个bookName</p> <pre><code class="prism language-java"><span class="token keyword">private</span> String bookName<span class="token punctuation">;</span></code></pre> <h4><a id="12__itemCategoryItem_13" rel="nofollow"></a>1.2 父item:CategoryItem</h4> <pre><code class="prism language-java"><span class="token keyword">private</span><span class="token keyword">int</span> index<span class="token punctuation">;</span><span class="token keyword">private</span><span class="token keyword">boolean</span> isShow<span class="token punctuation">;</span><span class="token comment">// 展开状态</span><span class="token keyword">private</span> String categoryName<span class="token punctuation">;</span><span class="token keyword">private</span> List<span class="token generics function"><span class="token punctuation">&lt;</span>ChildBookItem<span class="token punctuation">&gt;</span></span> childBookItems<span class="token punctuation">;</span><span class="token comment">// 子item列表</span></code></pre> <blockquote> <p>index表示在item集合中此CategoryItem的位置（不算ChildBookItem的数量）；<br /> List childBookItems 是此Category在展开状态下所包含的子item集合，只用于记录对应关系，并不参与绘制UI。</p> </blockquote> <h2><a id="2__27" rel="nofollow"></a>2 组装数据</h2> <h4><a id="21___28" rel="nofollow"></a>2.1 获取数据源</h4> <pre><code class="prism language-java"><span class="token keyword">private</span> List<span class="token generics function"><span class="token punctuation">&lt;</span>BookShelf<span class="token punctuation">&gt;</span></span><span class="token function">initData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>          BookShelf bookShelf1<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">BookShelf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         bookShelf1<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"科幻类"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         String<span class="token punctuation">[</span><span class="token punctuation">]</span> books1<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{<!-- --></span><span class="token string">"三体"</span><span class="token punctuation">,</span><span class="token string">"流浪地球"</span><span class="token punctuation">,</span><span class="token string">"降临"</span><span class="token punctuation">}</span><span class="token punctuation">;</span>         bookShelf1<span class="token punctuation">.</span><span class="token function">setBooks</span><span class="token punctuation">(</span>Arrays<span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>books1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         mDatas<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>bookShelf1<span class="token punctuation">)</span><span class="token punctuation">;</span>          BookShelf bookShelf2<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">BookShelf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         bookShelf2<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"政治类"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         String<span class="token punctuation">[</span><span class="token punctuation">]</span> books2<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{<!-- --></span><span class="token string">"美国陷阱"</span><span class="token punctuation">,</span><span class="token string">"从赫鲁晓夫到普京"</span><span class="token punctuation">,</span><span class="token string">"为什么是以色列"</span><span class="token punctuation">,</span><span class="token string">"南京大屠杀"</span><span class="token punctuation">}</span><span class="token punctuation">;</span>         bookShelf2<span class="token punctuation">.</span><span class="token function">setBooks</span><span class="token punctuation">(</span>Arrays<span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>books2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         mDatas<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>bookShelf2<span class="token punctuation">)</span><span class="token punctuation">;</span>          BookShelf bookShelf3<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">BookShelf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         bookShelf3<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"文学类"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         String<span class="token punctuation">[</span><span class="token punctuation">]</span> books3<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{<!-- --></span><span class="token string">"我们仨"</span><span class="token punctuation">,</span><span class="token string">"小姨多鹤"</span><span class="token punctuation">,</span><span class="token string">"我与地坛"</span><span class="token punctuation">,</span><span class="token string">"黄金时代"</span><span class="token punctuation">,</span><span class="token string">"雪国"</span><span class="token punctuation">}</span><span class="token punctuation">;</span>         bookShelf3<span class="token punctuation">.</span><span class="token function">setBooks</span><span class="token punctuation">(</span>Arrays<span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>books3<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         mDatas<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>bookShelf3<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> mDatas<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <h4><a id="22__item_56" rel="nofollow"></a>2.2 初始化组装item</h4> <p>由于初始不展示子item，所以不需要设置ChildBookItems的内容。此时定义的Adapter绑定的集合类型为Object，既包含CategoryItem，也包括ChildBookItem，所以不指定具体类型。</p> <pre><code class="prism language-java"><span class="token keyword">private</span> List<span class="token generics function"><span class="token punctuation">&lt;</span>Object<span class="token punctuation">&gt;</span></span> mList<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// item组装数据</span><span class="token keyword">private</span> List<span class="token generics function"><span class="token punctuation">&lt;</span>CategoryItem<span class="token punctuation">&gt;</span></span><span class="token function">initItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         List<span class="token generics function"><span class="token punctuation">&lt;</span>BookShelf<span class="token punctuation">&gt;</span></span> bookShelves<span class="token operator">=</span><span class="token function">initData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         List<span class="token generics function"><span class="token punctuation">&lt;</span>CategoryItem<span class="token punctuation">&gt;</span></span> items<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span> bookShelves<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>             BookShelf bookShelf<span class="token operator">=</span> bookShelves<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>              CategoryItem categoryItem<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">CategoryItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             categoryItem<span class="token punctuation">.</span><span class="token function">setIndex</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>             categoryItem<span class="token punctuation">.</span><span class="token function">setShow</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             categoryItem<span class="token punctuation">.</span><span class="token function">setCategoryName</span><span class="token punctuation">(</span>bookShelf<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             categoryItem<span class="token punctuation">.</span><span class="token function">setChildBookItems</span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token class-name">ArrayList</span><span class="token generics function"><span class="token punctuation">&lt;</span>ChildBookItem<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             items<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>categoryItem<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span> items<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220722/ab8e4050bc2012a18afbf4e10ac83389.jpg" alt="RecyclerView单层RecyclerView实现点击展开、折叠效果"><br /> 此时的items包含了三条数据，均为父item类型</p> <h4><a id="23__itemAdapterViewHolder_82" rel="nofollow"></a>2.3 根据item的不同，在Adapter中调用不同的ViewHolder</h4> <p>BookViewHolder与CategoryViewHolder均为继承BaseViewHolder的ViewHolder，可在两个文件中分别进行item相关UI展示。<br /> 下边为Adapter部分关键代码：</p> <pre><code class="prism language-java"><span class="token keyword">public</span> BaseViewHolder<span class="token function">onCreateViewHolder</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> ViewGroup viewGroup<span class="token punctuation">,</span><span class="token keyword">int</span> i<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">switch</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">case</span> TYPE_CATEGORY<span class="token operator">:</span><span class="token keyword">return</span><span class="token keyword">new</span><span class="token class-name">CategoryViewHolder</span><span class="token punctuation">(</span>LayoutInflater<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>viewGroup<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>layout_category_item<span class="token punctuation">,</span> viewGroup<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">case</span> TYPE_BOOK<span class="token operator">:</span><span class="token keyword">return</span><span class="token keyword">new</span><span class="token class-name">BookViewHolder</span><span class="token punctuation">(</span>LayoutInflater<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>viewGroup<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>layout_item_book<span class="token punctuation">,</span> viewGroup<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token keyword">return</span><span class="token keyword">new</span><span class="token class-name">BaseViewHolder</span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token class-name">LinearLayout</span><span class="token punctuation">(</span>viewGroup<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span><span class="token keyword">void</span><span class="token function">bindView</span><span class="token punctuation">(</span>List list<span class="token punctuation">,</span> Object obj<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span><span class="token keyword">int</span><span class="token function">getItemViewType</span><span class="token punctuation">(</span><span class="token keyword">int</span> position<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         Object obj<span class="token operator">=</span> mDatas<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>obj<span class="token keyword">instanceof</span><span class="token class-name">CategoryItem</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span> TYPE_CATEGORY<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token keyword">if</span><span class="token punctuation">(</span>obj<span class="token keyword">instanceof</span><span class="token class-name">ChildBookItem</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span> TYPE_BOOK<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span><span class="token keyword">void</span><span class="token function">onBindViewHolder</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> BaseViewHolder baseViewHolder<span class="token punctuation">,</span><span class="token keyword">int</span> i<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         baseViewHolder<span class="token punctuation">.</span><span class="token function">bindView</span><span class="token punctuation">(</span>mDatas<span class="token punctuation">,</span> mDatas<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <h2><a id="3__119" rel="nofollow"></a>3 点击操作</h2> <h4><a id="31_item_120" rel="nofollow"></a>3.1 展开子item</h4> <blockquote> <p>mList.addAll(mSelectedPosition + 1, childBookItems)：将ChildBookItem集合加入到适配器绑定数据集合中，位置在刚刚点击的父item后一位；<br /> mSelectedPosition：为刚刚点击的父item的position；<br /> categoryItem.setChildBookItems(childBookItems)：确定父item与子item集合的对应关系，方便后边折叠item时候直接从mList中删除此集合。</p> </blockquote> <pre><code class="prism language-java"><span class="token comment">// 展开子item</span><span class="token keyword">private</span><span class="token keyword">void</span><span class="token function">addChildItems</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         List<span class="token generics function"><span class="token punctuation">&lt;</span>String<span class="token punctuation">&gt;</span></span> bookList<span class="token operator">=</span> mDatas<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBooks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         List<span class="token generics function"><span class="token punctuation">&lt;</span>ChildBookItem<span class="token punctuation">&gt;</span></span> childBookItems<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span> bookList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>             ChildBookItem item<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">ChildBookItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             item<span class="token punctuation">.</span><span class="token function">setBookName</span><span class="token punctuation">(</span>bookList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             childBookItems<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>         mList<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>mSelectedPosition<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> childBookItems<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 添加子item</span>         CategoryItem categoryItem<span class="token operator">=</span><span class="token punctuation">(</span>CategoryItem<span class="token punctuation">)</span> mList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>mSelectedPosition<span class="token punctuation">)</span><span class="token punctuation">;</span>         categoryItem<span class="token punctuation">.</span><span class="token function">setChildBookItems</span><span class="token punctuation">(</span>childBookItems<span class="token punctuation">)</span><span class="token punctuation">;</span>         mAdapter<span class="token punctuation">.</span><span class="token function">notifyDataSetChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <p>若此时点击最后一个父item，可看到mList中前三条数据为CategoryItem类型；后五条数据为ChildBookItem类型，并与第三条CategoryItem的子item列表内容相同。<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220722/40efef494c349f37c56495e550ff47a0.jpg" alt="RecyclerView单层RecyclerView实现点击展开、折叠效果"></p> <h4><a id="32_item_145" rel="nofollow"></a>3.2 折叠子item</h4> <blockquote> <p>mList.removeAll(item.getChildBookItems())： 由于之前展开item的时候已经设置好了CategoryItem与ChildBookItem之间的对应关系，所以可通过此行代码直接从mList中删除子item。</p> </blockquote> <pre><code class="prism language-java"><span class="token keyword">private</span><span class="token keyword">void</span><span class="token function">removeChildItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         CategoryItem item<span class="token operator">=</span><span class="token punctuation">(</span>CategoryItem<span class="token punctuation">)</span>mList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>mSelectedPosition<span class="token punctuation">)</span><span class="token punctuation">;</span>         mList<span class="token punctuation">.</span><span class="token function">removeAll</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">getChildBookItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         item<span class="token punctuation">.</span><span class="token function">setChildBookItems</span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token class-name">ArrayList</span><span class="token generics function"><span class="token punctuation">&lt;</span>ChildBookItem<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         mAdapter<span class="token punctuation">.</span><span class="token function">notifyDataSetChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <h2><a id="4_demo_159" rel="nofollow"></a>4 demo下载</h2> <p>可在<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://download.csdn.net/download/qq_31573123/11812750"  rel="nofollow">这里下载单层RecyclerView实现点击展开、折叠效果的demo</a></p> </div> 			
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-687.htm">【C++】类和对象 — 初识类和对象（上篇）</a></p>
                                                <p>下一个：<a href="/html/category/article-689.htm">JVM系列：jinfo命令详解</a></p>
                                            </div>

                                    </div>
                <div class="col-md-3">
                	<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-1915.htm" title="vue npm run lint修改错误配置">vue npm run lint修改错误配置</a></li>
                        <li class="py-2"><a href="/html/category/article-4326.htm" title="动物医院教案幼儿园 动物医院教案小班">动物医院教案幼儿园 动物医院教案小班</a></li>
                        <li class="py-2"><a href="/html/category/article-793.htm" title="Java中线程状态+线程安全问题+synchronized的用法详解_java_">Java中线程状态+线程安全问题+synchronized的用法详解_java_</a></li>
                        <li class="py-2"><a href="/html/category/article-1326.htm" title="go异常/错误机制（panic和error）">go异常/错误机制（panic和error）</a></li>
                        <li class="py-2"><a href="/html/category/article-4297.htm" title="延吉市安泰宠物医院电话号码是多少（延吉市安泰宠物医院电话号码是多少号）">延吉市安泰宠物医院电话号码是多少（延吉市安泰宠物医院电话号码是多少号）</a></li>
                        <li class="py-2"><a href="/html/category/article-1325.htm" title="RBAC-基于角色的访问控制详解">RBAC-基于角色的访问控制详解</a></li>
                        <li class="py-2"><a href="/html/category/article-786.htm" title="pandas读取csv文件提示字符读取失败">pandas读取csv文件提示字符读取失败</a></li>
                        <li class="py-2"><a href="/html/category/article-4100.htm" title="解决Vue Cli安装Element-plus后启动失败的问题">解决Vue Cli安装Element-plus后启动失败的问题</a></li>
                        <li class="py-2"><a href="/html/category/article-3126.htm" title="pytorch cuda上tensor的定义  以及 减少cpu操作的方法">pytorch cuda上tensor的定义  以及 减少cpu操作的方法</a></li>
                        <li class="py-2"><a href="/html/category/article-776.htm" title="vue实现文字滚动效果_vue.js">vue实现文字滚动效果_vue.js</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">8</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">54</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
        <footer class="ftco-footer ftco-section">
        <div class="container">
            <div class="row">
                <div class="col-md-12 text-center">
                    <p>
                        FinlandAddress 版权所有
                        <br />
                        Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </footer>
    <!-- loader -->
    <div id="ftco-loader" class="show fullscreen"><svg class="circular" width="48px" height="48px">
            <circle class="path-bg" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke="#eeeeee" />
            <circle class="path" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke-miterlimit="10" stroke="#F96D00" /></svg></div>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery-migrate-3.0.1.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/popper.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/bootstrap.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.easing.1.3.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.stellar.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/owl.carousel.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.magnific-popup.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.animateNumber.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/scrollax.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/main.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>