<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://finlandaddress.github.io/html/category/article-704.htm" />
    <title>Spring Boot+Mockito+JUnit中的@Mock注入@InjectMocks失效 - FinlandAddress</title>
        <meta charset="utf-8">
    <link rel="icon" href="/assets/addons/xcblog/img/finlandaddress/favicon.ico" type="image/x-icon"/>
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&display=swap" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css2?family=Raleway:wght@400;500;600;700;800;900&display=swap" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/font-awesome.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/animate.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/owl.carousel.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/owl.theme.default.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/magnific-popup.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/flaticon.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/finlandaddress/style.css" rel="stylesheet" />
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?a045e5bb3ae69629060e7ce2a4b98902";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <nav class="navbar navbar-expand-lg navbar-dark ftco_navbar ftco-navbar-light site-navbar-target" id="ftco-navbar">
        <div class="container">
                        <a class="navbar-brand" href="/">Finland Address<span></span></a>
            
            <button class="navbar-toggler js-fh5co-nav-toggle fh5co-nav-toggle" type="button" data-toggle="collapse" data-target="#ftco-nav" aria-controls="ftco-nav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="oi oi-menu"></span> MENU
            </button>
            <div class="collapse navbar-collapse" id="ftco-nav">
                <ul class="navbar-nav nav ml-auto">
                	                    <li class="nav-item"><a href="/" class="nav-link"><span>首页</span></a></li>
                                        <li class="nav-item"><a href="/html/category/" class="nav-link"><span>文章分类</span></a></li>
                                        <li class="nav-item"><a href="#" class="nav-link"><span>关于</span></a></li>
                    <li class="nav-item"><a href="#" class="nav-link"><span>联系</span></a></li>
                </ul>
            </div>
        </div>
    </nav>
    <section class="hero-wrap" style="height:350px;overflow: hidden;">
        <div class="overlay"></div>
        <div class="container-fluid px-0">
            <div class="row d-md-flex no-gutters slider-text align-items-center js-fullheight justify-content-end">
                <img class="one-third js-fullheight align-self-end order-md-last img-fluid" src="/assets/addons/xcblog/img/finlandaddress/undraw_book_lover_mkck.svg" alt="" style="opacity: 0.5;">
                <div class="one-forth d-flex align-items-center ftco-animate js-fullheight">
                    <div class="text" style="top: 30%;min-width: 70%;">
                        <h1>Spring Boot+Mockito+JUnit中的@Mock注入@InjectMocks失效</h1>
                        <p>
                            <a href="/">首页</a> / <a href="/html/category/">文章分类</a> / <span>正文</span>
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <section class="ftco-about img ftco-section" id="about-section">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                	  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <h2 id="问题描述">问题描述</h2> <p>测试代码如下：</p> <pre class="prettyprint"><code class="hljs java"><span class="hljs-annotation">@RunWith</span>(SpringRunner.class) <span class="hljs-annotation">@SpringBootTest</span> <span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CheckConfirmPayServiceTest</span> {<!-- --></span>      <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> Logger logger = LoggerFactory.getLogger(CheckConfirmPayServiceTest.class);      <span class="hljs-annotation">@Mock</span>     <span class="hljs-keyword">private</span> CashierService cashierService;      <span class="hljs-annotation">@Autowired</span>     <span class="hljs-annotation">@InjectMocks</span> <span class="hljs-comment">// 被注入mock对象的类一般是被测试类</span>     <span class="hljs-keyword">private</span> CheckConfirmPayService checkConfirmPayService;      <span class="hljs-annotation">@Autowired</span>     <span class="hljs-keyword">private</span> TScanStatementJobMapper tScanStatementJobMapper;       <span class="hljs-keyword">private</span> String jobFlowNo = FlowNoUtil.getTxNo();      <span class="hljs-keyword">private</span> String sysOrderNo = <span class="hljs-string">"S"</span> + FlowNoUtil.getTxNo();      <span class="hljs-annotation">@Before</span>     <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setUp</span>() <span class="hljs-keyword">throws</span> Exception {         <span class="hljs-comment">// Mock</span>         MockitoAnnotations.initMocks(<span class="hljs-keyword">this</span>);         Mockito.doAnswer(<span class="hljs-keyword">new</span> Answer&lt;Object&gt;() {             <span class="hljs-annotation">@Override</span>             <span class="hljs-keyword">public</span> Object <span class="hljs-title">answer</span>(InvocationOnMock invocation) {                 Object[] args = invocation.getArguments();                 CashierCheckConfirmPayRequest request = (CashierCheckConfirmPayRequest) args[<span class="hljs-number">0</span>];                 logger.info(<span class="hljs-string">"=====Mock 接口测试====="</span>);                 CashierCheckConfirmPayResponse response = <span class="hljs-keyword">new</span> CashierCheckConfirmPayResponse();                 <span class="hljs-keyword">if</span> (request == <span class="hljs-keyword">null</span>) {                     <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> BizException(ErrorCodeEnum.NULL_POINTER_EXCEPTION.code,                             ErrorCodeEnum.NULL_POINTER_EXCEPTION.msg);                 }                 response.setReqsysNo(request.getReqsysNo());                 response.setVersion(request.getVersion());                 <span class="hljs-keyword">return</span> response;             }         }).when(cashierService).checkConfirmPay(Mockito.any(CashierCheckConfirmPayRequest.class));         insertTScanStatementJob();     }      <span class="hljs-javadoc">/**      * 插入对账状态数据      *      *<span class="hljs-javadoctag"> @author</span> shenhaiwen      *<span class="hljs-javadoctag"> @time</span> 2018年8月27日 下午2:12:31      */</span>     <span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">insertTScanStatementJob</span>() {         String checkDate = TimeUtil.addDays(-<span class="hljs-number">1</span>); <span class="hljs-comment">// 当前日期前一天</span>         TScanStatementJob job = <span class="hljs-keyword">new</span> TScanStatementJob();         job.setJobFlowNo(jobFlowNo);         job.setCheckDate(checkDate);         job.setStatementFlag(StatementFlagEnum.FINISH.getCode());         job.setCreateTime(TimeUtil.getTimeStamp());         job.setUpdateTime(TimeUtil.getTimeStamp());         job.setRemark(<span class="hljs-string">"单元测试数据"</span>);         tScanStatementJobMapper.insert(job);     }      <span class="hljs-annotation">@After</span>     <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">delData</span>() {         tScanStatementJobMapper.deleteByPrimaryKey(jobFlowNo);     }      <span class="hljs-javadoc">/**      * 批量处理确认支付场景      *      *<span class="hljs-javadoctag"> @author</span> shenhaiwen      *<span class="hljs-javadoctag"> @time</span> 2018年8月4日 上午11:26:16      */</span>     <span class="hljs-annotation">@Test</span>     <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">testRemoteCheckConfirmPay</span>() {         CallBackStatusEnum callBackStatusEnum = <span class="hljs-keyword">null</span>;         <span class="hljs-keyword">try</span> {             callBackStatusEnum = checkConfirmPayService.remoteCheckConfirmPay();         } <span class="hljs-keyword">catch</span> (Exception e) {             TestCase.fail();         }         TestCase.assertEquals(CallBackStatusEnum.SUCCESS.getStatus(), callBackStatusEnum.getStatus());      } </code></pre> <p>测试类里将cashierService对象mock后注入到checkConfirmPayService中,然后在测试方法中执行cashierService的方法。</p> <p><strong>但是现在问题是checkConfirmPayService的cashierService属性没有被@Mock标签注入,而是调用了@Autowired标签,用的是spring生成的bean 而不是mock的cashierService.</strong></p> <p>运行结果如下：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230119/3213a9c711283d481792d1db30834cdd.jpg" alt="Spring Boot+Mockito+JUnit中的@Mock注入@InjectMocks失效"></p> <h2 id="问题原因">问题原因</h2> <p>当前版本只支持setter 的方式进行注入，Mockito 首先尝试类型注入，如果有多个类型相同的mock 对象，那么它会根据名称进行注入。当注入失败的时候Mockito不会抛出任何异常，所以你可能需要手动去验证它的安全性。</p> <p>因此需要在checkConfirmPayService中对cashierService采用setter 的方式进行注入，示例代码代码如下：</p> <pre class="prettyprint"><code class="hljs java"><span class="hljs-annotation">@Before</span>     <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setUp</span>() <span class="hljs-keyword">throws</span> Exception {         <span class="hljs-comment">// Mock</span>         MockitoAnnotations.initMocks(<span class="hljs-keyword">this</span>);         checkConfirmPayService.setCashierService(cashierService);         ............</code></pre> <p>测试如预期进入cashierService的mock中，如下所示：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230119/3d7bf0cbfe34ab868f697d31f81b7994.jpg" alt="Spring Boot+Mockito+JUnit中的@Mock注入@InjectMocks失效"></p> </p></div> 			
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-703.htm">VUE绑定事件案例—文字跑马灯效果</a></p>
                                                <p>下一个：<a href="/html/category/article-705.htm">解决Error response from daemon: Get https://registry-1.docker.io/v2/library/hello-world/manifests/问题</a></p>
                                            </div>

                                    </div>
                <div class="col-md-3">
                	<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-7262.htm" title="宠物寄养市场需求（宠物寄养市场需求大吗）">宠物寄养市场需求（宠物寄养市场需求大吗）</a></li>
                        <li class="py-2"><a href="/html/category/article-7538.htm" title="领养宠物狗app（领养宠物狗免费的地方）">领养宠物狗app（领养宠物狗免费的地方）</a></li>
                        <li class="py-2"><a href="/html/category/article-7400.htm" title="北京正规免费领养宠物的地方（北京有免费领养宠物狗的地方）">北京正规免费领养宠物的地方（北京有免费领养宠物狗的地方）</a></li>
                        <li class="py-2"><a href="/html/category/article-7492.htm" title="北欧风格家具品牌有哪些(北欧风格家具品牌有哪些牌子)">北欧风格家具品牌有哪些(北欧风格家具品牌有哪些牌子)</a></li>
                        <li class="py-2"><a href="/html/category/article-7814.htm" title="宠康动物诊所（宠康动物医院怎么样）">宠康动物诊所（宠康动物医院怎么样）</a></li>
                        <li class="py-2"><a href="/html/category/article-7999.htm" title="动物疫苗种类及类型分类图片 动物疫苗种类及类型分类图片大全">动物疫苗种类及类型分类图片 动物疫苗种类及类型分类图片大全</a></li>
                        <li class="py-2"><a href="/html/category/article-8320.htm" title="动物注射的注意事项是什么（动物注射实验报告）">动物注射的注意事项是什么（动物注射实验报告）</a></li>
                        <li class="py-2"><a href="/html/category/article-8459.htm" title="钢琴哪一个牌子比较好(钢琴哪个牌子好性价比高)">钢琴哪一个牌子比较好(钢琴哪个牌子好性价比高)</a></li>
                        <li class="py-2"><a href="/html/category/article-8321.htm" title="宠物手工零食如何赚钱呢 宠物手工零食如何赚钱呢视频">宠物手工零食如何赚钱呢 宠物手工零食如何赚钱呢视频</a></li>
                        <li class="py-2"><a href="/html/category/article-8367.htm" title="美联众合动物医院望京电话 美联众合动物医院望京西路">美联众合动物医院望京电话 美联众合动物医院望京西路</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">54</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
        <footer class="ftco-footer ftco-section">
        <div class="container">
            <div class="row">
                <div class="col-md-12 text-center">
                    <p>
                        FinlandAddress 版权所有
                        <br />
                        Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </footer>
    <!-- loader -->
    <div id="ftco-loader" class="show fullscreen"><svg class="circular" width="48px" height="48px">
            <circle class="path-bg" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke="#eeeeee" />
            <circle class="path" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke-miterlimit="10" stroke="#F96D00" /></svg></div>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery-migrate-3.0.1.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/popper.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/bootstrap.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.easing.1.3.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.stellar.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/owl.carousel.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.magnific-popup.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/jquery.animateNumber.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/scrollax.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/finlandaddress/main.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>